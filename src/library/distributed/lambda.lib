(:name C-R
:type ABBR
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA R(OTT) DIAM R(OTT)"
:needed-objects   (DIAM)
:mhelp "Church-Rosser property, assuming R is transitive and reflexive"
:other-attributes ((TYPE "O(OTT)") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name CHURCH-ROSSER
:type ABBR
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA R(OTT) DIAMOND.RTCL R(OTT)"
:needed-objects   (RTCL DIAMOND)
:mhelp ""
:other-attributes ((TYPE "O(OTT)") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name CHURCH-ROSSER-THM-2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL R(OTT).CHURCH-ROSSER R(OTT) IMPLIES FORALL M(T) FORALL N(T).EQCL R(OTT) M(T) N(T) IMPLIES COMMON-REWRITE [RTCL R(OTT)] M(T) N(T)"
:needed-objects   (RTCL CHURCH-ROSSER EQCL COMMON-REWRITE)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name COMMON-REWRITE
:type ABBR
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA R(OTT) LAMBDA x(T) LAMBDA y(T) EXISTS D(T).R(OTT) x(T) D(T) AND R(OTT) y(T) D(T)"
:needed-objects   NIL
:mhelp ""
:other-attributes ((TYPE "OTT(OTT)") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name DIAM
:type ABBR
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA R(OTT) FORALL A(T) FORALL B(T) FORALL C(T).R(OTT) A(T) B(T) AND R(OTT) A(T) C(T) IMPLIES COMMON-REWRITE R(OTT) B(T) C(T)"
:needed-objects   (COMMON-REWRITE)
:mhelp ""
:other-attributes ((TYPE "O(OTT)") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name DIAMOND
:type ABBR
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA R(OTT) FORALL A(T) FORALL B(T) FORALL C(T).R(OTT) A(T) B(T) AND R(OTT) A(T) C(T) IMPLIES EXISTS D(T).R(OTT) B(T) D(T) AND R(OTT) C(T) D(T)"
:needed-objects   NIL
:mhelp ""
:other-attributes ((TYPE "O(OTT)") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name EQ*
:type ABBR
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA R(OTT) LAMBDA x(T) LAMBDA y(T) FORALL P(OTT).R(OTT) SUBRELATION(O(OTT)(OTT)) P(OTT) AND SYMMETRIC(O(OTT)) P(OTT) AND FORALL A(T) FORALL B(T) [EXISTS w(T) [P(OTT) A(T) w(T) AND P(OTT) w(T) B(T)] IMPLIES P(OTT) A(T) B(T)] IMPLIES P(OTT) x(T) y(T)"
:needed-objects   (SUBRELATION SYMMETRIC)
:mhelp "Equivalence relation generated by R, on the domain of R."
:other-attributes ((FO-SINGLE-SYMBOL T) (PRINTNOTYPE T) (TYPE "OTT(OTT)"))
:other-remarks "
")


(:name EQCL
:type ABBR
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA R(OTT) LAMBDA x(T) LAMBDA y(T) FORALL P(OTT).RTCL R(OTT) SUBRELATION(O(OTT)(OTT)) P(OTT) AND SYMMETRIC(O(OTT)) P(OTT) AND FORALL A(T) FORALL B(T) [EXISTS w(T) [P(OTT) A(T) w(T) AND P(OTT) w(T) B(T)] IMPLIES P(OTT) A(T) B(T)] IMPLIES P(OTT) x(T) y(T)"
:needed-objects   (RTCL SUBRELATION SYMMETRIC)
:mhelp "Equivalence relation generated by RTCL"
:other-attributes ((TYPE "OTT(OTT)") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name RTCL
:type ABBR
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA R(OTT) LAMBDA x(T) LAMBDA y(T) FORALL Q(OTT).R(OTT) SUBRELATION(O(OTT)(OTT)) Q(OTT) AND TRANSITIVE(O(OTT)) Q(OTT) AND REFLEXIVE(O(OTT)) Q(OTT) IMPLIES Q(OTT) x(T) y(T)"
:needed-objects   (SUBRELATION TRANSITIVE REFLEXIVE)
:mhelp "Reflexive Transitive Closure"
:other-attributes ((TYPE "OTT(OTT)") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name WEAK-DIAMOND
:type ABBR
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA R(OTT) FORALL A(T) FORALL B(T) FORALL C(T).R(OTT) A(T) B(T) AND R(OTT) A(T) C(T) IMPLIES EXISTS D(T).RTCL R(OTT) B(T) D(T) AND RTCL R(OTT) C(T) D(T)"
:needed-objects   (RTCL)
:mhelp ""
:other-attributes ((TYPE "O(OTT)") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


