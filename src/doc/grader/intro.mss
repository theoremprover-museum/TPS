@ChapBTPS(Introduction)

@GRADER is a computer program that can be used to maintain, compute,
analyze, and print information about grades.  It provides an efficient
means of recording grades, and can save many precious end-of-semester
hours by quickly and accurately calculating, ordering, displaying, and
printing grades, means and other statistics.  It can also assign
letter grades in accordance with the numerical intervals selected by
the teacher, and print these grades with the names of the students.

@GRADER is easy to use, and generally prompts the user for 
required inputs. The easiest way to learn to use it is to just start
and proceed step-by-step.

@GRADER was designed to process the scores automatically generated by
@ETPS, a logic-teaching system at Carnegie-Mellon University.  @GRADER
could also be used to process scores from other teaching programs
which create records in a suitable format.  The ability to incorporate
records from teaching programs is one of the most attractive features
of @GRADER. The growing popularity of computer-assisted instruction
will make grading packages with this feature more desirable, and
perhaps indispensable. However, @GRADER is also useful for courses
which do not involve computers in any way.

@GRADER is written in the Common Lisp computer language and within
a stripped-down version of @ETPS. It will thus accept not
only @GRADER commands, but also @Lisp expressions.
However, you need not know anything about @LISP to use @GRADER.

If you have comments or suggestions concerning @GRADER or this manual,
please contact Professor Peter Andrews in the Mathematics Department
of Carnegie Mellon University, or send email to
Andrews@@CMU.EDU.

In this manual, program variables will be printed in @p(bold italics).
Commands will be printed in @cb(BOLD CAPITALS).
Textual variables will be in @i(italics), and explicit values in
@t(typewriter face). @GRADER itself disregards the case of characters.
@begin(hand) Wherever a @Grader command is described, the 
hand (as appears to the left) will point it out to you. @end(hand)
