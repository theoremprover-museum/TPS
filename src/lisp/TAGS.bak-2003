
argtyp-auto.lisp,1242
(deffile argtyp-autoargtyp-auto13,610
(deftype% etreeetree19,743
(deftype% boolean-or-abbrevlistboolean-or-abbrevlist25,859
(deftype% rewrite-defns-listrewrite-defns-list34,1184
(deftype% querytypequerytype78,3217
(deftype% leaftypeleaftype85,3466
(deftype% searchtypesearchtype101,4188
(deftype% nat-etree-version-typenat-etree-version-type110,4729
(deftype% mate-commandmate-command119,5023
(deftype% gwff0gwff0125,5148
(deftype% eproofeproof135,5560
(deftype% gwff0-or-eproofgwff0-or-eproof150,5965
(deftype% gwff0-or-label-or-eproofgwff0-or-label-or-eproof160,6302
(deftype% matingpairmatingpair180,7229
(deflisttype matingpairlist matingpairlist187,7542
(deftype% mt-subsumptionmt-subsumption189,7583
(deftype% obdefaultobdefault201,8057
(deftype% matingstreematingstree211,8488
(deftype% verboseverbose218,8643
(deftype% tactic-exptactic-exp229,9071
(deftype% tactic-usetactic-use241,9462
(deftype% tactic-modetactic-mode252,9812
(deflisttype anything-list anything-list264,10200
(defconstype subst-pair subst-pair268,10257
(deflisttype subst-alist subst-alist271,10337
(defconstype symbol-data-pair symbol-data-pair275,10434
(deflisttype symbol-data-list symbol-data-list278,10523

argtyp.lisp,5137
(deffile argtypargtyp13,606
(defcategory argtypeargtype23,839
(defmacro deftype% deftype%39,1240
(defmacro deflisttype deflisttype103,3440
(defutil deflisttypedeflisttype134,4554
(defmacro defconstype defconstype154,5386
(defutil defconstypedefconstype190,6605
(deftype% anythinganything200,6861
(deftype% symbolsymbol206,7035
(deftype% symbol-or-integersymbol-or-integer212,7180
(deftype% stringstring218,7401
(deftype% booleanboolean224,7522
(deftype% integer+integer+230,7731
(deftype% posnumberposnumber236,7875
(deftype% posintegerposinteger242,8028
(deflisttype posintegerlist posintegerlist248,8174
(deftype% yesnoyesno250,8215
(deftype% updownupdown262,8727
(deftype% null-or-posintegernull-or-posinteger274,9248
(deftype% null-or-integernull-or-integer281,9465
(defconstant infinity infinity289,9733
(defmacro infinite-p infinite-p291,9767
(deftype% integer+-or-infinityinteger+-or-infinity294,9822
(defun get-integer+-or-infinity get-integer+-or-infinity300,10058
(deftype% posinteger-or-infinityposinteger-or-infinity308,10359
(defun get-posinteger-or-infinity get-posinteger-or-infinity314,10598
(deftype% rrulerrule327,10954
(deflisttype rrulelist rrulelist333,11103
(deftype% theorytheory335,11169
(deftype% ed-commanded-command343,11327
(deftype% msglistmsglist350,11516
(deflisttype msglistlist msglistlist357,11776
(deflisttype anylist anylist362,11893
(deflisttype symbollist symbollist365,11947
(deftype% subjectsubject368,12013
(deflisttype subjectlist subjectlist374,12166
(deftype% tps-modetps-mode380,12406
(deftype% dev-styledev-style387,12616
(deftype% modes-gwffsmodes-gwffs396,12892
(deftype% lib-argtypelib-argtype406,13189
(deftype% lib-argtype-or-nillib-argtype-or-nil415,13463
(deftype% gwff-propgwff-prop426,13925
(deflisttype gwff-prop-list gwff-prop-list452,15352
(deftype% keyword-propkeyword-prop471,16281
(deflisttype keyword-list keyword-list483,16617
(deflisttype tpsflaglist tpsflaglist486,16742
(deflisttype stringlist stringlist487,16776
(deflisttype stringlistlist stringlistlist488,16837
(deflisttype lib-argtype-list lib-argtype-list489,16915
(deflisttype filespeclist filespeclist491,17032
(deftype% lisp-packagelisp-package495,17094
(deflisttype lisp-package-list lisp-package-list502,17322
(deftype% filespecfilespec507,17442
(deftype% dirspecdirspec513,17593
(deflisttype dirspeclist dirspeclist520,17764
(deftype% gwffalistgwffalist524,17821
(deflisttype help*-list help*-list534,18170
(deflisttype symbol-or-integer-list symbol-or-integer-list537,18277
(deftype% go-instructgo-instruct541,18356
(deftype% exec-formexec-form548,18556
(deftype% print-functionprint-function556,18782
(definfo prfw-^pprfw-^p562,19015
(definfo prfw-^pnprfw-^pn567,19206
(definfo prfw-pallprfw-pall573,19486
(deflisttype print-function-list print-function-list578,19652
(deftype% lineline584,19899
(deflisttype linelist linelist591,20059
(deftype% existing-lineexisting-line594,20147
(deflisttype existing-linelist existing-linelist601,20393
(deftype% plinepline604,20479
(deftype% occlistocclist611,20661
(deftype% line-rangeline-range618,20867
(deflisttype line-range-list line-range-list630,21414
(deftype% ignoreignore636,21566
(deftype% indentationindentation645,21863
(deftype% wffsetwffset656,22269
(deftype% justificationjustification664,22498
(deftype% rlinerline670,22685
(deflisttype rlinelist rlinelist676,22815
(deftype% lvarconstlvarconst679,22903
(deftype% repsymrepsym687,23134
(deftype% tpsflagtpsflag695,23265
(defconstype flag-and-val flag-and-val701,23415
(deflisttype fv-list fv-list704,23514
(deftype% theoremtheorem709,23630
(deflisttype theoremlist theoremlist725,24221
(deftype% lib-theoremlib-theorem727,24286
(deftype% book-theorembook-theorem733,24419
(deftype% exerciseexercise739,24547
(deftype% practicepractice748,24783
(deftype% test-problemtest-problem754,24904
(deftype% rewrite-defnsrewrite-defns765,25177
(deftype% weak-labelweak-label788,26255
(deflisttype weak-label-list weak-label-list794,26363
(deftype% gwffgwff799,26462
(deftype% gwff-illgwff-ill806,26656
(deftype% gwff0gwff0812,26845
(defvar *last-gwff-typed* *last-gwff-typed*820,27071
(deftype% gwff0-or-labelgwff0-or-label823,27210
(deftype% gvargvar835,27699
(deflisttype gvarlist gvarlist842,27896
(deflisttype occ-list occ-list845,28005
(deftype% typesymtypesym849,28126
(defconstype typesym-cons typesym-cons855,28262
(deflisttype typealist typealist858,28347
(deflisttype typesymlist typesymlist861,28424
(deftype% typesym-niltypesym-nil864,28514
(deflisttype typesymlist-nil typesymlist-nil873,28872
(deflisttype gwfflist gwfflist878,28998
(defconstype gwffpair gwffpair881,29092
(deflisttype gwffpairlist gwffpairlist884,29192
(defvar global-ordercomlist)global-ordercomlist887,29298
(deftype% ordercomordercom889,29328
(deftype% jformjform898,29623
(deftype% vpformatvpformat904,29741
(deftype% vpstylevpstyle924,30625
(deftype% fontsizestringfontsizestring941,31322

argtyp-maint.lisp,456
(deffile argtyp-maintargtyp-maint13,609
(deftype% context context19,736
(deflisttype contextlist contextlist25,849
(deftype% tpscat tpscat35,1303
(deflisttype tpscatlist tpscatlist41,1444
(deflisttype dev-stylelist dev-stylelist51,1827
(defconstype symbolpair symbolpair55,1929
(deflisttype symbolpairlist symbolpairlist56,2016
(deftype% tps-moduletps-module60,2139
(deflisttype modulelist modulelist66,2275
(deftype% rulerule78,2745

boot0.lisp,4485
(defmacro make-pathname% make-pathname%16,711
(defun make-pathname% make-pathname%30,1357
(defun acons acons64,2429
(defun accessible-p accessible-p69,2531
(defun shadow-copy shadow-copy76,2868
(defun compile-warn-obsolete compile-warn-obsolete94,3595
(defmacro putprop putprop100,3748
(defmacro memq memq106,3953
(defmacro memq memq109,4029
(defun memq memq112,4131
(defmacro %catch% %catch%118,4366
(defmacro expand-%catch% expand-%catch%138,5363
(defun found-expand-catch-throw-inside found-expand-catch-throw-inside155,5877
(defmacro plist plist158,5991
(defmacro fixp fixp160,6042
(defmacro pairp pairp162,6082
(defun status-date status-date164,6126
(defun status-daytime status-daytime173,6514
(defmacro conc-strings conc-strings182,6807
(defun conc-stringlist conc-stringlist186,6914
(defun conc-names conc-names193,7097
(defun collapse-face collapse-face213,7886
(defmacro prepend prepend216,7952
(defun dsubst dsubst220,8011
(defun expand-ex expand-ex256,8942
(defun expand-set-of expand-set-of264,9186
(defmacro for-each for-each273,9480
(defmacro exists exists275,9526
(defmacro forall forall277,9576
(defmacro set-of set-of279,9627
(defmacro copy copy281,9675
(defun tab tab285,9754
(defmacro tabx tabx287,9804
(defmacro spaces spaces292,9958
(defmacro neq neq294,10020
(defmacro %throw% %throw%296,10078
(defmacro throwfail throwfail299,10139
(defmacro throwfail-on throwfail-on313,10533
(defun prinlc prinlc322,10909
(defmacro flatc flatc324,10958
(deftype tps-string-char tps-string-char327,11049
(defmacro tps-ascii tps-ascii329,11090
(defun setdiff setdiff333,11187
(defmacro setintersect setintersect337,11265
(defmacro max-with-key max-with-key339,11322
(defmacro apply-fn-with-key apply-fn-with-key346,11510
(defun alphalessp alphalessp353,11708
(defun tyo tyo360,11929
(defmacro msg msg363,12008
(defmacro ttymsg ttymsg397,13113
(defmacro complain complain400,13161
(defmacro tps-warning tps-warning403,13207
(defmacro msgf msgf405,13272
(defvar global-categorylist global-categorylist422,13578
(defvar current-context current-context424,13644
(defvar load-warn-p load-warn-p426,13674
(defvar global-definelistglobal-definelist428,13739
(defun prop-error prop-error438,13964
(defun define-properties define-properties444,14178
(defmacro defcategory defcategory491,16194
(defun define-fn-props define-fn-props616,20486
(defun read-fn-prop read-fn-prop627,20817
(defun read-mhelp read-mhelp663,22012
(defun read-single read-single670,22267
(defun read-multiple read-multiple676,22361
(defun read-multiple-and-export read-multiple-and-export680,22453
(defun read-n-arg-fnspec read-n-arg-fnspec703,23217
(defun get-fnspec get-fnspec721,23719
(defun getargnames getargnames725,23833
(defcategory mexprmexpr740,24212
(defcategory topleveltoplevel772,25104
(defcategory utilityutility793,25615
(defcategory infoinfo805,25893
(defun context-p context-p815,26120
(defmacro context context819,26199
(defcategory contextcontext829,26503
(defcategory menumenu840,26797
(defcategory menuitemmenuitem856,27333
(defcategory tps-filetps-file872,27831
(defmacro deffile deffile889,28215
(defvar *user* *user*905,28754
(deffile boot0boot0907,28793
(defun new-filename new-filename912,28925
(defun new-tmp-filename new-tmp-filename915,28975
(defun always-true always-true918,29051
(defun always-nil always-nil923,29167
(defmacro defautoloadfn defautoloadfn931,29379
(defmacro lisp:with-open-file lisp:with-open-file942,29793
(defmacro gaps gaps952,30124
(defmacro nextplan-no nextplan-no955,30167
(defmacro line-hypotheses line-hypotheses960,30268
(defmacro line-justification line-justification963,30330
(defmacro line-just-rule line-just-rule966,30398
(defmacro line-just-terms line-just-terms969,30468
(defmacro line-just-lines line-just-lines972,30540
(defmacro line-assertion line-assertion975,30613
(defmacro line-support line-support978,30673
(defmacro line-linenumber line-linenumber981,30729
(defmacro proof-lines proof-lines984,30793
(defmacro proof-plans proof-plans987,30848
(defmacro proof-linealiases proof-linealiases990,30903
(defmacro proof-key proof-key993,30970
(defmacro proof-assertion proof-assertion996,31021
(defmacro proof-nodealiases proof-nodealiases999,31084
(defmacro line-mating line-mating1002,31151
(defmacro line-node line-node1005,31207

boot1.lisp,3839
(deffile boot1boot114,678
(defcategory modulemodule26,971
(defmacro defunobsolete defunobsolete41,1295
(defun module-package module-package55,1808
(defunobsolete find-pack-package find-pack-package59,1932
(defun module-p module-p61,1982
(defunobsolete package-p package-p62,2029
(defun module-loaded-p module-loaded-p64,2065
(defunobsolete loaded-package-p loaded-package-p69,2247
(defun module-needed-modules module-needed-modules71,2297
(defun module-macro-files module-macro-files73,2367
(defun module-files module-files75,2431
(defun module-mhelp module-mhelp77,2483
(defun module-lisp-pack module-lisp-pack79,2535
(defsetf module-needed-modules module-needed-modules82,2596
(defsetf module-macro-files module-macro-files84,2696
(defsetf module-files module-files86,2790
(defsetf module-mhelp module-mhelp88,2872
(defsetf module-lisp-pack module-lisp-pack90,2954
(defun sys-load-module sys-load-module94,3046
(defunobsolete sys-load-package sys-load-package115,3865
(defun load-macro-files load-macro-files117,3915
(defcategory lisp-packlisp-pack142,4879
(defmacro def-lisp-package def-lisp-package153,5158
(defun load-modules load-modules169,5595
(defun load-module load-module176,5783
(defunobsolete load-package load-package181,5975
(defun sys-load sys-load183,6017
(defun load-all-modules load-all-modules187,6121
(defun load-all-modules-except load-all-modules-except195,6390
(defmacro part-of part-of208,6860
(defun needed-macro-files needed-macro-files210,6922
(defun needed-mfs needed-mfs216,7141
(defun module-help module-help229,7521
(defunobsolete package-help package-help233,7705
(defun organize-all organize-all236,7748
(defun reorganize reorganize241,7875
(defun unique-sort unique-sort247,8061
(defun context< context<257,8372
(defun organize-cat-contxt organize-cat-contxt264,8639
(defmacro categ-context categ-context272,8976
(defun organize-global-list organize-global-list275,9074
(defun mhelp-file mhelp-file303,9966
(defun split-list split-list317,10474
(defun reorganize-global-list reorganize-global-list327,10922
(defmacro destructive-push destructive-push350,11872
(defun insert-context insert-context355,12010
(defun insert-object insert-object368,12442
(defutil for-eachfor-each380,12813
(defutil set-ofset-of390,13168
(defutil copycopy399,13448
(defutil %catch%%catch%406,13616
(defutil %throw%%throw%413,13764
(defutil throwfailthrowfail420,13912
(defutil msgmsg429,14146
(defutil msgfmsgf450,14968
(defutil ttymsgttymsg456,15132
(defutil complaincomplain462,15316
(defutil tps-warningtps-warning470,15610
(defvar compiled-dir compiled-dir479,15899
(defvar *source-files-only* *source-files-only*480,15925
(defvar *only-sources* *only-sources*481,15958
(defvar *qload-compile* *qload-compile*482,15986
(defvar expertflag expertflag483,16015
(defun locate-file locate-file488,16109
(defvar *found-compiled-file* *found-compiled-file*518,17126
(defun locate-file locate-file521,17171
(defvar smart-load smart-load559,18418
(defvar building-finish-time building-finish-time560,18442
(defun locate-tps-file locate-tps-file562,18477
(defun find-lisp-package find-lisp-package596,19666
(defvar *allow-compile-source* *allow-compile-source*602,19857
(defvar *always-compile-source-if-newer* *always-compile-source-if-newer*609,20085
(defun tload tload611,20132
(defun qload qload634,20982
(defun cload cload648,21543
(defun cload-aux cload-aux654,21717
(defun cload-module cload-module666,22311
(defun cload-module cload-module701,23867
(defun cload-modules cload-modules724,24896
(defvar *command-history-counter* *command-history-counter*731,25127
(defvar auto-doc-flag auto-doc-flag733,25165
(defcategory review-subjectreview-subject736,25207

ceb-nat-etr.lisp,3166
(defflag NAT-ETREE-VERSIONNAT-ETREE-VERSION37,1411
(defmexpr pfnatpfnat64,2517
(defun ceb-nat-etree ceb-nat-etree79,3216
(defmexpr nat-etreenat-etree178,7766
(defun ceb-proof-to-natree ceb-proof-to-natree214,9388
(defun proof-line-to-natree proof-line-to-natree237,10738
(defun proof-line-to-natree-annotation proof-line-to-natree-annotation509,22091
(defun create-natree create-natree522,22636
(defun proof-line-to-natree-rewrites proof-line-to-natree-rewrites543,23376
(defun proof-line-to-natree-rewrites-1 proof-line-to-natree-rewrites-1578,24792
(defun proof-line-to-natree-rewrites-2 proof-line-to-natree-rewrites-2594,25291
(defun annotate-pf annotate-pf612,25895
(defun propagate-annotation propagate-annotation765,32665
(defun set-extraction-line set-extraction-line769,32815
(defun set-normal-line set-normal-line775,32987
(defun print-annotations print-annotations781,33155
(defun extraction-justification-p extraction-justification-p798,33685
(defun normal-justification-p normal-justification-p801,33831
(defun check-mating-exists check-mating-exists805,34028
(defun eta-normal-p eta-normal-p827,34768
(defun beta-normal-p beta-normal-p840,35183
(defun beta-eta-normal-p beta-eta-normal-p851,35459
(defvar background-eproof background-eproof868,35960
(defmexpr set-background-eproofset-background-eproof870,35992
(defun set-background-eproof set-background-eproof883,36364
(defun map-eproof map-eproof886,36432
(defun map-to-corresponding-nodes map-to-corresponding-nodes938,38263
(defun map-to-corresponding-nodes-1 map-to-corresponding-nodes-1945,38496
(defun map-to-corresponding-nodes-2 map-to-corresponding-nodes-2951,38721
(defmexpr eliminate-conj*-rulep-appseliminate-conj*-rulep-apps986,39761
(defun eliminate-conj*-rulep-apps eliminate-conj*-rulep-apps1009,40744
(defun eliminate-iconj*-rulep-app eliminate-iconj*-rulep-app1036,41759
(defun eliminate-econj*-rulep-app eliminate-econj*-rulep-app1048,42229
(defun iconj*-rulep-app-p iconj*-rulep-app-p1060,42742
(defun premisses-cover-conjuncts-p premisses-cover-conjuncts-p1063,42828
(defun econj*-rulep-app-p econj*-rulep-app-p1069,43055
(defun list-of-conjuncts list-of-conjuncts1074,43205
(defmexpr eliminate-all-rulep-appseliminate-all-rulep-apps1082,43432
(defmexpr eliminate-rulep-lineeliminate-rulep-line1108,44500
(defun eliminate-all-rulep-apps eliminate-all-rulep-apps1125,45245
(defun eliminate-all-ruleq-apps eliminate-all-ruleq-apps1148,45991
(defun fill-in-ugen*-gap fill-in-ugen*-gap1172,46843
(defun ugen*-inference-p ugen*-inference-p1180,47216
(defun ugen*-inference-p-1 ugen*-inference-p-11190,47600
(defun eliminate-ruleq-line eliminate-ruleq-line1197,47856
(defun create-lambda-normal-gap create-lambda-normal-gap1220,48686
(defun eliminate-rulep-line eliminate-rulep-line1294,51680
(defun fill-in-propositional-gap fill-in-propositional-gap1297,51779
(defun ceb-natree-to-proof ceb-natree-to-proof1382,54961
(defun ceb-natree-to-proof-rec ceb-natree-to-proof-rec1388,55121
(defun expand-cases expand-cases1728,68410
(defun fill-in-cases-gap fill-in-cases-gap1743,68898

ceb-nat-seq.lisp,384
(defun natree-to-ftree-main natree-to-ftree-main31,1337
(defun natree-to-ftree-seq-normal natree-to-ftree-seq-normal48,2038
(defun natree-to-ftree-seq-coercion natree-to-ftree-seq-coercion223,9326
(defun natree-to-ftree-seq-extraction natree-to-ftree-seq-extraction233,9780
(defmexpr normalize-proofnormalize-proof324,13479
(defun normalize-proof normalize-proof339,14113

cfont.lisp,8510
(deffile cfontcfont49,2670
(defcfont alephaleph56,2826
(defcfont alphaalpha59,2859
(defcfont andand63,2909
(defcfont angleangle67,2957
(defcfont approxapprox70,2990
(defcfont assertassert73,3024
(defcfont assertedbyassertedby76,3059
(defcfont asteriskasterisk79,3097
(defcfont barbar83,3150
(defcfont betabeta86,3182
(defcfont bigbarbigbar90,3231
(defcfont boldabolda93,3266
(defcfont boldbboldb96,3298
(defcfont boldcboldc99,3330
(defcfont bolddboldd102,3362
(defcfont boldebolde105,3394
(defcfont boldfboldf108,3426
(defcfont boldgboldg111,3458
(defcfont boldhboldh114,3490
(defcfont boldiboldi117,3522
(defcfont boldjboldj120,3554
(defcfont boldkboldk123,3587
(defcfont boldlboldl126,3620
(defcfont boldmboldm129,3653
(defcfont boldnboldn132,3686
(defcfont boldoboldo135,3719
(defcfont boldpboldp138,3752
(defcfont boldqboldq141,3785
(defcfont boldrboldr144,3818
(defcfont boldsbolds147,3851
(defcfont boldtboldt150,3884
(defcfont bolduboldu153,3917
(defcfont boldvboldv156,3950
(defcfont boldwboldw159,3983
(defcfont boldxboldx162,4016
(defcfont boldyboldy165,4049
(defcfont boldzboldz168,4082
(defcfont capdeltacapdelta171,4115
(defcfont capgammacapgamma174,4151
(defcfont caplambdacaplambda177,4187
(defcfont capomegacapomega180,4224
(defcfont capphicapphi183,4260
(defcfont cappicappi186,4294
(defcfont cappsicappsi189,4327
(defcfont capsigmacapsigma192,4361
(defcfont capthetacaptheta195,4397
(defcfont capupsiloncapupsilon198,4433
(defcfont capxicapxi201,4471
(defcfont ceiling1ceiling1204,4504
(defcfont ceiling2ceiling2207,4540
(defcfont chichi210,4576
(defcfont circledotcircledot214,4625
(defcfont circleminuscircleminus217,4662
(defcfont composecompose220,4701
(defcfont congruentcongruent223,4736
(defcfont defineeqdefineeq226,4773
(defcfont deldel229,4810
(defcfont deltadelta232,4841
(defcfont diamonddiamond236,4892
(defcfont directsumdirectsum239,4927
(defcfont dividedivide242,4964
(defcfont doubtildedoubtilde245,4998
(defcfont epsilonepsilon248,5035
(defcfont equivequiv252,5088
(defcfont etaeta256,5138
(defcfont existsexists260,5187
(defcfont falsehoodfalsehood264,5238
(defcfont flatflat268,5292
(defcfont floor1floor1271,5325
(defcfont floor2floor2274,5359
(defcfont forallforall277,5393
(defcfont gammagamma281,5444
(defcfont gradientgradient285,5495
(defcfont greateqgreateq288,5531
(defcfont iff1iff1291,5566
(defcfont iff2iff2294,5598
(defcfont imp1imp1297,5630
(defcfont imp2imp2300,5662
(defcfont imp3imp3303,5694
(defcfont implied1implied1306,5726
(defcfont implied2implied2309,5762
(defcfont impliedbyimpliedby312,5798
(defcfont impliesimplies315,5835
(defcfont infinityinfinity319,5887
(defcfont integral2integral2322,5923
(defcfont intersectintersect325,5960
(defcfont iotaiota329,6014
(defcfont joinjoin333,6064
(defcfont kappakappa336,6096
(defcfont lambdalambda340,6147
(defcfont leftcornerleftcorner344,6199
(defcfont lesseqlesseq347,6237
(defcfont meetmeet350,6271
(defcfont member1member1353,6303
(defcfont minplusminplus356,6339
(defcfont monusmonus359,6374
(defcfont mumu362,6407
(defcfont naturalnatural366,6455
(defcfont negneg369,6490
(defcfont newparnewpar372,6521
(defcfont nonmembernonmember375,6555
(defcfont normnorm378,6592
(defcfont northnorth381,6624
(defcfont northeastnortheast384,6657
(defcfont northwestnorthwest387,6694
(defcfont notnot390,6731
(defcfont notassertnotassert393,6762
(defcfont noteqnoteq396,6800
(defcfont notequivnotequiv399,6833
(defcfont notvalidnotvalid402,6870
(defcfont nunu405,6907
(defcfont nullsetnullset409,6955
(defcfont omegaomega412,6991
(defcfont omicronomicron416,7042
(defcfont oror420,7095
(defcfont parallelogramparallelogram424,7142
(defcfont phiphi427,7183
(defcfont phi2phi2431,7232
(defcfont pipi435,7282
(defcfont plusminplusmin439,7330
(defcfont powersetpowerset442,7365
(defcfont propersubsetpropersubset445,7401
(defcfont propersupersetpropersuperset449,7458
(defcfont psipsi453,7517
(defcfont quantifierquantifier457,7566
(defcfont rhorho460,7604
(defcfont rightcornerrightcorner464,7653
(defcfont scriptascripta467,7692
(defcfont scriptbscriptb470,7727
(defcfont scriptcscriptc473,7762
(defcfont scriptdscriptd476,7797
(defcfont scriptescripte479,7832
(defcfont scriptfscriptf482,7867
(defcfont scriptgscriptg485,7902
(defcfont scripthscripth488,7937
(defcfont scriptiscripti491,7972
(defcfont scriptjscriptj494,8007
(defcfont scriptkscriptk497,8042
(defcfont scriptlscriptl500,8077
(defcfont scriptmscriptm503,8112
(defcfont scriptnscriptn506,8147
(defcfont scriptoscripto509,8182
(defcfont scriptpscriptp512,8217
(defcfont scriptqscriptq515,8252
(defcfont scriptrscriptr518,8287
(defcfont scriptsscripts521,8322
(defcfont scripttscriptt524,8357
(defcfont scriptuscriptu527,8392
(defcfont scriptvscriptv530,8427
(defcfont scriptwscriptw533,8462
(defcfont scriptxscriptx536,8497
(defcfont scriptyscripty539,8532
(defcfont scriptzscriptz542,8567
(defcfont setintersectsetintersect545,8602
(defcfont setunionsetunion549,8659
(defcfont sigmasigma553,8712
(defcfont similarsimilar557,8763
(defcfont southsouth560,8798
(defcfont southeastsoutheast563,8831
(defcfont southwestsouthwest566,8868
(defcfont sqrtsqrt569,8905
(defcfont squaresquare572,8936
(defcfont starstar575,8970
(defcfont sub0sub0578,9002
(defcfont sub1sub1582,9051
(defcfont sub2sub2586,9100
(defcfont sub3sub3590,9149
(defcfont sub4sub4594,9198
(defcfont sub5sub5598,9247
(defcfont sub6sub6602,9296
(defcfont sub7sub7606,9345
(defcfont sub8sub8610,9394
(defcfont sub9sub9614,9443
(defcfont subalphasubalpha618,9492
(defcfont subbetasubbeta622,9545
(defcfont subchisubchi626,9597
(defcfont subdeltasubdelta630,9649
(defcfont subepsilonsubepsilon634,9703
(defcfont subetasubeta638,9759
(defcfont subgammasubgamma642,9811
(defcfont subiotasubiota646,9865
(defcfont subkappasubkappa650,9918
(defcfont sublambdasublambda654,9972
(defcfont sublparensublparen658,10027
(defcfont submembersubmember662,10081
(defcfont submusubmu666,10136
(defcfont subnusubnu670,10187
(defcfont subnullsetsubnullset674,10238
(defcfont subomegasubomega678,10294
(defcfont subomicronsubomicron682,10348
(defcfont subphisubphi686,10404
(defcfont subpisubpi690,10456
(defcfont subpsisubpsi694,10507
(defcfont subrhosubrho698,10559
(defcfont subrparensubrparen702,10611
(defcfont subsetsubset706,10665
(defcfont subsigmasubsigma710,10716
(defcfont subtausubtau714,10770
(defcfont subthetasubtheta718,10822
(defcfont subupsilonsubupsilon722,10876
(defcfont subxisubxi726,10932
(defcfont subzetasubzeta730,10982
(defcfont sup0sup0734,11035
(defcfont sup1sup1738,11084
(defcfont sup2sup2742,11133
(defcfont sup3sup3746,11182
(defcfont sup4sup4750,11231
(defcfont sup5sup5754,11280
(defcfont sup6sup6758,11329
(defcfont sup7sup7762,11378
(defcfont sup8sup8766,11427
(defcfont sup9sup9770,11476
(defcfont supasupa774,11525
(defcfont supbsupb778,11573
(defcfont supcsupc782,11621
(defcfont supdsupd786,11669
(defcfont supesupe790,11717
(defcfont supersetsuperset794,11765
(defcfont supfsupf798,11818
(defcfont supgsupg802,11866
(defcfont suphsuph806,11914
(defcfont supisupi810,11962
(defcfont supjsupj814,12010
(defcfont supksupk818,12059
(defcfont suplsupl822,12108
(defcfont suplparensuplparen826,12157
(defcfont supmsupm830,12211
(defcfont supminussupminus834,12260
(defcfont supnsupn838,12313
(defcfont suposupo842,12362
(defcfont suppsupp846,12411
(defcfont supplussupplus850,12460
(defcfont supqsupq854,12512
(defcfont suprsupr858,12561
(defcfont suprparensuprparen862,12610
(defcfont supssups866,12664
(defcfont suptsupt870,12713
(defcfont supusupu874,12762
(defcfont supvsupv878,12811
(defcfont supwsupw882,12860
(defcfont supxsupx886,12909
(defcfont supysupy890,12958
(defcfont supzsupz894,13007
(defcfont tautau898,13056
(defcfont tensortensor902,13105
(defcfont thetatheta905,13139
(defcfont timestimes909,13190
(defcfont truthtruth913,13240
(defcfont uncappiuncappi916,13273
(defcfont unionunion919,13308
(defcfont untildeuntilde923,13358
(defcfont upsilonupsilon926,13392
(defcfont validvalid930,13445
(defcfont xixi933,13479
(defcfont zetazeta937,13526

cnf.lisp,1586
(deffile cnfcnf21,694
(defedop cnfcnf29,859
(defwffop conjunctive-normal-formconjunctive-normal-form34,950
(defun conjunctive-normal-form conjunctive-normal-form43,1177
(defun nest-left nest-left60,2040
(defun nest-inner nest-inner84,3012
(defun conjunctive-normal-form1 conjunctive-normal-form191,3252
(defun hvars hvars155,5461
(defun hvars-rec hvars-rec158,5522
(defedop hvarshvars170,5859
(defwffop hvarshvars175,5928
(defun head head181,6052
(defedop headhead190,6255
(defwffop headhead195,6322
(defedop min-scopemin-scope201,6432
(defwffop min-quant-scopemin-quant-scope206,6521
(defun rewrite-equiv-old rewrite-equiv-old214,6798
(defflag rewrite-equivsrewrite-equivs222,7089
(defvar *first-equiv*)*first-equiv*245,8073
(defvar *first-equiv2*)*first-equiv2*246,8096
(defun rewrite-equiv rewrite-equiv248,8121
(defun cohead cohead270,8808
(defun one-step-mqs-bd one-step-mqs-bd276,8949
(defun one-step-mqs-infix one-step-mqs-infix334,11245
(defun min-quant-scope min-quant-scope351,11804
(defun min-quant-scope-applicable min-quant-scope-applicable363,12333
(defun min-quant-infix-applicable min-quant-infix-applicable372,12702
(defun mqs-applicable mqs-applicable378,12874
(defedop subformulassubformulas393,13475
(defwffop find-subformulasfind-subformulas398,13568
(defun find-subformulas find-subformulas404,13725
(defun find-subformulas-real find-subformulas-real413,13987
(defun make-subformula-list make-subformula-list424,14420
(defun msl-real msl-real432,14683
(defun same-subfmla same-subfmla444,15054

collect-help.lisp,232
(deffile collect-helpcollect-help22,780
(defmexpr collect-helpcollect-help30,982
(defun collect-help collect-help49,1771
(defun read-help-from-file read-help-from-file63,2327
(defun write-help-file write-help-file102,3755

commands-interpreters-auto.lisp,189
(deffile commands-interpreters-autocommands-interpreters-auto11,588
(defun mateop-interpreter mateop-interpreter16,737
(defun mate-command-interpreter mate-command-interpreter71,2389

commands-interpreters-core.lisp,335
(deffile commands-interpreters-corecommands-interpreters-core11,588
(defun consp-interpreter consp-interpreter16,737
(defun flag-interpreter flag-interpreter26,1105
(defun mexpr-interpreter mexpr-interpreter37,1592
(defun misc-interpreter misc-interpreter48,2082
(defun ed-command-interpreter ed-command-interpreter66,2832

compl.lisp,246
(deffile complcompl13,610
(defmexpr cloadcload18,728
(defmexpr cload-modulescload-modules26,905
(defmexpr complcompl34,1120
(defun compl compl40,1263
(defun compile-list compile-list49,1479
(defmexpr compile-listcompile-list63,2071

concpt.lisp,518
(deffile concptconcpt20,737
(defvar kset kset28,925
(defun tyol tyol30,944
(defun tyos tyos42,1218
(defun load-kset-keys load-kset-keys44,1252
(defmexpr loadkeyloadkey54,1631
(defun loadkey loadkey60,1868
(defun enter-kset enter-kset65,2048
(defmexpr resetreset72,2172
(defun reset reset75,2271
(defun shortreset shortreset79,2332
(defvar transparent-mode transparent-mode87,2518
(defun transparent-mode-off transparent-mode-off89,2549
(defun transparent-mode-on transparent-mode-on92,2647

connections.lisp,622
(deffile connectionsconnections14,630
(defun find-potential-connection find-potential-connection19,751
(defun check-potential-connection check-potential-connection35,1564
(defun locate-connection-on-path locate-connection-on-path73,3417
(defun locate-connection-on-mspath locate-connection-on-mspath81,3653
(defun open-mspath-p open-mspath-p92,4095
(defun maxmates-fail-message maxmates-fail-message103,4533
(defun connections-counter connections-counter111,4718
(defun count-conns count-conns115,4854
(defun count-occs count-occs119,4964
(defun connection-flattenlist connection-flattenlist123,5100

constraints.lisp,13479
(deffile constraintsconstraints14,609
(defstruct constraint-setconstraint-set19,735
(defflag DELAY-SETVARSDELAY-SETVARS29,998
(defflag BAD-VAR-CONNECTED-PRUNEBAD-VAR-CONNECTED-PRUNE46,1618
(defflag max-constraint-sizemax-constraint-size68,2155
(defflag max-num-constraintsmax-num-constraints80,2611
(defflag which-constraintswhich-constraints86,2811
(defflag include-induction-principleinclude-induction-principle107,3602
(defflag include-coinduction-principleinclude-coinduction-principle128,4147
(defun constraint-next-openpath constraint-next-openpath148,4702
(defun constraint-complete-mspath constraint-complete-mspath159,5002
(defun constraint-find-cheapest-mspath constraint-find-cheapest-mspath167,5324
(defun constraint-find-alt-mspath constraint-find-alt-mspath190,6129
(defun constraint-complete-alt-mspath-and constraint-complete-alt-mspath-and213,7049
(defun constraint-open-mspath-p constraint-open-mspath-p221,7439
(defun generate-constraint-sets-for-vars generate-constraint-sets-for-vars230,7832
(defun distinct-vars-from distinct-vars-from368,13159
(defun lits-sel-conn-p lits-sel-conn-p377,13453
(defun lits-sel-conn-p-1 lits-sel-conn-p-1384,13674
(defun generate-min-constraints-for-vlit generate-min-constraints-for-vlit392,13892
(defun generate-max-constraints-for-vlit generate-max-constraints-for-vlit412,14581
(defun generate-subpaths-of-conjuncts generate-subpaths-of-conjuncts432,15276
(defun generate-subpaths generate-subpaths446,15788
(defun combine-constraint-sets combine-constraint-sets462,16292
(defun combine-constraints combine-constraints471,16526
(defun compatible-constraints compatible-constraints499,17527
(defun prune-constraint-set-p prune-constraint-set-p507,17895
(defun prune-max-constr-p prune-max-constr-p514,18155
(defun prune-min-constr-p prune-min-constr-p525,18512
(defun ftree-solve-constraint-set ftree-solve-constraint-set536,18860
(defun process-constraint-set process-constraint-set551,19453
(defun make-ftree-setvar-soln make-ftree-setvar-soln649,23159
(defun make-ftree-setvar-inst make-ftree-setvar-inst680,24347
(defun make-min-inv-princ make-min-inv-princ696,24902
(defun make-min-inv-princ-2 make-min-inv-princ-2707,25241
(defun make-min-inv-princ-3 make-min-inv-princ-3717,25574
(defun make-min-inv-princ-4 make-min-inv-princ-4728,26103
(defun make-min-inv-princ-5 make-min-inv-princ-5737,26454
(defun make-min-inv-princ-6 make-min-inv-princ-6745,26775
(defun make-clos-setvar-lemma-negf make-clos-setvar-lemma-negf767,27492
(defun make-clos-setvar-lemma-negf-0 make-clos-setvar-lemma-negf-0782,28079
(defun make-clos-setvar-lemma-negf-1 make-clos-setvar-lemma-negf-1842,30472
(defun make-clos-setvar-lemma-negf-2 make-clos-setvar-lemma-negf-2850,30811
(defun make-clos-setvar-lemma-negf-3 make-clos-setvar-lemma-negf-3878,31757
(defun make-clos-setvar-lemma-negf-4 make-clos-setvar-lemma-negf-4893,32332
(defun make-clos-setvar-lemma-negf-5 make-clos-setvar-lemma-negf-5899,32485
(defun make-clos-setvar-lemma-negf-6 make-clos-setvar-lemma-negf-6925,33523
(defun make-clos-setvar-lemma-negf-7 make-clos-setvar-lemma-negf-7940,34124
(defun make-clos-setvar-lemma-negf-8 make-clos-setvar-lemma-negf-8976,35498
(defun make-clos-setvar-lemma-negf-9 make-clos-setvar-lemma-negf-9993,36124
(defun make-clos-setvar-ind-negf make-clos-setvar-ind-negf1014,36904
(defun make-clos-setvar-ind-negf-1 make-clos-setvar-ind-negf-11031,37727
(defun make-clos-setvar-ind-negf-2 make-clos-setvar-ind-negf-21047,38332
(defun make-clos-setvar-ind-negf-3 make-clos-setvar-ind-negf-31078,39448
(defun make-clos-setvar-ind-negf-4 make-clos-setvar-ind-negf-41097,40162
(defun make-clos-setvar-ind-negf-5 make-clos-setvar-ind-negf-51132,41349
(defun make-min-setvar-lemma-negf make-min-setvar-lemma-negf1185,43167
(defun min-setvar-soln-from-inv-princ min-setvar-soln-from-inv-princ1208,44010
(defun make-min-setvar-lemma-negf-1 make-min-setvar-lemma-negf-11216,44317
(defun make-min-setvar-lemma-negf-2 make-min-setvar-lemma-negf-21225,44674
(defun make-min-setvar-lemma-negf-3 make-min-setvar-lemma-negf-31239,45193
(defun make-min-setvar-lemma-negf-4 make-min-setvar-lemma-negf-41254,45817
(defun make-min-setvar-lemma-negf-5 make-min-setvar-lemma-negf-51278,46593
(defun make-min-setvar-lemma-negf-6 make-min-setvar-lemma-negf-61290,47045
(defun make-min-setvar-lemma-negf-7 make-min-setvar-lemma-negf-71299,47341
(defun make-min-setvar-ind-negf make-min-setvar-ind-negf1314,47913
(defun make-min-setvar-lemma-posf make-min-setvar-lemma-posf1323,48287
(defun make-min-setvar-lemma-posf-1 make-min-setvar-lemma-posf-11344,49115
(defun make-min-setvar-lemma-posf-2 make-min-setvar-lemma-posf-21360,49789
(defun make-min-setvar-lemma-posf-3 make-min-setvar-lemma-posf-31370,50184
(defun make-min-setvar-lemma-posf-4 make-min-setvar-lemma-posf-41404,51307
(defun make-min-setvar-lemma-posf-5 make-min-setvar-lemma-posf-51421,51883
(defun make-min-setvar-lemma-posf-6 make-min-setvar-lemma-posf-61430,52189
(defun make-max-inv-princ make-max-inv-princ1461,53211
(defun make-max-inv-princ-1 make-max-inv-princ-11471,53523
(defun make-max-inv-princ-2 make-max-inv-princ-21475,53687
(defun make-max-inv-princ-3 make-max-inv-princ-31485,54024
(defun make-max-inv-princ-4 make-max-inv-princ-41496,54553
(defun make-max-inv-princ-5 make-max-inv-princ-51505,54904
(defun make-max-inv-princ-6 make-max-inv-princ-61513,55248
(defun make-coclos-setvar-lemma-negf make-coclos-setvar-lemma-negf1535,55968
(defun make-coclos-setvar-lemma-negf-0 make-coclos-setvar-lemma-negf-01550,56557
(defun make-coclos-setvar-lemma-negf-1 make-coclos-setvar-lemma-negf-11611,58980
(defun make-coclos-setvar-lemma-negf-2 make-coclos-setvar-lemma-negf-21619,59327
(defun make-coclos-setvar-lemma-negf-3 make-coclos-setvar-lemma-negf-31649,60419
(defun make-coclos-setvar-lemma-negf-4 make-coclos-setvar-lemma-negf-41664,60994
(defun make-coclos-setvar-lemma-negf-5 make-coclos-setvar-lemma-negf-51670,61147
(defun make-coclos-setvar-lemma-negf-6 make-coclos-setvar-lemma-negf-61693,62057
(defun make-coclos-setvar-lemma-negf-7 make-coclos-setvar-lemma-negf-71706,62611
(defun make-coclos-setvar-lemma-negf-8 make-coclos-setvar-lemma-negf-81743,64073
(defun make-coclos-setvar-lemma-negf-9 make-coclos-setvar-lemma-negf-91760,64701
(defun make-coclos-setvar-ind-negf make-coclos-setvar-ind-negf1781,65480
(defun make-coclos-setvar-ind-negf-1 make-coclos-setvar-ind-negf-11798,66309
(defun make-coclos-setvar-ind-negf-2 make-coclos-setvar-ind-negf-21815,66959
(defun make-coclos-setvar-ind-negf-3 make-coclos-setvar-ind-negf-31847,68136
(defun make-coclos-setvar-ind-negf-4 make-coclos-setvar-ind-negf-41867,68902
(defun make-coclos-setvar-ind-negf-5 make-coclos-setvar-ind-negf-51904,70221
(defun make-forall-a-imp-a-negf make-forall-a-imp-a-negf1964,72225
(defun make-subreln-wff make-subreln-wff1979,72880
(defun make-max-setvar-lemma-negf make-max-setvar-lemma-negf1997,73453
(defun max-setvar-soln-from-inv-princ max-setvar-soln-from-inv-princ2020,74301
(defun make-max-setvar-lemma-negf-1 make-max-setvar-lemma-negf-12028,74609
(defun make-max-setvar-lemma-negf-2 make-max-setvar-lemma-negf-22037,74968
(defun make-max-setvar-lemma-negf-3 make-max-setvar-lemma-negf-32052,75490
(defun make-max-setvar-lemma-negf-4 make-max-setvar-lemma-negf-42067,76080
(defun make-max-setvar-lemma-negf-5 make-max-setvar-lemma-negf-52092,76926
(defun make-max-setvar-lemma-negf-6 make-max-setvar-lemma-negf-62104,77376
(defun make-max-setvar-lemma-negf-7 make-max-setvar-lemma-negf-72113,77672
(defun make-max-setvar-ind-negf make-max-setvar-ind-negf2138,78766
(defun make-max-setvar-lemma-posf make-max-setvar-lemma-posf2147,79142
(defun make-max-setvar-lemma-posf-1 make-max-setvar-lemma-posf-12168,79970
(defun make-max-setvar-lemma-posf-2 make-max-setvar-lemma-posf-22184,80645
(defun make-max-setvar-lemma-posf-3 make-max-setvar-lemma-posf-32194,81040
(defun make-max-setvar-lemma-posf-4 make-max-setvar-lemma-posf-42226,82172
(defun make-max-setvar-lemma-posf-5 make-max-setvar-lemma-posf-52241,82759
(defun make-max-setvar-lemma-posf-6 make-max-setvar-lemma-posf-62250,83065
(defun make-knaster-tarski-lemma make-knaster-tarski-lemma2281,84126
(defun make-knaster-tarski-negf make-knaster-tarski-negf2321,85296
(defun make-knaster-tarski-negf-1 make-knaster-tarski-negf-12327,85572
(defun make-knaster-tarski-negf-2 make-knaster-tarski-negf-22353,86376
(defun make-knaster-tarski-leastfp-lemma make-knaster-tarski-leastfp-lemma2359,86613
(defun make-knaster-tarski-leastfp-negf make-knaster-tarski-leastfp-negf2406,88025
(defun make-knaster-tarski-leastfp-negf-1 make-knaster-tarski-leastfp-negf-12412,88317
(defun make-knaster-tarski-leastfp-negf-2 make-knaster-tarski-leastfp-negf-22438,89137
(defun make-knaster-tarski-leastfp-negf-3 make-knaster-tarski-leastfp-negf-32446,89439
(defun make-knaster-tarski-leastfp-negf-4 make-knaster-tarski-leastfp-negf-42469,90271
(defun make-knaster-tarski-leastfp-negf-5 make-knaster-tarski-leastfp-negf-52475,90474
(defun make-knaster-tarski-leastfp-negf-6 make-knaster-tarski-leastfp-negf-62492,91082
(defun make-knaster-tarski-leastfp-negf-7 make-knaster-tarski-leastfp-negf-72505,91595
(defun make-knaster-tarski-leastfp-negf-8 make-knaster-tarski-leastfp-negf-82518,92156
(defun make-knaster-tarski-leastfp-negf-9 make-knaster-tarski-leastfp-negf-92527,92461
(defun make-knaster-tarski-leastfp-negf-10 make-knaster-tarski-leastfp-negf-102536,92833
(defun make-knaster-tarski-leastfp-negf-11 make-knaster-tarski-leastfp-negf-112555,93588
(defun make-knaster-tarski-leastfp-negf-12 make-knaster-tarski-leastfp-negf-122568,94096
(defun make-knaster-tarski-leastfp-negf-13 make-knaster-tarski-leastfp-negf-132583,94651
(defun make-knaster-tarski-leastfp-negf-14 make-knaster-tarski-leastfp-negf-142603,95428
(defun make-knaster-tarski-leastfp-negf-15 make-knaster-tarski-leastfp-negf-152611,95716
(defun make-knaster-tarski-leastfp-negf-16 make-knaster-tarski-leastfp-negf-162626,96249
(defun make-knaster-tarski-leastfp-negf-17 make-knaster-tarski-leastfp-negf-172638,96690
(defun make-knaster-tarski-leastfp-negf-18 make-knaster-tarski-leastfp-negf-182645,96959
(defun make-knaster-tarski-leastfp-negf-19 make-knaster-tarski-leastfp-negf-192666,97834
(defun make-knaster-tarski-leastfp-negf-20 make-knaster-tarski-leastfp-negf-202683,98470
(defun make-knaster-tarski-leastfp-negf-21 make-knaster-tarski-leastfp-negf-212690,98738
(defun make-knaster-tarski-leastfp-negf-22 make-knaster-tarski-leastfp-negf-222711,99588
(defun make-mon-setfn-from-rside make-mon-setfn-from-rside2726,100215
(defun make-mon-setfn-from-lside make-mon-setfn-from-lside2732,100399
(defun make-knaster-tarski-gfp-lemma make-knaster-tarski-gfp-lemma2739,100623
(defun make-knaster-tarski-gfp-negf make-knaster-tarski-gfp-negf2786,102028
(defun make-knaster-tarski-gfp-negf-1 make-knaster-tarski-gfp-negf-12792,102312
(defun make-knaster-tarski-gfp-negf-2 make-knaster-tarski-gfp-negf-22817,103103
(defun make-knaster-tarski-gfp-negf-3 make-knaster-tarski-gfp-negf-32825,103390
(defun make-knaster-tarski-gfp-negf-4 make-knaster-tarski-gfp-negf-42847,104205
(defun make-knaster-tarski-gfp-negf-5 make-knaster-tarski-gfp-negf-52854,104412
(defun make-knaster-tarski-gfp-negf-6 make-knaster-tarski-gfp-negf-62871,105007
(defun make-knaster-tarski-gfp-negf-7 make-knaster-tarski-gfp-negf-72884,105512
(defun make-knaster-tarski-gfp-negf-8 make-knaster-tarski-gfp-negf-82897,106083
(defun make-knaster-tarski-gfp-negf-9 make-knaster-tarski-gfp-negf-92906,106381
(defun make-knaster-tarski-gfp-negf-10 make-knaster-tarski-gfp-negf-102915,106745
(defun make-knaster-tarski-gfp-negf-11 make-knaster-tarski-gfp-negf-112934,107502
(defun make-knaster-tarski-gfp-negf-12 make-knaster-tarski-gfp-negf-122966,108794
(defun make-knaster-tarski-gfp-negf-13 make-knaster-tarski-gfp-negf-132976,109158
(defun make-knaster-tarski-gfp-negf-14 make-knaster-tarski-gfp-negf-142997,109968
(defun make-knaster-tarski-gfp-negf-15 make-knaster-tarski-gfp-negf-153005,110252
(defun make-knaster-tarski-gfp-negf-17 make-knaster-tarski-gfp-negf-173020,110789
(defun make-knaster-tarski-gfp-negf-18 make-knaster-tarski-gfp-negf-183027,111047
(defun make-knaster-tarski-gfp-negf-19 make-knaster-tarski-gfp-negf-193048,111938
(defun make-knaster-tarski-gfp-negf-20 make-knaster-tarski-gfp-negf-203065,112577
(defun make-knaster-tarski-gfp-negf-21 make-knaster-tarski-gfp-negf-213072,112834
(defun make-knaster-tarski-gfp-negf-22 make-knaster-tarski-gfp-negf-223094,113707
(defun mon-fn-negf mon-fn-negf3110,114386
(defun mon-fn-negf-1 mon-fn-negf-13127,114980
(defun mon-fn-negf-2 mon-fn-negf-23139,115338
(defun mon-fn-negf-3 mon-fn-negf-33213,118241
(defun constr-merge-ftrees constr-merge-ftrees3221,118496
(defun construct-arg-assoc construct-arg-assoc3244,119343
(defun push-onto-clist push-onto-clist3249,119559
(defun print-constraint-set print-constraint-set3253,119674
(defun print-set-constraint print-set-constraint3262,120066
(defun knaster-tarski-nd knaster-tarski-nd3293,121036
(defun check-ftree check-ftree3339,122731
(defun check-ftree-rec check-ftree-rec3344,122866
(defun check-wff check-wff3353,123127

consty.lisp,547
(deffile constyconsty22,737
(defstyle conceptconcept29,882
(defstyle concept-sconcept-s49,1477
(defun pp-symbol-concept-s pp-symbol-concept-s69,2118
(defun pp-concept-special-symbol pp-concept-special-symbol80,2448
(defun pp-space-p-concept-s pp-space-p-concept-s90,2780
(defun pp-typesym-concept-s pp-typesym-concept-s94,2910
(defun terpri-heuristics-concept terpri-heuristics-concept111,3344
(defun init-cfonttable init-cfonttable130,3760
(defvar cfonttable cfonttable133,3812
(defcategory concept-charconcept-char135,3851

contexts-auto.lisp,1990
(deffile contexts-autocontexts-auto14,607
(defcontext jforms1jforms119,724
(defcontext mating-searchmating-search26,920
(defcontext ms88ms8831,1030
(defcontext ms89ms8936,1156
(defcontext ms90-3ms90-341,1282
(defcontext ms90-9ms90-946,1414
(defcontext ms91ms9151,1546
(defcontext ms92-9ms92-956,1700
(defcontext ms93-1ms93-161,1832
(defcontext ms98-1ms98-166,1964
(defcontext etr-natetr-nat71,2096
(defcontext search-analysissearch-analysis78,2275
(defcontext test-searchliststest-searchlists83,2420
(defcontext test-libtest-lib88,2555
(defcontext primsubsprimsubs93,2683
(defcontext rulep-testrulep-test98,2804
(defcontext skolemsskolems103,2911
(defcontext expansion-treesexpansion-trees108,3038
(defcontext tacticstactics113,3168
(defcontext prop-tacticsprop-tactics118,3272
(defcontext quant-tactics quant-tactics123,3403
(defcontext equality-tactics equality-tactics128,3527
(defcontext defn-tactics defn-tactics133,3647
(defcontext lambda-tactics lambda-tactics138,3770
(defcontext compound-tacticscompound-tactics143,3898
(defcontext aux-tacticsaux-tactics148,4003
(defcontext unificationunification153,4103
(defcontext unification-dpairsunification-dpairs158,4211
(defcontext mtree-opsmtree-ops163,4343
(defcontext mtree-printmtree-print168,4479
(defcontext mtree-automtree-auto173,4613
(defcontext search-suggestionssearch-suggestions179,4737
(defcontext dec-fragsdec-frags184,4879
(defcontext perspers189,5025
(defcontext ext-exp-dagsext-exp-dags194,5158
(defcontext ext-seqext-seq199,5305
(defcontext ext-seq-enteringext-seq-entering204,5453
(defcontext ext-seq-printingext-seq-printing209,5627
(defcontext ext-seq-rulesext-seq-rules214,5784
(defcontext ext-seq-derived-rulesext-seq-derived-rules219,5922
(defcontext ext-seq-tacticsext-seq-tactics224,6084
(defcontext ext-seq-filesext-seq-files229,6228
(defcontext ext-exp-dagsext-exp-dags234,6386
(defcontext ext-searchext-search239,6507

contexts-core.lisp,3476
(deffile contexts-corecontexts-core14,607
(defcontext subtoplevelssubtoplevels19,724
(defcontext flagsflags24,867
(defcontext stylestyle29,967
(defcontext flag-reviewflag-review34,1070
(defcontext flag-modesflag-modes39,1171
(defcontext rd-helprd-help44,1280
(defcontext help-objhelp-obj49,1406
(defcontext concept-terminalconcept-terminal54,1523
(defcontext otl-enteringotl-entering59,1649
(defcontext otl-objectotl-object64,1779
(defcontext otl-printingotl-printing69,1889
(defcontext wff-printingwff-printing74,2008
(defcontext print-internalsprint-internals79,2136
(defcontext sail-charssail-chars84,2278
(defcontext script-lettersscript-letters90,2423
(defcontext subscriptssubscripts95,2533
(defcontext superscriptssuperscripts100,2638
(defcontext greek-letters-lowercasegreek-letters-lowercase105,2755
(defcontext greek-letters-uppercasegreek-letters-uppercase110,2874
(defcontext greek-subscriptsgreek-subscripts115,2993
(defcontext bold-lettersbold-letters120,3124
(defcontext tex-styletex-style125,3234
(defcontext xwindowsxwindows130,3354
(defcontext misc-symbolsmisc-symbols135,3484
(defcontext weak-labelsweak-labels141,3634
(defcontext flavor-objflavor-obj146,3772
(defcontext save-work-objsave-work-obj151,3899
(defcontext saving-wffssaving-wffs156,4029
(defcontext scribe-recordscribe-record161,4156
(defcontext otl-filesotl-files166,4288
(defcontext proof-outlineproof-outline171,4430
(defcontext otl-rearrangingotl-rearranging176,4544
(defcontext otl-statusotl-status181,4680
(defcontext tps-theoremstps-theorems187,4825
(defcontext editor-objeditor-obj192,4929
(defcontext well-ffwell-ff197,5049
(defcontext prim-objprim-obj202,5172
(defcontext wff-parsingwff-parsing207,5304
(defcontext wffequalwffequal212,5426
(defcontext wfftst-objwfftst-obj217,5571
(defcontext wfftyp-objwfftyp-obj222,5699
(defcontext movingmoving227,5813
(defcontext changingchanging232,5928
(defcontext recursively-changingrecursively-changing237,6040
(defcontext embeddingembedding242,6211
(defcontext rewritingrewriting247,6359
(defcontext substitutionsubstitution252,6481
(defcontext abbrev-opsabbrev-ops257,6610
(defcontext lambda-oplambda-op262,6749
(defcontext neg-opsneg-ops267,6889
(defcontext misc-edopsmisc-edops274,7053
(defcontext develop-seqsdevelop-seqs279,7187
(defcontext ill-formedill-formed284,7328
(defcontext suggestionssuggestions289,7467
(defcontext tps-eventstps-events294,7605
(defcontext basicsbasics299,7704
(defcontext rule-commandsrule-commands304,7818
(defcontext lisp-packageslisp-packages310,8007
(defcontext lisp-sourcelisp-source315,8127
(defcontext command-declarationcommand-declaration320,8225
(defcontext documentationdocumentation325,8369
(defcontext batchbatch330,8481
(defcontext indirectindirect335,8577
(defcontext core-imagecore-image340,8702
(defcontext system-newssystem-news345,8798
(defcontext miscellaneousmiscellaneous350,8925
(defcontext unclassifiedunclassified355,9035
(defcontext librarylibrary360,9160
(defcontext lib-display lib-display365,9248
(defcontext lib-readinglib-reading370,9397
(defcontext lib-structurelib-structure375,9531
(defcontext lib-writinglib-writing380,9695
(defcontext lib-bugslib-bugs385,9822
(defcontext lib-keyslib-keys390,9949
(defcontext lib-modeslib-modes395,10071
(defcontext lib-classlib-class400,10200
(defcontext interfaceinterface405,10355

contexts-maint.lisp,322
(deffile contexts-maintcontexts-maint13,608
(defcontext coll-helpcoll-help18,727
(defcontext file-operationsfile-operations23,891
(defcontext tps-maintenancetps-maintenance28,1050
(defcontext modules-in-tpsmodules-in-tps34,1271
(defcontext rule-runrule-run39,1396
(defcontext rules-objectrules-object46,1650

contexts-ml.lisp,613
(deffile contexts-mlcontexts-ml13,602
(defcontext rules-1-miscrules-1-misc18,715
(defcontext rules-2-proprules-2-prop23,834
(defcontext rules-3-negrules-3-neg28,953
(defcontext rules-4-quantrules-4-quant33,1066
(defcontext rules-5-substrules-5-subst38,1183
(defcontext rules-6-equalityrules-6-equality43,1302
(defcontext rules-7-defnrules-7-defn48,1420
(defcontext rules-8-lambdarules-8-lambda53,1536
(defcontext book-theoremsbook-theorems58,1702
(defcontext ml1-exercisesml1-exercises63,1815
(defcontext ml2-exercisesml2-exercises68,1982
(defcontext abbrev-set-opsabbrev-set-ops73,2151

contexts-teacher.lisp,806
(deffile contexts-teachercontexts-teacher14,613
(defcontext report-objectreport-object19,736
(defcontext report-examplesreport-examples24,886
(defcontext statsstats29,1039
(defcontext gr-a-outgr-a-out34,1181
(defcontext gr-b-varsgr-b-vars39,1304
(defcontext gr-c-gradefilegr-c-gradefile44,1430
(defcontext gr-d-manual-gradesgr-d-manual-grades49,1557
(defcontext gr-e-automatic-gradesgr-e-automatic-grades54,1685
(defcontext gr-f-class-listgr-f-class-list59,1835
(defcontext gr-g-outputgr-g-output64,1965
(defcontext gr-h-statgr-h-stat69,2113
(defcontext gr-i-displaygr-i-display74,2247
(defcontext gr-j-totalsgr-j-totals79,2404
(defcontext gr-k-sortinggr-k-sorting84,2520
(defcontext gr-l-letter-gradegr-l-letter-grade89,2633
(defcontext grader-objectgrader-object94,2766

data-structures.lisp,612
(deffile data-structuresdata-structures15,645
(defstruct (mating mating24,872
(defun print-mating print-mating39,1261
(defflag prim-quantifierprim-quantifier54,1778
(defflag mate-ffpairmate-ffpair65,2198
(defflag search-complete-pathssearch-complete-paths77,2744
(defflag occurs-checkoccurs-check85,3012
(defflag prop-strategyprop-strategy103,3961
(definfo allow-duplicatesallow-duplicates116,4539
(definfo hash-tablehash-table121,4708
(definfo pushnewpushnew126,4892
(defflag ms-splitms-split131,5092
(defflag dup-alloweddup-allowed137,5251
(defflag ms-init-pathms-init-path143,5462

defpck.lisp,4039
(deffile defpckdefpck20,759
(def-lisp-package corecore27,900
(def-lisp-package maintmaint31,1023
(def-lisp-package autoauto36,1176
(def-lisp-package mlml40,1308
(def-lisp-package teacherteacher52,1594
(defmodule bootstrapbootstrap60,1781
(defmodule tpsdeftpsdef66,1918
(defmodule barebare74,2242
(defmodule tps-modulestps-modules80,2402
(defmodule file-opsfile-ops86,2543
(defmodule concept-bareconcept-bare92,2674
(defmodule maintainmaintain98,2825
(defmodule save-tps-worksave-tps-work105,3029
(defmodule wffswffs111,3179
(defmodule wff-printwff-print118,3392
(defmodule wff-parsewff-parse125,3610
(defmodule wff-ops-abbwff-ops-abb132,3799
(defmodule wff-ops1wff-ops1138,3966
(defmodule wff-ops2wff-ops2144,4160
(defmodule wff-editorwff-editor151,4380
(defmodule weak-labelweak-label160,4671
(defmodule save-wffssave-wffs167,4831
(defmodule lambda-calclambda-calc174,5001
(defmodule auto-basicauto-basic180,5162
(defmodule expansion-treeexpansion-tree187,5351
(defmodule ext-dagsext-dags199,5997
(defmodule matingmating209,6344
(defmodule ms88ms88220,6795
(defmodule mstmst228,7125
(defmodule ms90-3ms90-3236,7351
(defmodule mating-transformmating-transform250,8016
(defmodule skolemizingskolemizing257,8233
(defmodule concept-wffconcept-wff270,8585
(defmodule sail-wffsail-wff277,8788
(defmodule logic-scribelogic-scribe283,8914
(defmodule scribe-wffscribe-wff290,9096
(defmodule tex-wfftex-wff296,9228
(defmodule tps-helptps-help303,9379
(defmodule environmentenvironment309,9558
(defmodule auto-docauto-doc315,9694
(defmodule review-flagsreview-flags322,9922
(defmodule saving-modessaving-modes329,10096
(defmodule grader-topgrader-top335,10241
(defmodule gradergrader341,10366
(defmodule jformsjforms348,10549
(defmodule vpformsvpforms355,10785
(defmodule tps2-ruleptps2-rulep363,11011
(defmodule metawffsmetawffs371,11263
(defmodule wffmatchwffmatch377,11441
(defmodule theoremstheorems385,11654
(defmodule read-rulesread-rules391,11815
(defmodule ops-otlrulesops-otlrules398,12003
(defmodule rulesrules404,12168
(defmodule otlrulesotlrules413,12548
(defmodule otlhelpotlhelp420,12752
(defmodule event-signalevent-signal426,12906
(defmodule otlnlotlnl432,13047
(defmodule otlscribeotlscribe440,13313
(defmodule otlrulepotlrulep446,13462
(defmodule otlsuggestotlsuggest454,13658
(defmodule otlgootlgo461,13846
(defmodule otlcleanupotlcleanup468,13995
(defmodule otladviceotladvice474,14152
(defmodule otlschema2otlschema2480,14306
(defmodule mode-mlmode-ml486,14487
(defmodule math-logic-1-wffsmath-logic-1-wffs492,14632
(defmodule math-logic-2-wffsmath-logic-2-wffs498,14806
(defmodule math-logic-2-exercisesmath-logic-2-exercises507,15195
(defmodule math-logic-1-rulesmath-logic-1-rules513,15379
(defmodule math-logic-2-rulesmath-logic-2-rules520,15639
(defmodule math-logic-1math-logic-1534,16229
(defmodule math-logic-2math-logic-2540,16405
(defmodule eventsevents574,17421
(defmodule etps-eventsetps-events581,17592
(defmodule primitive-substprimitive-subst587,17757
(defmodule reportreport599,18172
(defmodule replacereplace605,18331
(defmodule tacticstactics618,18654
(defmodule etr-natetr-nat625,18875
(defmodule ml-tacticsml-tactics633,19214
(defmodule tactics-ndtactics-nd640,19444
(defmodule ml-etr-tacticsml-etr-tactics647,19637
(defmodule unificationunification659,20244
(defmodule unification-interfaceunification-interface666,20462
(defmodule xwindowsxwindows675,20741
(defmodule librarylibrary681,20894
(defmodule ms89ms89690,21210
(defmodule ms90-9ms90-9698,21478
(defmodule ms91ms91705,21658
(defmodule ml2-rewriteml2-rewrite713,21855
(defmodule rrulesrrules719,22035
(defmodule ms98ms98726,22199
(defmodule external-interfaceexternal-interface736,22603
(defmodule external-interfaceexternal-interface743,22821
(defmodule external-servicesexternal-services750,23021
(defmodule external-servicesexternal-services757,23321

deftex.lisp,1342
(deffile deftexdeftex23,751
(defflag pagelengthpagelength30,868
(defflag pagewidthpagewidth37,1074
(defflag in-tex-math-modein-tex-math-mode54,1583
(defflag tex-mimic-scribetex-mimic-scribe60,1742
(defflag latex-emulationlatex-emulation69,2097
(defflag tex-break-before-symbolstex-break-before-symbols77,2343
(defvar tex-space-unit tex-space-unit94,3058
(defvar *in-tex-math-mode* *in-tex-math-mode*95,3086
(defvar *in-tex-display-mode* *in-tex-display-mode*96,3118
(defstyle textex98,3154
(defstyle tex-1tex-1115,3743
(defun upget upget133,4381
(defun pp-symbol-tex pp-symbol-tex138,4509
(defun string-nthcdr-2 string-nthcdr-2196,6880
(defun tex-break-before-symbol-p tex-break-before-symbol-p199,6987
(defun pp-tex-special-symbol pp-tex-special-symbol206,7221
(defun pp-space-p-tex pp-space-p-tex232,8070
(defun terpri-heuristics-tex terpri-heuristics-tex236,8140
(defun pp-typesym-tex pp-typesym-tex241,8280
(defun print-type-char-tex print-type-char-tex246,8360
(defun indent-tex indent-tex255,8525
(defun indent-tex-1 indent-tex-1258,8579
(defun display-prefix-tex display-prefix-tex263,8739
(defun display-postfix-tex display-postfix-tex267,8837
(defun text-prefix-tex text-prefix-tex271,8937
(defun text-postfix-tex text-postfix-tex278,9127
(defcategory tex-chartex-char285,9308

dfont.lisp,9357
(deffile dfontdfont15,632
(defscribefont alphaalpha27,901
(defscribefont betabeta30,941
(defscribefont gammagamma33,980
(defscribefont deltadelta36,1020
(defscribefont epsilonepsilon39,1060
(defscribefont zetazeta42,1102
(defscribefont etaeta45,1141
(defscribefont thetatheta48,1179
(defscribefont iotaiota52,1239
(defscribefont kappakappa55,1278
(defscribefont lambdalambda58,1318
(defscribefont mumu61,1359
(defscribefont nunu64,1396
(defscribefont xixi67,1433
(defscribefont omicronomicron70,1470
(defscribefont pipi73,1512
(defscribefont rhorho76,1549
(defscribefont sigmasigma79,1587
(defscribefont tautau82,1627
(defscribefont upsilonupsilon85,1665
(defscribefont phiphi88,1707
(defscribefont chichi91,1745
(defscribefont psipsi94,1783
(defscribefont omegaomega97,1821
(defscribefont capalphacapalpha108,2047
(defscribefont capbetacapbeta111,2090
(defscribefont capgammacapgamma114,2132
(defscribefont capdeltacapdelta117,2175
(defscribefont capepsiloncapepsilon120,2218
(defscribefont capzetacapzeta123,2263
(defscribefont capetacapeta126,2305
(defscribefont capthetacaptheta129,2346
(defscribefont capiotacapiota132,2389
(defscribefont capkappacapkappa135,2431
(defscribefont caplambdacaplambda138,2474
(defscribefont capmucapmu141,2518
(defscribefont capnucapnu144,2558
(defscribefont capxicapxi147,2598
(defscribefont capomicroncapomicron150,2638
(defscribefont cappicappi153,2683
(defscribefont caprhocaprho156,2723
(defscribefont capsigmacapsigma159,2764
(defscribefont captaucaptau162,2807
(defscribefont capupsiloncapupsilon165,2848
(defscribefont capphicapphi168,2893
(defscribefont capchicapchi171,2934
(defscribefont cappsicappsi174,2975
(defscribefont capomegacapomega177,3016
(defscribefont boldabolda187,3205
(defscribefont boldbboldb190,3246
(defscribefont boldcboldc193,3287
(defscribefont bolddboldd196,3328
(defscribefont boldebolde199,3369
(defscribefont boldfboldf202,3410
(defscribefont boldgboldg205,3451
(defscribefont boldhboldh208,3492
(defscribefont boldiboldi211,3533
(defscribefont boldjboldj214,3574
(defscribefont boldkboldk217,3615
(defscribefont boldlboldl220,3656
(defscribefont boldmboldm223,3697
(defscribefont boldnboldn226,3738
(defscribefont boldoboldo229,3779
(defscribefont boldpboldp232,3820
(defscribefont boldqboldq235,3861
(defscribefont boldrboldr238,3902
(defscribefont boldsbolds241,3943
(defscribefont boldtboldt244,3984
(defscribefont bolduboldu247,4025
(defscribefont boldvboldv250,4066
(defscribefont boldwboldw253,4107
(defscribefont boldxboldx256,4148
(defscribefont boldyboldy259,4189
(defscribefont boldzboldz262,4230
(defscribefont scriptascripta272,4419
(defscribefont scriptbscriptb275,4464
(defscribefont scriptcscriptc278,4509
(defscribefont scriptdscriptd281,4554
(defscribefont scriptescripte284,4599
(defscribefont scriptfscriptf287,4644
(defscribefont scriptgscriptg290,4689
(defscribefont scripthscripth293,4734
(defscribefont scriptiscripti296,4779
(defscribefont scriptjscriptj299,4824
(defscribefont scriptkscriptk302,4869
(defscribefont scriptlscriptl305,4914
(defscribefont scriptmscriptm308,4959
(defscribefont scriptnscriptn311,5004
(defscribefont scriptoscripto314,5049
(defscribefont scriptpscriptp317,5094
(defscribefont scriptqscriptq320,5139
(defscribefont scriptrscriptr323,5184
(defscribefont scriptsscripts326,5229
(defscribefont scripttscriptt329,5274
(defscribefont scriptuscriptu332,5319
(defscribefont scriptvscriptv335,5364
(defscribefont scriptwscriptw338,5409
(defscribefont scriptxscriptx341,5454
(defscribefont scriptyscripty344,5499
(defscribefont scriptzscriptz347,5544
(defscribefont sub0sub0357,5728
(defscribefont sub1sub1360,5767
(defscribefont sub2sub2363,5806
(defscribefont sub3sub3366,5845
(defscribefont sub4sub4369,5884
(defscribefont sub5sub5372,5923
(defscribefont sub6sub6375,5962
(defscribefont sub7sub7378,6001
(defscribefont sub8sub8381,6040
(defscribefont sub9sub9384,6079
(defscribefont sublparensublparen387,6118
(defscribefont submembersubmember390,6162
(defscribefont subnullsetsubnullset393,6211
(defscribefont subrparensubrparen396,6262
(defscribefont subalphasubalpha406,6477
(defscribefont subbetasubbeta409,6524
(defscribefont subgammasubgamma412,6570
(defscribefont subdeltasubdelta415,6617
(defscribefont subepsilonsubepsilon418,6664
(defscribefont subzetasubzeta421,6713
(defscribefont subetasubeta424,6759
(defscribefont subthetasubtheta427,6804
(defscribefont subiotasubiota430,6851
(defscribefont subkappasubkappa433,6897
(defscribefont sublambdasublambda436,6944
(defscribefont submusubmu439,6992
(defscribefont subnusubnu442,7036
(defscribefont subxisubxi445,7080
(defscribefont subomicronsubomicron448,7124
(defscribefont subpisubpi451,7173
(defscribefont subrhosubrho454,7217
(defscribefont subsigmasubsigma457,7262
(defscribefont subtausubtau460,7309
(defscribefont subupsilonsubupsilon463,7354
(defscribefont subphisubphi466,7403
(defscribefont subchisubchi469,7448
(defscribefont subpsisubpsi472,7493
(defscribefont subomegasubomega475,7538
(defscribefont sup0sup0485,7738
(defscribefont sup1sup1488,7777
(defscribefont sup2sup2491,7816
(defscribefont sup3sup3494,7855
(defscribefont sup4sup4497,7894
(defscribefont sup5sup5500,7933
(defscribefont sup6sup6503,7972
(defscribefont sup7sup7506,8011
(defscribefont sup8sup8509,8050
(defscribefont sup9sup9512,8089
(defscribefont supasupa515,8128
(defscribefont supbsupb518,8167
(defscribefont supcsupc521,8206
(defscribefont supdsupd524,8245
(defscribefont supesupe527,8284
(defscribefont supfsupf530,8323
(defscribefont supgsupg533,8362
(defscribefont suphsuph536,8401
(defscribefont supisupi539,8440
(defscribefont supjsupj542,8479
(defscribefont supksupk545,8518
(defscribefont suplsupl548,8557
(defscribefont suplparensuplparen551,8596
(defscribefont supmsupm554,8640
(defscribefont supminussupminus557,8679
(defscribefont supnsupn560,8722
(defscribefont suposupo563,8761
(defscribefont suppsupp566,8800
(defscribefont supplussupplus569,8839
(defscribefont supqsupq572,8881
(defscribefont suprsupr575,8920
(defscribefont suprparensuprparen578,8959
(defscribefont supssups581,9003
(defscribefont suptsupt584,9042
(defscribefont supusupu587,9081
(defscribefont supvsupv590,9120
(defscribefont supwsupw593,9159
(defscribefont supxsupx596,9198
(defscribefont supysupy599,9237
(defscribefont supzsupz602,9276
(defscribefont alephaleph607,9339
(defscribefont approxapprox610,9380
(defscribefont assertedbyassertedby613,9423
(defscribefont asteriskasterisk616,9474
(defscribefont ceiling1ceiling1619,9516
(defscribefont ceiling2ceiling2622,9563
(defscribefont circledotcircledot625,9610
(defscribefont circleminuscircleminus628,9659
(defscribefont composecompose631,9707
(defscribefont deldel634,9752
(defscribefont diamonddiamond637,9793
(defscribefont directsumdirectsum640,9838
(defscribefont dividedivide643,9887
(defscribefont doubtildedoubtilde646,9930
(defscribefont eqpeqp651,9999
(defscribefont falsehoodfalsehood654,10036
(defscribefont floor1floor1657,10085
(defscribefont floor2floor2660,10128
(defscribefont gradientgradient663,10171
(defscribefont greateqgreateq666,10215
(defscribefont iff1iff1669,10260
(defscribefont iff2iff2672,10299
(defscribefont imp1imp1675,10338
(defscribefont imp2imp2678,10377
(defscribefont imp3imp3681,10416
(defscribefont implied1implied1684,10455
(defscribefont implied2implied2687,10502
(defscribefont impliedbyimpliedby690,10549
(defscribefont infinityinfinity694,10599
(defscribefont intersectintersect697,10646
(defscribefont joinjoin700,10695
(defscribefont lesseqlesseq703,10734
(defscribefont meetmeet706,10777
(defscribefont member1member1709,10816
(defscribefont minplusminplus712,10861
(defscribefont newparnewpar716,10902
(defscribefont nonmembernonmember719,10945
(defscribefont normnorm722,10994
(defscribefont northnorth726,11053
(defscribefont northeastnortheast729,11094
(defscribefont northwestnorthwest732,11143
(defscribefont notassertnotassert736,11193
(defscribefont noteqnoteq739,11242
(defscribefont notequivnotequiv742,11283
(defscribefont notvalidnotvalid745,11330
(defscribefont nullsetnullset749,11398
(defscribefont phi2phi2752,11444
(defscribefont oneone757,11505
(defscribefont plusminplusmin760,11542
(defscribefont powersetpowerset763,11582
(defscribefont propersubsetpropersubset766,11629
(defscribefont propersupersetpropersuperset769,11680
(defscribefont setintersectsetintersect772,11733
(defscribefont setunionsetunion775,11788
(defscribefont similarsimilar778,11835
(defscribefont southsouth781,11880
(defscribefont southeastsoutheast784,11921
(defscribefont sqrtsqrt787,11970
(defscribefont squaresquare790,12015
(defscribefont starstar793,12058
(defscribefont subsetsubset796,12097
(defscribefont supersetsuperset799,12140
(defscribefont tensortensor802,12185
(defscribefont timestimes805,12228
(defscribefont truthtruth808,12269
(defscribefont unionunion811,12310
(defscribefont validvalid814,12351

diy.lisp,1533
(deffile diydiy14,631
(defun free-vars-in-lines free-vars-in-lines19,766
(defflag use-diyuse-diy25,984
(defmexpr diydiy38,1540
(defmexpr piypiy54,2238
(defmexpr diy-with-timeoutdiy-with-timeout71,3018
(defmexpr diy-l-with-timeoutdiy-l-with-timeout94,3984
(defmexpr diy2diy2117,5027
(defmexpr diy2-ldiy2-l144,6141
(defmexpr piy2piy2172,7467
(deftactic diy-tacdiy-tac203,8853
(deftactic auto-tacauto-tac215,9308
(deftactic min-propmin-prop222,9500
(defun diy2 diy2234,9808
(defun diy2-l diy2-l244,10163
(defun diy2-gen diy2-gen266,11321
(defun piy2 piy2482,21617
(defun piy piy486,21792
(defvar *diy-timed-out* *diy-timed-out*522,23123
(defun diy-with-timeout diy-with-timeout524,23153
(defun diy-l-with-timeout diy-l-with-timeout527,23249
(defun diy diy530,23361
(defun diy-real diy-real544,23926
(defun diy-justify diy-justify704,31146
(defun make-etree-conjunction make-etree-conjunction718,31908
(defun make-universalized-node make-universalized-node741,32460
(defun update-line-node update-line-node785,33664
(defun diy-mt-real diy-mt-real795,33975
(defun mt-matingsearch-controller mt-matingsearch-controller944,40492
(defun mt-matingsearch-controller-real mt-matingsearch-controller-real953,40777
(defun mtree-mating-2 mtree-mating-2958,40879
(defun mtree-mating-3 mtree-mating-3967,41224
(defun  exit-mtree-prior-2 exit-mtree-prior-2981,41746
(defun  exit-mtree-2 exit-mtree-21002,42620
(defmexpr diy-ldiy-l1026,43581
(defun diy-lemma diy-lemma1041,44234

docdef.lisp,184
(deffile docdefdocdef23,766
(defmode scribe-docscribe-doc30,896
(defmode scribe-doc-first-orderscribe-doc-first-order47,1263
(defmacro in-auto-doc-mode in-auto-doc-mode67,1749

edabb.lisp,360
(deffile edabbedabb21,739
(defedop instinst33,1028
(defedop installinstall38,1114
(defedop install-recinstall-rec43,1202
(defedop abbrabbr48,1298
(defedop lib-abbrlib-abbr52,1357
(defedop new-defsnew-defs56,1424
(defedop constantsconstants60,1486
(defedop inst1inst164,1551
(defedop expand=*expand=*69,1635
(defedop expand=expand=74,1731

edchange.lisp,836
(deffile edchangeedchange19,675
(defedop mrgmrg27,868
(defedop cmrgcmrg41,1236
(defedop asrbasrb59,1793
(defedop dist-expdist-exp69,2090
(defedop dist-ctrdist-ctr80,2440
(defedop asslassl91,2791
(defedop assrassr98,2957
(defedop cmutcmut105,3124
(defedop pmutpmut115,3372
(defedop dnegdneg122,3534
(defedop subimsubim129,3680
(defedop subeqsubeq136,3846
(defedop cntopcntop143,4028
(defedop dldl151,4296
(defedop drdr156,4384
(defedop mrg*mrg*163,4504
(defedop cmrg*cmrg*178,4909
(defedop asrb*asrb*196,5478
(defedop dist-exp*dist-exp*206,5789
(defedop dist-ctr*dist-ctr*217,6151
(defedop assl*assl*228,6514
(defedop assr*assr*235,6694
(defedop cmut*cmut*242,6875
(defedop pmut*pmut*252,7137
(defedop dneg*dneg*259,7313
(defedop subim*subim*266,7472
(defedop subeq*subeq*273,7653

eddev.lisp,602
(deffile eddeveddev19,717
(defedop dbdb26,864
(defwffop delete-leftmost-binderdelete-leftmost-binder31,955
(defwffop delete-binderdelete-binder38,1120
(defun delete-binder delete-binder47,1349
(defedop opop57,1655
(defwffop openwffaopenwffa62,1730
(defun openwffa openwffa69,1895
(defwffrec openwffa1openwffa171,1941
(defun openwffa1 openwffa174,1992
(defedop epep82,2276
(defwffop openwffeopenwffe87,2351
(defun openwffe openwffe94,2518
(defwffrec openwffe1openwffe196,2564
(defun openwffe1 openwffe199,2615
(defun delete-leftmost-binder delete-leftmost-binder107,2900

edill.lisp,357
(deffile edilledill22,763
(defwffop locateunwffslocateunwffs29,908
(defun locateunwffs locateunwffs37,1140
(defwffop culprit-pculprit-p61,2065
(defun culprit-p culprit-p69,2241
(defedop wffpwffp89,3090
(defedop illill97,3262
(defedop edilledill102,3325
(defwffop find-culpritfind-culprit107,3409
(defun find-culprit find-culprit114,3569

edlmbd.lisp,507
(deffile edlmbdedlmbd22,756
(defedop lnormlnorm34,1047
(defedop lnorm-betalnorm-beta39,1122
(defedop lnorm-etalnorm-eta44,1207
(defedop ulnormulnorm49,1290
(defedop redred54,1380
(defedop lexplexp59,1456
(defedop etacetac64,1531
(defedop etanetan69,1608
(defedop etaxetax74,1684
(defedop letaleta79,1760
(defedop etabetab84,1837
(defedop abnormabnorm89,1917
(defedop push-negpush-neg96,2019
(defedop pull-negpull-neg101,2105
(defedop nnfnnf106,2191
(defedop negneg111,2267

edmbed.lisp,482
(deffile edmbededmbed14,610
(defedop mbed-almbed-al20,784
(defedop mbed-armbed-ar27,976
(defedop mbed-ilmbed-il34,1169
(defedop mbed-irmbed-ir41,1372
(defedop mbed-olmbed-ol48,1578
(defedop mbed-ormbed-or55,1768
(defedop mbed-fmbed-f62,1959
(defedop mbed-embed-e69,2175
(defedop mbed-e1mbed-e176,2399
(defedop mbed-lmbed-l83,2623
(defedop mbed-qlmbed-ql90,2823
(defedop mbed-qrmbed-qr97,3021
(defedop mbed=rmbed=r104,3220
(defedop mbed=lmbed=l111,3409

ed-menus.lisp,5660
(deffile ed-menused-menus22,743
(defmenuitem EDITOR0EDITOR029,875
(defmenu EDITOREDITOR38,1014
(defmenu PRINTPRINT44,1105
(defmenuitem PP50,1194
(defmenuitem PPPP57,1294
(defmenuitem PSPS64,1397
(defmenuitem PTPT71,1500
(defmenu WEAK-LABELSWEAK-LABELS78,1603
(defmenuitem CWCW84,1704
(defmenuitem DELWEAKDELWEAK91,1813
(defmenuitem DWDW99,1948
(defmenuitem DW*DW*106,2057
(defmenuitem NAMENAME113,2169
(defmenuitem RWRW121,2295
(defmenuitem SAVESAVE128,2404
(defmenu ED-SCRIBE-RECORDED-SCRIBE-RECORD135,2514
(defmenuitem OO141,2625
(defmenuitem REMREM149,2747
(defmenu ED-JFORMSED-JFORMS156,2864
(defmenuitem CJFORMCJFORM162,2961
(defmenuitem DJFORMDJFORM169,3080
(defmenuitem NUM-HPATHSNUM-HPATHS176,3199
(defmenuitem NUM-VPATHSNUM-VPATHS183,3330
(defmenuitem PJPJ190,3461
(defmenuitem PROP-CJFORMPROP-CJFORM197,3568
(defmenuitem VPVP204,3702
(defmenuitem VPDVPD211,3809
(defmenuitem VPFVPF218,3919
(defmenuitem VPTVPT225,4030
(defmenuitem LEAVELEAVE232,4141
(defmenuitem NOOPNOOP240,4267
(defmenuitem OKOK248,4390
(defmenu ED-MOVINGED-MOVING256,4507
(defmenuitem UP-ONE-LEVELUP-ONE-LEVEL262,4604
(defmenuitem AA270,4749
(defmenuitem DD278,4864
(defmenuitem FIRST-BINDERFIRST-BINDER286,4979
(defmenuitem FIRST-INFIXFIRST-INFIX294,5122
(defmenuitem LEFTLEFT302,5263
(defmenuitem RIGHTRIGHT310,5388
(defmenuitem UNDOUNDO318,5515
(defmenuitem XTRXTR326,5639
(defmenuitem GOTO-TOPGOTO-TOP334,5761
(defmenu CHANGINGCHANGING342,5895
(defmenuitem ASRBASRB348,5990
(defmenuitem ASSLASSL356,6113
(defmenuitem ASSRASSR364,6236
(defmenuitem CMRGCMRG372,6359
(defmenuitem CMUTCMUT380,6482
(defmenuitem CNTOPCNTOP388,6605
(defmenuitem DIST-CTRDIST-CTR396,6731
(defmenuitem DIST-EXPDIST-EXP404,6866
(defmenuitem DLDL412,7001
(defmenuitem DNEGDNEG419,7108
(defmenuitem DRDR427,7232
(defmenuitem MRGMRG434,7339
(defmenuitem PMUTPMUT442,7460
(defmenuitem SUBEQSUBEQ450,7584
(defmenuitem SUBIMSUBIM458,7711
(defmenu REC-CHANGINGREC-CHANGING466,7838
(defmenuitem ASRB*ASRB*472,7944
(defmenuitem ASSL*ASSL*480,8074
(defmenuitem ASSR*ASSR*488,8204
(defmenuitem CMRG*CMRG*496,8334
(defmenuitem CMUT*CMUT*504,8464
(defmenuitem DIST-CTR*DIST-CTR*512,8594
(defmenuitem DIST-EXP*DIST-EXP*520,8736
(defmenuitem DNEG*DNEG*528,8878
(defmenuitem MRG*MRG*536,9008
(defmenuitem PMUT*PMUT*544,9136
(defmenuitem SUBEQ*SUBEQ*552,9267
(defmenuitem SUBIM*SUBIM*560,9401
(defmenu EMBEDDINGEMBEDDING568,9535
(defmenuitem MBED-ALMBED-AL574,9635
(defmenuitem MBED-ARMBED-AR582,9768
(defmenuitem MBED-EMBED-E590,9901
(defmenuitem MBED-E1MBED-E1598,10031
(defmenuitem MBED-FMBED-F606,10164
(defmenuitem MBED-ILMBED-IL614,10294
(defmenuitem MBED-IRMBED-IR622,10427
(defmenuitem MBED-LMBED-L630,10560
(defmenuitem MBED-OLMBED-OL638,10690
(defmenuitem MBED-ORMBED-OR646,10824
(defmenuitem MBED-QLMBED-QL654,10958
(defmenuitem MBED-QRMBED-QR662,11092
(defmenuitem MBED=LMBED=L670,11226
(defmenuitem MBED=RMBED=R678,11357
(defmenu REWRITINGREWRITING686,11488
(defmenuitem ARRARR692,11589
(defmenuitem ARR*ARR*699,11699
(defmenuitem ARR1ARR1706,11812
(defmenuitem ARR1*ARR1*713,11925
(defmenuitem MAKE-RRULEMAKE-RRULE720,12041
(defmenuitem UNARRUNARR727,12172
(defmenuitem UNARR*UNARR*734,12288
(defmenuitem UNARR1UNARR1741,12407
(defmenuitem UNARR1*UNARR1*748,12526
(defmenu SUBSTITUTIONSUBSTITUTION755,12649
(defmenuitem ABAB761,12756
(defmenuitem IBIB768,12866
(defmenuitem PRIM-SUBSTPRIM-SUBST775,12976
(defmenuitem REW-EQUIVREW-EQUIV783,13121
(defmenuitem RPRP790,13252
(defmenuitem RPALLRPALL797,13362
(defmenuitem SUBSUB804,13481
(defmenuitem SUBSTSUBST812,13605
(defmenuitem SUBSTYPSUBSTYP819,13724
(defmenu ABBREV-OPSABBREV-OPS827,13861
(defmenuitem ABBRABBR833,13964
(defmenuitem CONSTANTSCONSTANTS840,14078
(defmenuitem EXPAND=EXPAND=847,14207
(defmenuitem EXPAND=*EXPAND=*854,14330
(defmenuitem INSTINST861,14456
(defmenuitem INST1INST1868,14570
(defmenuitem INSTALLINSTALL875,14687
(defmenuitem NEW-DEFSNEW-DEFS882,14810
(defmenu LAMBDA-OPSLAMBDA-OPS890,14948
(defmenuitem ABNORMABNORM896,15051
(defmenuitem ETABETAB903,15171
(defmenuitem ETACETAC910,15285
(defmenuitem ETANETAN917,15399
(defmenuitem ETAXETAX924,15513
(defmenuitem LETALETA931,15627
(defmenuitem LEXPLEXP938,15741
(defmenuitem LNORMLNORM945,15855
(defmenuitem LNORM-BETALNORM-BETA953,15983
(defmenuitem LNORM-ETALNORM-ETA961,16127
(defmenuitem REDRED969,16268
(defmenuitem ULNORMULNORM976,16380
(defmenu NEGATION-OPSNEGATION-OPS983,16501
(defmenuitem NEGNEG989,16608
(defmenuitem NNF2NNF2996,16721
(defmenuitem PULL-NEGPULL-NEG1004,16846
(defmenuitem PUSH-NEGPUSH-NEG1011,16974
(defmenu PRIMSUB-OPSPRIMSUB-OPS1018,17102
(defmenuitem NAME-PRIMNAME-PRIM1024,17207
(defmenuitem PRT-PRIMPRT-PRIM1031,17337
(defmenu MISC-OPSMISC-OPS1038,17464
(defmenuitem CLAUSE-FORMCLAUSE-FORM1044,17563
(defmenuitem CNFCNF1051,17696
(defmenuitem HEADHEAD1059,17816
(defmenuitem HVARSHVARS1067,17939
(defmenuitem MIN-SCOPEMIN-SCOPE1075,18065
(defmenuitem SUBFORMULASSUBFORMULAS1082,18192
(defmenu SKOLEMIZESKOLEMIZE1089,18325
(defmenuitem SK1SK11095,18426
(defmenuitem SK3SK31102,18536
(defmenu INNER-QUANT-OPSINNER-QUANT-OPS1109,18646
(defmenuitem DBDB1115,18759
(defmenuitem EPEP1122,18872
(defmenuitem OPOP1129,18985
(defmenu ILL-FORMED-WFF-OPSILL-FORMED-WFF-OPS1136,19098
(defmenuitem DUPWDUPW1142,19217
(defmenuitem EDILLEDILL1149,19339
(defmenuitem ILLILL1157,19475
(defmenuitem TPTP1164,19594
(defmenuitem WFFPWFFP1171,19710

edmove.lisp,804
(deffile edmoveedmove21,729
(defedop \0\028,872
(defedop ^^33,1019
(defun move-all-up move-all-up43,1318
(defun undo-last undo-last51,1594
(defedop undoundo58,1781
(defun xtr-func xtr-func64,1958
(defedop xtrxtr69,2063
(defedop aa73,2146
(defedop dd83,2462
(defwffop glrglr92,2731
(defwffop replace-glrreplace-glr101,2933
(defun replace-glr replace-glr112,3207
(defedop ll117,3393
(defun glr glr125,3549
(defwffop grrgrr129,3671
(defwffop replace-grrreplace-grr138,3874
(defun replace-grr replace-grr149,4149
(defedop rr153,4301
(defun grr grr160,4457
(defedop fifi164,4573
(defwffop find-infixfind-infix170,4688
(defun find-infix find-infix177,4828
(defedop fbfb179,4880
(defwffop find-binderfind-binder185,5010
(defun find-binder find-binder192,5164

edopera.lisp,80
(deffile edoperaedopera21,700
(defedop tptp28,836
(defedop dupwdupw32,888

edprt.lisp,175
(deffile edprtedprt22,729
(defmacro defedprtop defedprtop34,1008
(defedprtop p p42,1174
(defedprtop pp pp44,1201
(defedprtop ps ps46,1230
(defedprtop pt pt48,1263

edrew.lisp,3708
(deffile edrewedrew20,728
(defcategory rewrite-rulerewrite-rule28,885
(defun rewrite-mhelp rewrite-mhelp44,1211
(defun rewrule-p rewrule-p56,1848
(defun get-rewrule get-rewrule57,1937
(defun active-p active-p58,2012
(defcategory theorytheory61,2110
(defun theory-mhelp theory-mhelp74,2363
(defun theory-p theory-p85,2880
(defun get-theory get-theory86,2968
(defmexpr make-theorymake-theory92,3193
(defun make-theory make-theory106,3995
(defedop make-rrulemake-rrule117,4626
(defwffop create-rewrite-rulecreate-rewrite-rule124,4800
(defun create-rewrite-rule create-rewrite-rule138,5563
(defmexpr list-rruleslist-rrules145,5900
(defun list-rrules list-rrules148,5972
(defmexpr make-inverse-rrulemake-inverse-rrule158,6336
(defun make-inverse-rrule make-inverse-rrule165,6532
(defmexpr make-abbrev-rrulemake-abbrev-rrule177,7074
(defun type-to-string-2 type-to-string-2185,7346
(defun make-abbrev-rrule make-abbrev-rrule192,7589
(defmexpr permute-rrulespermute-rrules206,8186
(defun permute-rrules permute-rrules209,8260
(defmexpr delete-rruledelete-rrule229,9334
(defun delete-rrule delete-rrule235,9469
(defedop arr1arr1248,10000
(defedop arr1*arr1*256,10249
(defedop arrarr265,10539
(defedop arr*arr*275,10892
(defedop unarr1unarr1286,11323
(defedop unarr1*unarr1*295,11619
(defedop unarrunarr305,11956
(defedop unarr*unarr*315,12354
(defwffop apply-rrule-1apply-rrule-1326,12832
(defwffop apply-rrule-1*apply-rrule-1*338,13210
(defwffop apply-rrule-anyapply-rrule-any351,13628
(defwffop apply-rrule-any*apply-rrule-any*365,14080
(defwffop simplify-downsimplify-down380,14609
(defun simplify-down simplify-down394,15065
(defwffop simplify-upsimplify-up397,15122
(defun simplify-up simplify-up410,15543
(defwffop simplify-down*simplify-down*415,15757
(defun simplify-down* simplify-down*429,16215
(defwffop simplify-up*simplify-up*432,16274
(defun simplify-up* simplify-up*446,16740
(defwffop unapply-rrule-1unapply-rrule-1451,16956
(defwffop unapply-rrule-1*unapply-rrule-1*464,17378
(defwffop unapply-rrule-anyunapply-rrule-any478,17840
(defwffop unapply-rrule-any*unapply-rrule-any*492,18334
(defun apply-rrule-1 apply-rrule-1507,18907
(defun apply-rrule-1* apply-rrule-1*524,19559
(defun unapply-rrule-1 unapply-rrule-1540,20059
(defun unapply-rrule-1* unapply-rrule-1*558,20742
(defun bidir-rrules-exist bidir-rrules-exist575,21268
(defun active-bidir-rrules-exist active-bidir-rrules-exist579,21435
(defun apply-rrule-any* apply-rrule-any*583,21608
(defun apply-rrule-any apply-rrule-any599,22109
(defun unapply-rrule-any* unapply-rrule-any*620,22933
(defun unapply-rrule-any unapply-rrule-any636,23441
(defvar *binding-subs* *binding-subs*659,24349
(defvar *type-subs* *type-subs*660,24377
(defun apply-rrule-poly apply-rrule-poly662,24403
(defun suggest-types suggest-types689,25591
(defun compare-typelists compare-typelists705,26137
(defun rrule-instance-poly rrule-instance-poly713,26466
(defun rrule-instance-real rrule-instance-real719,26659
(defun replace-rrule-poly replace-rrule-poly739,27553
(defmexpr activate-rulesactivate-rules745,27812
(defun activate-rules activate-rules753,28120
(defmexpr deactivate-rulesdeactivate-rules757,28201
(defun deactivate-rules deactivate-rules765,28519
(defmexpr use-theoryuse-theory769,28604
(defun use-theory use-theory776,28796
(defun rrules-used-by rrules-used-by783,29033
(defvar *hopeless-fail* *hopeless-fail*789,29252
(defun apply-rrule-once apply-rrule-once791,29282
(defwffop instance-of-rewritinginstance-of-rewriting824,30967
(defun instance-of-rewriting instance-of-rewriting835,31302

edsub.lisp,432
(deffile edsubedsub21,705
(defwffop wff-identitywff-identity28,840
(defun wff-identity wff-identity35,983
(defedop ibib37,1017
(defwffop instantiate-binderinstantiate-binder42,1103
(defun instantiate-binder instantiate-binder52,1415
(defedop substsubst66,1924
(defedop prim-substprim-subst71,2016
(defedop abab79,2272
(defedop sub sub84,2348
(defedop substypsubstyp89,2481
(defedop rew-equivrew-equiv95,2626

edtop.lisp,3438
(deffile edtopedtop22,745
(deftoplevel ed-toped-top29,888
(defmexpr eded42,1204
(defcategory edopedop69,2166
(defflag edppwfflagedppwfflag96,2820
(defflag edprintdepthedprintdepth102,2980
(defflag edwin-topedwin-top108,3141
(defflag edwin-currentedwin-current115,3345
(defflag edwin-vpformedwin-vpform122,3558
(defflag edwin-top-widthedwin-top-width131,3866
(defflag edwin-current-widthedwin-current-width137,4029
(defflag edwin-vpform-widthedwin-vpform-width143,4200
(defflag edwin-top-heightedwin-top-height149,4371
(defflag edwin-current-heightedwin-current-height155,4535
(defflag edwin-vpform-heightedwin-vpform-height161,4707
(defflag printedtflagprintedtflag169,4905
(defflag printedtflag-slidesprintedtflag-slides176,5075
(defflag printedtfileprintedtfile184,5292
(defvar *edwin-top-window* *edwin-top-window*194,5540
(defvar *edwin-current-window* *edwin-current-window*195,5572
(defvar *edwin-vpform-window* *edwin-vpform-window*196,5608
(defvar *edwin-top-process* *edwin-top-process*197,5643
(defvar *edwin-current-process* *edwin-current-process*198,5676
(defvar *edwin-vpform-process* *edwin-vpform-process*199,5713
(defvar *edwins-opened* *edwins-opened*200,5749
(defmode scribe-edwffscribe-edwff203,5810
(defflag printedtopsprintedtops222,6207
(defvar edt-written-p edt-written-p232,6444
(defvar ed-level ed-level244,6742
(defvar ed-command-ctree ed-command-ctree248,6832
(defun initialize-ed-ctree initialize-ed-ctree250,6863
(defvar last-edwff last-edwff259,7075
(defvar edwff)edwff260,7099
(defvar cmdstack)cmdstack261,7114
(defvar wffstack)wffstack262,7132
(defvar temp)temp263,7150
(defun wff-ed wff-ed267,7237
(defgwff-type edwff-typeedwff-type283,7784
(defun edwff-ckfn edwff-ckfn288,7920
(defun edwff-getfn edwff-getfn291,7964
(defgwff-type last-edwff-typelast-edwff-type296,8133
(defun last-edwff-ckfn last-edwff-ckfn301,8303
(defun last-edwff-getfn last-edwff-getfn304,8357
(defgwff-type edit-wffedit-wff310,8548
(defun edit-wff-p edit-wff-p315,8683
(defun get-edit-wff get-edit-wff318,8748
(defun edtop edtop326,8909
(defun kill-edwin-windows kill-edwin-windows345,9646
(defun ed-top-prompt ed-top-prompt379,11079
(defmacro multiple-prin1 multiple-prin1389,11502
(defun ed-command-interpreter ed-command-interpreter399,11772
(defun ed-command-interpreter ed-command-interpreter477,14321
(defun ed-print-* ed-print-*597,18197
(defun edwin-update edwin-update608,18451
(defun edwin-find-top edwin-find-top640,19970
(defedop oo652,20328
(defun invert-printedtflag invert-printedtflag660,20680
(defedop remrem665,20813
(defwffop remark-printedtfileremark-printedtfile669,20878
(defedop okok678,21042
(defedop leaveleave682,21135
(defedop noopnoop686,21231
(defun ednoop ednoop690,21288
(defun move-up move-up698,21442
(defun move-exit move-exit710,21775
(defun abort-exit abort-exit720,22104
(defwffrec edsearchedsearch724,22201
(defun edsearch edsearch727,22248
(defvar auto:printvpdflag)auto:printvpdflag744,22802
(defvar auto:vpd-filename)auto:vpd-filename745,22829
(defun remark-printedtfile remark-printedtfile747,22857
(defun write-edwff write-edwff760,23413
(defun setup-edwin-top-window setup-edwin-top-window780,24212
(defun setup-edwin-current-window setup-edwin-current-window812,25481
(defun setup-edwin-vpform-window setup-edwin-vpform-window844,26804

environ.lisp,113
(deffile environenviron23,768
(defmexpr environmentenvironment35,947
(defun environment environment40,1116

etps-events.lisp,1032
(deffile etps-eventsetps-events19,665
(defflag error-fileerror-file27,853
(defevent errorerror33,996
(defvar max-err-count max-err-count44,1369
(defvar err-count err-count46,1396
(defun count-errors count-errors48,1418
(defvar computed-code computed-code57,1715
(defvar dt dt62,1851
(defflag USER-PASSWD-FILEUSER-PASSWD-FILE64,1874
(defflag score-filescore-file71,2062
(defevent done-excdone-exc77,2205
(defun done-exc-hook done-exc-hook88,2577
(defflag proof-fileproof-file97,2934
(defevent proof-actionproof-action103,3085
(defflag advice-fileadvice-file113,3383
(defevent advice-askedadvice-asked119,3514
(defflag command-filecommand-file134,3890
(defevent commandcommand140,4025
(defflag input-error-fileinput-error-file148,4264
(defevent input-errorinput-error154,4422
(defflag rule-error-filerule-error-file163,4639
(defevent rule-errorrule-error169,4795
(defmexpr summarysummary182,5170
(defun summary summary186,5254
(defun summarize-score-file summarize-score-file189,5310

etrees-auto-suggest.lisp,1182
(defmateop etr-infoetr-info15,637
(defun etr-info etr-info20,763
(defmexpr etr-auto-suggestetr-auto-suggest29,1011
(defun etr-auto-suggest etr-auto-suggest42,1494
(defun prenex-gensub prenex-gensub203,8581
(defun prenex-normal-form prenex-normal-form212,8883
(defun nnf-ab-to-prenex-normal-form nnf-ab-to-prenex-normal-form225,9372
(defun strip-lambda-prefix strip-lambda-prefix246,10103
(defun strip-binding-prefix strip-binding-prefix251,10213
(defun wff-applic-head wff-applic-head256,10324
(defun gensub-p gensub-p262,10461
(defun max-substs-var-in-gensub max-substs-var-in-gensub275,10723
(defun max-substs-var-in-gensub-1 max-substs-var-in-gensub-1279,10829
(defun gensub-depth gensub-depth290,11276
(defun prefix-length prefix-length299,11633
(defun gensub-num-lits gensub-num-lits304,11730
(defun gensub-num-lits-1 gensub-num-lits-1308,11844
(defun gensub-bd-types gensub-bd-types315,12009
(defun gensub-num-abbr-heads gensub-num-abbr-heads327,12477
(defun gensub-num-abbr-heads-1 gensub-num-abbr-heads-1330,12574
(defun compute-num-of-dups compute-num-of-dups343,12997
(defun ho-unif-depth-of-term ho-unif-depth-of-term356,13464

etrees-debug.lisp,197
(defun check-etree-structure-break check-etree-structure-break33,1548
(defun check-etree-structure check-etree-structure41,1750
(defun check-etree-structure-2 check-etree-structure-2188,6361

etrees-def.lisp,174
(deffile etrees-defetrees-def13,614
(defun etree-q etree-q23,869
(defgwff-type etrees-labelsetrees-labels27,909
(defun etrees-labels-getfn etrees-labels-getfn32,1033

etrees-exp-vars.lisp,165
(deffile etrees-exp-varsetrees-exp-vars15,608
(defflavor exp-varexp-var70,3397
(defvar *show-exp-var* *show-exp-var*85,3893
(defflavor exp-varexp-var93,4150

etrees-flags.lisp,2430
(deffile etrees-flagsetrees-flags13,614
(defcontext expansion-treesexpansion-trees18,734
(defflag print-nodenamesprint-nodenames24,876
(defflag print-deepprint-deep32,1126
(defflag min-quantifier-scopemin-quantifier-scope40,1363
(defvar truthvalues-hack-updatelist truthvalues-hack-updatelist55,2074
(defflag truthvalues-hacktruthvalues-hack57,2123
(defflag initial-bktrack-limitinitial-bktrack-limit76,3167
(defstruct (eproof eproof93,3922
(defvar *print-eproof-verbose* *print-eproof-verbose*131,5848
(defun print-eproof print-eproof133,5885
(defvar master-eproof master-eproof170,7710
(defflag duplication-strategyduplication-strategy172,7738
(defflag duplication-strategy-pfdduplication-strategy-pfd185,8293
(definfo dup-alldup-all200,9012
(definfo dup-innerdup-inner205,9191
(definfo dup-outerdup-outer210,9383
(defflag skolem-defaultskolem-default217,9661
(definfo sk1sk1231,10284
(definfo sk3sk3238,10582
(definfo nilnil248,11044
(defflag rewrite-defnsrewrite-defns253,11229
(definfo eagereager284,12598
(definfo nonenone289,12789
(definfo lazy1lazy1299,13092
(definfo lazy2lazy2305,13310
(definfo dualdual318,13829
(defmode naivenaive331,14347
(defflag interrupt-enableinterrupt-enable346,14765
(defflag query-userquery-user358,15220
(definfo query-jformsquery-jforms375,16123
(definfo show-jformsshow-jforms381,16389
(definfo query-slistsquery-slists386,16572
(defflag mating-verbosemating-verbose391,16748
(defflag rec-ms-filerec-ms-file402,17182
(defflag rec-ms-filenamerec-ms-filename409,17415
(defflag new-mating-after-dupnew-mating-after-dup416,17597
(defflag leaf-nameleaf-name427,18015
(defflag edisj-nameedisj-name433,18151
(defflag econj-nameeconj-name439,18295
(defflag imp-nameimp-name445,18439
(defflag empty-dup-info-nameempty-dup-info-name451,18580
(defflag neg-nameneg-name457,18735
(defflag true-nametrue-name463,18873
(defflag false-namefalse-name469,19010
(defflag rewrite-namerewrite-name475,19153
(defflag expansion-nameexpansion-name481,19294
(defflag selection-nameselection-name487,19439
(defflag skolem-selection-nameskolem-selection-name494,19609
(defflag eproof-nameeproof-name501,19783
(defflag mating-namemating-name507,19912
(defflag first-order-mode-msfirst-order-mode-ms515,20048
(defflag rank-eproof-fnrank-eproof-fn526,20467
(definfo num-vpaths-rankingnum-vpaths-ranking537,20958

etrees-jforms.lisp,2812
(deffile etrees-jformsetrees-jforms13,614
(defun final-jform final-jform27,1117
(defun etree-to-jform etree-to-jform32,1231
(defun etree-to-jform-2 etree-to-jform-243,1605
(defun etree-to-prop-jform etree-to-prop-jform56,2086
(defun etree-to-prop-jform-2 etree-to-prop-jform-266,2434
(defflag ALLOW-NONLEAF-CONNSALLOW-NONLEAF-CONNS94,3800
(defflag DISSOLVEDISSOLVE108,4259
(defun lambda-rewrite-p lambda-rewrite-p117,4646
(defun flexible-p flexible-p121,4771
(defun allow-node-in-jform allow-node-in-jform130,4981
(defflag MATE-UP-TO-NNFMATE-UP-TO-NNF161,6163
(defun make-nnf-literal make-nnf-literal170,6456
(defun etree-to-prop-jform-rec etree-to-prop-jform-rec198,7491
(defun etree-to-prop-jform-rec-2 etree-to-prop-jform-rec-2224,8336
(defun exp-node-to-jform exp-node-to-jform272,10646
(defun make-rulep-literal make-rulep-literal385,16455
(defun etree-to-rulep-jform etree-to-rulep-jform399,16907
(defun etree-to-rulep-jform-rec etree-to-rulep-jform-rec402,17012
(defun etree-to-rulep-jform-rec-2 etree-to-rulep-jform-rec-2412,17377
(defun find-all-leaf-names-in-jform find-all-leaf-names-in-jform438,18547
(defun dissolve-jform dissolve-jform443,18826
(defun dissolve-jform-rec dissolve-jform-rec450,19031
(defun dissolve-cpe dissolve-cpe529,22092
(defun dissolve-cc dissolve-cc562,23387
(defun normalize-jform normalize-jform608,25089
(defun normalize-jform-dis normalize-jform-dis652,26765
(defun normalize-jform-con normalize-jform-con672,27419
(defun strip-exp-vars strip-exp-vars691,27884
(defmateop cwcw703,28333
(defmateop cwscws709,28436
(defmateop cwdcwd715,28542
(defwffop cw-shallowcw-shallow721,28645
(defun cw-shallow cw-shallow734,29014
(defwffop cw-deepcw-deep739,29159
(defun cw-deep cw-deep752,29522
(defwffop cw-jformcw-jform757,29661
(defun cw-jform cw-jform771,30041
(defmateop cjformcjform778,30223
(defwffop cr-eproof-jformcr-eproof-jform782,30299
(defun cr-eproof-jform cr-eproof-jform789,30618
(defmateop num-vpathsnum-vpaths793,30733
(defmateop num-hpathsnum-hpaths798,30846
(defmateop vpdvpd803,30961
(defmateop vpvp808,31056
(defmateop vptvpt813,31154
(defmateop vpetreevpetree818,31244
(defwffop display-vp-etreedisplay-vp-etree823,31348
(defun display-vp-etree display-vp-etree830,31558
(defun find-jform-name find-jform-name833,31637
(defun apply-substs-to-jform apply-substs-to-jform849,32238
(defwffop modify-statusmodify-status868,32987
(defmateop mod-statusmod-status876,33243
(defun modify-status modify-status881,33347
(defun find-literals-in-jform find-literals-in-jform887,33508
(defun find-literal-in-jform find-literal-in-jform901,34026
(defun find-literal-in-jforms find-literal-in-jforms909,34412
(defun setvars-in-jform setvars-in-jform915,34563

etrees-labels.lisp,802
(deffile etrees-labelsetrees-labels19,745
(defflavor etreeetree29,1035
(defflavor etreeetree47,1822
(defflavor edisjunctionedisjunction95,4014
(defvar econj-name)econj-name134,5248
(defflavor econjunctioneconjunction135,5268
(defflavor rewriterewrite176,6554
(defflavor rewriterewrite186,6827
(defflavor leafleaf218,8350
(defflavor leafleaf228,8660
(defflavor empty-dup-infoempty-dup-info304,11906
(defflavor negationnegation324,12652
(defflavor implicationimplication353,13673
(defflavor truetrue396,15342
(defflavor falsefalse412,15947
(defflavor selectionselection435,16673
(defflavor selectionselection445,16935
(defflavor skolemskolem512,19269
(defflavor skolemskolem521,19528
(defflavor expansionexpansion576,21483
(defflavor expansionexpansion589,21879

etrees-print.lisp,2128
(deffile etrees-printetrees-print12,613
(defmacro defmateprtop defmateprtop20,792
(defmateprtop p p29,975
(defprtop pnodepnode30,1011
(defun pnode pnode33,1064
(defmateprtop pp pp36,1131
(defmateprtop ppf ppf38,1170
(defprtop pproof pproof39,1209
(defun pproof pproof41,1263
(defprtop pwdeeppwdeep46,1407
(defmateprtop pdeep pdeep49,1483
(defun pwdeep pwdeep51,1525
(defprtop ppwdeepppwdeep54,1616
(defmateprtop ppdeep ppdeep57,1700
(defun ppwdeep ppwdeep59,1744
(defprtop pwshallowpwshallow63,1867
(defmateprtop psh psh66,1949
(defun pwshallow pwshallow68,1992
(defprtop pwnodepwnode71,2088
(defmateprtop ppnode ppnode74,2160
(defun pwnode pwnode76,2203
(defprtop display-etreedisplay-etree83,2401
(defprtop display-etree-alldisplay-etree-all88,2627
(defmateprtop etdetd93,2850
(defmateprtop etpetp96,2899
(defun display-etree display-etree99,2952
(defun display-etree-main display-etree-main104,3082
(defun display-etree-all display-etree-all121,3675
(defun display-etree-all-main display-etree-all-main127,3814
(defun print-etree print-etree145,4518
(defprtop etree-to-listetree-to-list171,5629
(defun etree-to-list etree-to-list174,5707
(defun print-etree-main print-etree-main179,5806
(defmateop ptree ptree220,7138
(defprtop tr-print-etree tr-print-etree222,7185
(defmateop ptree* ptree*229,7574
(defprtop tr-print-etree* tr-print-etree*231,7623
(defmateop ptree-file ptree-file239,8072
(defwffop tr-print-etree-file*tr-print-etree-file*244,8184
(defun tr-print-etree-file* tr-print-etree-file*255,8767
(defun tr-print-etree tr-print-etree264,9187
(defun tr-print-etree* tr-print-etree*267,9272
(defun tr-print-etree-main tr-print-etree-main270,9360
(defun rec-etree-print rec-etree-print287,10233
(defun rec-etree-sons rec-etree-sons320,11653
(defun p-etree-labels p-etree-labels325,11876
(defun real-label-length real-label-length342,12734
(defun p-etree-elt p-etree-elt350,12923
(defun p-left-bracket p-left-bracket367,13837
(defun p-right-bracket p-right-bracket368,13903
(defun get-new-label get-new-label370,13971

etrees-renumber.lisp,787
(deffile etrees-renumberetrees-renumber21,794
(defvar *renamed-leaves-list* *renamed-leaves-list*26,930
(defflag renumber-leavesrenumber-leaves28,966
(defun relabel-etree relabel-etree42,1516
(defun relabel-etree-main relabel-etree-main49,1686
(defun rewrite-trees rewrite-trees54,1861
(defun subs-here subs-here82,3335
(defun shuffle-etrlists shuffle-etrlists88,3536
(defun rename-given-leaves rename-given-leaves92,3654
(defun leaf-lessthan leaf-lessthan102,3967
(defun show-prop-name show-prop-name110,4220
(defun show-other-name show-other-name116,4404
(defun show-internal-name show-internal-name120,4504
(defun all-banned-acons all-banned-acons124,4608
(defun all-banned-append all-banned-append132,4829
(defun fill-selecteds fill-selecteds139,5065

etrees-skolem.lisp,262
(deffile etrees-skolemetrees-skolem14,648
(defflag show-skolemshow-skolem21,839
(defflavor skolem-termskolem-term29,1059
(defflavor skolem-termskolem-term41,1457
(defun print-skolem-term print-skolem-term245,10215
(defun sk-term-= sk-term-=250,10402

etrees-wffops2.lisp,3748
(deffile etrees-wffops2etrees-wffops213,614
(defun expand-top= expand-top=19,748
(defun expand-top=-real expand-top=-real41,1708
(defun expand-first= expand-first=59,2398
(defwffop selectselect73,2924
(defmateop selsel91,3451
(defun select% select%96,3550
(defwffop expandexpand102,3686
(defun expand expand119,4211
(defmateop expexp134,4598
(defun add-expansion add-expansion143,4815
(defwffop sel-exp-termssel-exp-terms152,5068
(defmateop termsterms161,5370
(defun sel-exp-terms sel-exp-terms165,5443
(defwffop substitute-in-etreesubstitute-in-etree171,5627
(defun substitute-in-etree substitute-in-etree190,6170
(defun substitutable-vars-of substitutable-vars-of249,8935
(defun substitute-in-etree-main substitute-in-etree-main261,9346
(defun simul-substitute-in-etree simul-substitute-in-etree266,9559
(defun simul-substitute-in-etree-main simul-substitute-in-etree-main275,9803
(defun substitute-term-var-etree substitute-term-var-etree280,10022
(defun simul-substitute-term-var-etree simul-substitute-term-var-etree283,10137
(defun simul-substitute-term-var-rec-etree simul-substitute-term-var-rec-etree286,10255
(defun equiv-to-implics equiv-to-implics306,11028
(defwffop duplicate-varduplicate-var312,11183
(defmateop dup-vardup-var326,11579
(defun duplicate-var duplicate-var333,11690
(defun really-duplicate-var really-duplicate-var342,11913
(defun paths-below-etree paths-below-etree368,12984
(defwffop duplicate-all-outer-varsduplicate-all-outer-vars381,13492
(defmateop dup-outerdup-outer389,13733
(defun duplicate-all-outer-vars duplicate-all-outer-vars394,13855
(defun duplicate-all-outer-vars* duplicate-all-outer-vars*402,14157
(defwffop duplicate-all-varsduplicate-all-vars413,14507
(defmateop dup-alldup-all421,14731
(defun duplicate-all-vars duplicate-all-vars426,14845
(defun duplicate-all-vars* duplicate-all-vars*434,15135
(defun apply-prim-subs apply-prim-subs451,15586
(defwffop apply-prim-subsapply-prim-subs498,17436
(defmateop prim-subprim-sub512,17887
(defwffop apply-prim-subs-outerapply-prim-subs-outer517,17999
(defmateop prim-outerprim-outer525,18240
(defun apply-prim-subs-outer apply-prim-subs-outer530,18360
(defun apply-prim-subs-outer* apply-prim-subs-outer*539,18683
(defwffop apply-prim-subs-allapply-prim-subs-all547,18881
(defmateop prim-allprim-all555,19124
(defun apply-prim-subs-all apply-prim-subs-all560,19240
(defun apply-prim-subs-all* apply-prim-subs-all*569,19559
(defun apply-sub-to-etree apply-sub-to-etree583,19920
(defwffop prim-singleprim-single599,20631
(defun prim-single prim-single619,21398
(defmateop prim-singleprim-single626,21582
(defmateop set-search-treeset-search-tree631,21685
(defwffop set-search-treeset-search-tree637,21881
(defun set-search-tree set-search-tree647,22168
(defmateop name-primname-prim660,22843
(defwffop name-primsubsts2name-primsubsts2675,23502
(defun name-primsubsts2 name-primsubsts2686,23823
(defun dont-apply-prim-subs dont-apply-prim-subs719,25377
(defun copy-etree copy-etree743,26329
(defun copy-etree-rec copy-etree-rec748,26464
(defun copy-etree-rec-aux copy-etree-rec-aux767,27115
(defun etree-components* etree-components*801,28500
(defun leaf-p* leaf-p*811,28811
(defvar *ignore-statuses* *ignore-statuses*819,29031
(defun etree-status* etree-status*821,29063
(defun update-status update-status831,29324
(defun current-status current-status838,29671
(defun eproof-substitution-list* eproof-substitution-list*849,30023
(defmateop sub-etreesub-etree855,30150
(defun higher-order-var higher-order-var862,30237
(defun wffeq-ab-etree wffeq-ab-etree866,30373
(defun wffeq-ab-etree1 wffeq-ab-etree1869,30443

etrees-wffops.lisp,4826
(deffile etrees-wffopsetrees-wffops14,640
(defvar *instantiated-defs-list* *instantiated-defs-list*18,746
(defvar *instantiated-eqs-list* *instantiated-eqs-list*19,784
(defvar *hacked-rewrites-list* *hacked-rewrites-list*20,821
(defvar *banned-conns-list* *banned-conns-list*21,857
(defvar *ho-banned-conns-list* *ho-banned-conns-list*22,890
(defvar *leibniz-var-list* *leibniz-var-list*25,1101
(defvar *rew-unsubst-exps* *rew-unsubst-exps*26,1133
(defvar *unsubst-exp-vars* *unsubst-exp-vars*27,1165
(defvar *after-primsub* *after-primsub*28,1197
(defflag add-truthadd-truth30,1281
(defmateop subsub40,1693
(defwffop gwff-to-etree-subgwff-to-etree-sub44,1777
(defun gwff-to-etree-sub gwff-to-etree-sub60,2287
(defun gwff-to-etree gwff-to-etree73,2934
(defun truth-needed truth-needed98,4212
(defun add-trut add-trut110,4670
(defun lazy2-used lazy2-used135,5385
(defun gwff-to-etree1 gwff-to-etree1143,5638
(defun skolemize-gwff skolemize-gwff191,7346
(defun rewrite-and-rectify-theorem rewrite-and-rectify-theorem213,8197
(defun fix-rewrite-defns fix-rewrite-defns245,9478
(defun initialize-etree-counters initialize-etree-counters252,9753
(defun falsehood-elim falsehood-elim262,10111
(defun not-truth-elim not-truth-elim275,10572
(defun add-falsehood add-falsehood287,11021
(defun gwff-to-etree-main gwff-to-etree-main304,11573
(defun find-etree-node find-etree-node329,12373
(defun find-etree-nodes find-etree-nodes342,12831
(defun find-etree-node-name find-etree-node-name352,13205
(defwffop deepen=deepen=360,13487
(defmateop dp=dp=367,13679
(defun deepen= deepen=372,13779
(defmateop dpdp387,14183
(defwffop deepen-onedeepen-one392,14284
(defun deepen-one deepen-one401,14533
(defwffop deepen-etreedeepen-etree406,14714
(defmateop dptreedptree413,14916
(defun deepen-etree deepen-etree418,15024
(defun deepen-leaf-node deepen-leaf-node425,15293
(defun deepen-leaf-node-real deepen-leaf-node-real430,15470
(defun instantiate-1b instantiate-1b595,23101
(defun instantiate-1c instantiate-1c611,23704
(defun contains-defn-not-equiv contains-defn-not-equiv622,24075
(defun contains-some-defn contains-some-defn632,24431
(defun contains-defn-1 contains-defn-1644,24848
(defun instantiate-some instantiate-some657,25324
(defun instantiate-1-from-list instantiate-1-from-list662,25434
(defun instantiate-1b-from-list instantiate-1b-from-list673,25751
(defstruct (symmetry-holder symmetry-holder695,26495
(defvar *print-symmetry-verbose* *print-symmetry-verbose*698,26591
(defun node-symmetry node-symmetry700,26628
(defun update-node-symmetry update-node-symmetry703,26707
(defsetf node-symmetry node-symmetry706,26816
(defun print-symmetry-holder print-symmetry-holder708,26862
(defun update-global-lists update-global-lists714,27051
(defun init-symmetry init-symmetry735,27965
(defun update-symmetry update-symmetry741,28198
(defun dead-node-p dead-node-p808,30827
(defun find-syms find-syms811,30886
(defun add-to-syms add-to-syms817,31007
(defwffop deepen-to-literalsdeepen-to-literals829,31476
(defmateop dp*dp*838,31741
(defun dual-p dual-p844,31861
(defun deepen-to-literals-main deepen-to-literals-main858,32277
(defun deepen-to-literals deepen-to-literals884,33214
(defun leibniz-quant leibniz-quant895,33844
(defun fiddle-with-def-leaves fiddle-with-def-leaves911,34386
(defun get-real-exp get-real-exp950,36291
(defun unfiddle-with-def-leaves2 unfiddle-with-def-leaves2953,36402
(defun unfiddle-with-def-leaves unfiddle-with-def-leaves964,36804
(defun expansion-above expansion-above995,38375
(defun deepen-to-literals* deepen-to-literals*1000,38515
(defun deepen-after-duplication deepen-after-duplication1005,38709
(defun create-leaf-node create-leaf-node1015,39133
(defun create-edisjunction-node create-edisjunction-node1029,39521
(defun create-econjunction-node create-econjunction-node1058,40406
(defun create-implication-node create-implication-node1087,41292
(defun create-negation-node create-negation-node1117,42191
(defun create-expansion-node create-expansion-node1142,42928
(defun create-skolem-node create-skolem-node1160,43316
(defun create-selection-node create-selection-node1245,46829
(defun number-exps-above number-exps-above1277,47837
(defun create-true-node create-true-node1282,48011
(defun create-false-node create-false-node1299,48400
(defun create-rewrite-node create-rewrite-node1316,48792
(defun get-deep get-deep1354,49953
(defun get-shallow get-shallow1359,50096
(defun positive-p positive-p1364,50238
(defun etree-junctive* etree-junctive*1369,50386
(defun etree-name* etree-name*1374,50481
(defun eproof-leaf-list* eproof-leaf-list*1380,50658
(defun free-vars-in-etree free-vars-in-etree1390,51034

etr-nat-macros.lisp,818
(deffile etr-nat-macrosetr-nat-macros14,625
(defflag etree-nat-verboseetree-nat-verbose20,796
(defmexpr tidy-prooftidy-proof28,1097
(defun tidy-proof tidy-proof40,1539
(defmexpr etree-nat etree-nat54,2013
(defun etree-nat etree-nat71,2665
(defun etree-nat-real etree-nat-real76,2864
(defun print-routines print-routines163,6240
(defun mated-p mated-p178,6699
(defun mated-to mated-to181,6775
(defun mated-to-node mated-to-node187,7035
(defun restrict-mating-to restrict-mating-to199,7467
(defun restrict-mating-from restrict-mating-from209,7890
(defun inessential-p inessential-p218,8243
(defun admissible-p admissible-p242,9087
(defun spans spans260,9893
(defun etr-nat-introduce-lemmas etr-nat-introduce-lemmas282,10872
(defun etr-nat-assert-lemmas etr-nat-assert-lemmas321,12302

event-signal-utils.lisp,184
(deffile event-signal-utilsevent-signal-utils20,742
(defmacro ^ ^29,1043
(defvar *modulo* *modulo*31,1091
(defun mark-list mark-list33,1125
(defun code-list code-list37,1233

events.lisp,259
(deffile eventsevents17,634
(defun signal-event signal-event31,1120
(defun count-events count-events58,2151
(defun write-all-events write-all-events83,3034
(defun hook-write-events hook-write-events89,3203
(defun write-events write-events101,3562

events-mac.lisp,566
(deffile events-macevents-mac19,656
(defflag quiet-eventsquiet-events64,2914
(defflag event-cycleevent-cycle70,3061
(defflag events-enabledevents-enabled78,3316
(defvar input-counter input-counter84,3442
(defcategory eventevent86,3468
(defun princ-event-help princ-event-help101,3798
(defun event-p event-p106,3958
(defmacro init-event init-event108,4024
(defmacro init-events init-events111,4083
(defun init-event-expand init-event-expand120,4360
(defun disable-events disable-events194,7102
(defmexpr disable-eventsdisable-events200,7333

external-interface.lisp,1131
(defun javaservice-remote-input javaservice-remote-input15,680
(defun javaservice-remote-input javaservice-remote-input20,793
(defun read-to-null read-to-null67,2456
(defmexpr javawinjavawin82,2888
(defmexpr javawinjavawin93,3261
(defun javawin javawin105,3644
(defun javawin javawin109,3828
(defun encrypt-password encrypt-password140,4916
(defun check-online-user-password check-online-user-password156,5466
(defun check-online-access check-online-access171,5953
(defun run-tps-server run-tps-server186,6323
(defun send-http-newline send-http-newline378,14340
(defun send-http-header send-http-header383,14458
(defun windows-compatible-path windows-compatible-path400,15177
(defun windows-compatible-path windows-compatible-path410,15493
(defun send-html-file send-html-file413,15542
(defun send-java-class-file send-java-class-file424,15897
(defun send-tps-online-tutorial send-tps-online-tutorial445,16680
(defun send-tps-online-form send-tps-online-form457,17103
(defun tps-server-main tps-server-main515,19405
(defmexpr user::ls user::ls539,20229
(defun ls-files ls-files543,20353

external.lisp,1022
(deffile externalexternal21,1030
(defun external-output external-output30,1389
(defun external-send-proof external-send-proof33,1456
(defun process-mathweb-request process-mathweb-request53,2026
(defun get-mbase-definitions-for get-mbase-definitions-for70,3185
(defvar *external-request-queue-process* *external-request-queue-process*148,6590
(defvar *external-request-queue* *external-request-queue*149,6636
(defvar *external-main-process* *external-main-process*150,6674
(defvar *timeout-process* *timeout-process*151,6711
(defvar *killing-time* *killing-time*152,6742
(defvar *last-pong-time* *last-pong-time*153,6770
(defun process-request-queue process-request-queue161,7034
(defun process-external-request process-external-request166,7209
(defun enqueue-external-request enqueue-external-request173,7465
(defun process-request-queue process-request-queue214,9028
(defun process-external-request process-external-request228,9529
(defun expand-to-basic-pf expand-to-basic-pf351,14170

ext-exp-dag-macros.lisp,1376
(defstruct (ext-seqext-seq20,785
(defstruct (ext-exp-dagext-exp-dag36,1217
(defstruct (ext-exp-arcext-exp-arc45,1525
(defvar ext-exp-dag-verbose ext-exp-dag-verbose53,1743
(defvar ext-exp-dag-debug ext-exp-dag-debug54,1776
(defvar *eeod-stamp* *eeod-stamp*56,1808
(defstruct (ext-exp-open-dagext-exp-open-dag58,1833
(defstruct (ext-exp-open-arcext-exp-open-arc69,2218
(defvar *extseqder-list* *extseqder-list*80,2485
(deftoplevel ext-seq-topext-seq-top82,2516
(defcategory extseqcmdextseqcmd92,2891
(defvar *ext-seq-allowed-mexprs* *ext-seq-allowed-mexprs*112,3468
(defun es-find-all-gaps es-find-all-gaps114,3580
(defvar *eeod-list* *eeod-list*119,3715
(deftoplevel ext-mate-topext-mate-top121,3741
(defcategory extmatecmdextmatecmd131,4118
(defmacro defsavedextseq defsavedextseq153,4738
(defvar *individual-types* *individual-types*256,9093
(defvar *ext-rigid-jform* *ext-rigid-jform*257,9125
(defvar *ext-jform* *ext-jform*258,9156
(defvar *ext-full-jform* *ext-full-jform*259,9181
(defvar *edag-lift-info* *edag-lift-info*260,9211
(defvar *current-edag* *current-edag*261,9241
(defvar *current-edag-lemmas* *current-edag-lemmas*262,9269
(defvar *current-edag-lemma-ftree-pfs* *current-edag-lemma-ftree-pfs*263,9304
(defvar *merged-edag* *merged-edag*264,9348
(defvar *current-edag-jform* *current-edag-jform*265,9375

ext-exp-dags.lisp,8900
(deffile ext-exp-dagsext-exp-dags16,654
(defun print-ext-exp-dag print-ext-exp-dag23,784
(defun print-ext-exp-arc print-ext-exp-arc32,1103
(defun print-ext-exp-arc-verbose print-ext-exp-arc-verbose41,1433
(defun print-ext-exp-dag-verbose print-ext-exp-dag-verbose46,1578
(defun print-ext-exp-arc-verbose-rec print-ext-exp-arc-verbose-rec51,1723
(defun print-ext-exp-dag-verbose-rec print-ext-exp-dag-verbose-rec70,2425
(defun copy-eed copy-eed92,3144
(defun make-eed-leaf make-eed-leaf102,3551
(defun make-eed-true make-eed-true108,3711
(defun make-eed-false make-eed-false114,3870
(defun make-eed-neg make-eed-neg120,4036
(defun make-eed-con make-eed-con127,4300
(defun make-eed-dis make-eed-dis136,4791
(defun make-eed-imp make-eed-imp145,5281
(defun make-eea-sel make-eea-sel154,5782
(defun make-eed-sel make-eed-sel161,5967
(defun make-eed-sel-1 make-eed-sel-1167,6129
(defun make-eea-exp make-eea-exp170,6238
(defun make-eed-exp make-eed-exp177,6423
(defun make-eed-exp-1 make-eed-exp-1184,6602
(defun make-eed-lambda make-eed-lambda187,6721
(defun make-eed-rew make-eed-rew193,6875
(defun make-eed-dec make-eed-dec202,7132
(defun make-eed-dec-1 make-eed-dec-1211,7416
(defun make-eed-dec-2 make-eed-dec-2219,7580
(defun make-eed-eunif1 make-eed-eunif1228,7816
(defun make-eed-eunif2 make-eed-eunif2241,8272
(defun make-eed-eunif1-2 make-eed-eunif1-2254,8728
(defun make-eed-eunif2-2 make-eed-eunif2-2265,9088
(defun make-eed-mate make-eed-mate276,9448
(defun make-eed-mate-1 make-eed-mate-1289,9897
(defun make-eed-eqo make-eed-eqo296,10071
(defun make-eed-exto make-eed-exto299,10148
(defun ext-exp-dag-add-rews ext-exp-dag-add-rews302,10226
(defun ext-exp-dag-remove-neg ext-exp-dag-remove-neg315,10555
(defun ext-exp-dag-remove-disjs ext-exp-dag-remove-disjs329,11082
(defun ext-exp-dag-remove-conjs ext-exp-dag-remove-conjs348,11834
(defun ext-exp-dag-remove-imps ext-exp-dag-remove-imps367,12587
(defun ext-exp-dag-remove-exps ext-exp-dag-remove-exps386,13364
(defun ext-exp-dag-remove-sels ext-exp-dag-remove-sels413,14170
(defun ext-exp-dag-remove-equiv ext-exp-dag-remove-equiv440,14976
(defun ext-exp-dag-remove-equiv-implics-1 ext-exp-dag-remove-equiv-implics-1463,15873
(defun ext-exp-dag-remove-equiv-disjs-1 ext-exp-dag-remove-equiv-disjs-1488,16853
(defun ext-exp-dag-contract-defns ext-exp-dag-contract-defns514,17896
(defun ext-exp-dag-contract-defns-1 ext-exp-dag-contract-defns-1527,18318
(defun ext-exp-dag-contract-defns-2 ext-exp-dag-contract-defns-2534,18536
(defun ext-exp-dag-contract-defns-2-1 ext-exp-dag-contract-defns-2-1547,19011
(defun ext-exp-dag-contract-defns-2-2 ext-exp-dag-contract-defns-2-2554,19227
(defun ext-exp-dag-contract-defns-2-3 ext-exp-dag-contract-defns-2-3566,19693
(defun ext-exp-arc-contract-defns-2 ext-exp-arc-contract-defns-2576,19996
(defun ext-exp-dag-contract-defns-1-1 ext-exp-dag-contract-defns-1-1582,20181
(defun ext-exp-dag-contract-defns-1-2 ext-exp-dag-contract-defns-1-2593,20631
(defun cutfree-ext-seq-to-ext-exp-dags cutfree-ext-seq-to-ext-exp-dags706,24539
(defun cutfree-ext-seq-to-ext-exp-dags-1 cutfree-ext-seq-to-ext-exp-dags-1725,25289
(defun ext-seq-to-eed-instantiate-all ext-seq-to-eed-instantiate-all735,25676
(defun make-eed-nonatom-mates make-eed-nonatom-mates744,25915
(defun cutfree-ext-seq-to-ext-exp-dags-2 cutfree-ext-seq-to-ext-exp-dags-2753,26286
(defun ext-exp-dag-pre-merge-list ext-exp-dag-pre-merge-list1421,50219
(defun ext-exp-dag-pre-merge ext-exp-dag-pre-merge1428,50388
(defun ext-exp-dag-pre-merge-1 ext-exp-dag-pre-merge-11440,50923
(defun ext-exp-dag-pre-merge-2 ext-exp-dag-pre-merge-21449,51202
(defun ext-exp-dag-pre-merge-3 ext-exp-dag-pre-merge-31459,51570
(defun ext-exp-dag-pre-merge-4 ext-exp-dag-pre-merge-41469,51938
(defun ext-exp-arc-pre-merge-1 ext-exp-arc-pre-merge-11530,54136
(defun ext-exp-dag-conflate-params ext-exp-dag-conflate-params1538,54381
(defun ext-exp-dag-conflate-params-1 ext-exp-dag-conflate-params-11543,54538
(defun ext-exp-arc-conflate-params-1 ext-exp-arc-conflate-params-11562,55179
(defun ext-exp-dag-merge ext-exp-dag-merge1578,55757
(defun ext-exp-dag-merge-list ext-exp-dag-merge-list1581,55834
(defun ext-exp-dag-merge-sel ext-exp-dag-merge-sel1607,56987
(defun ext-exp-dag-merge-sel-l ext-exp-dag-merge-sel-l1610,57097
(defun ext-exp-dag-merge-sel-1 ext-exp-dag-merge-sel-11620,57412
(defun ext-exp-arc-merge-sel-1 ext-exp-arc-merge-sel-11650,58377
(defun ext-exp-dag-merge-exp ext-exp-dag-merge-exp1665,58924
(defun ext-exp-dag-merge-exp-l ext-exp-dag-merge-exp-l1668,59038
(defun ext-exp-dag-merge-exp-1 ext-exp-dag-merge-exp-11676,59278
(defun ext-exp-arc-merge-exp-1 ext-exp-arc-merge-exp-11710,60315
(defun ext-exp-dag-merge-mate ext-exp-dag-merge-mate1719,60586
(defun ext-exp-dag-merge-mate-l ext-exp-dag-merge-mate-l1722,60722
(defun ext-exp-dag-merge-mate-1 ext-exp-dag-merge-mate-11732,61048
(defun ext-exp-arc-merge-mate-1 ext-exp-arc-merge-mate-11758,61872
(defun ext-exp-dag-merge-dec ext-exp-dag-merge-dec1767,62155
(defun ext-exp-dag-merge-dec-l ext-exp-dag-merge-dec-l1770,62273
(defun ext-exp-dag-merge-dec-1 ext-exp-dag-merge-dec-11782,62676
(defun ext-exp-arc-merge-dec-1 ext-exp-arc-merge-dec-11808,63438
(defun ext-exp-dag-merge-eunif1 ext-exp-dag-merge-eunif11817,63719
(defun ext-exp-dag-merge-eunif1-l ext-exp-dag-merge-eunif1-l1820,63851
(defun ext-exp-dag-merge-eunif1-1 ext-exp-dag-merge-eunif1-11830,64171
(defun ext-exp-arc-merge-eunif1-1 ext-exp-arc-merge-eunif1-11856,64995
(defun ext-exp-dag-merge-eunif2 ext-exp-dag-merge-eunif21865,65278
(defun ext-exp-dag-merge-eunif2-l ext-exp-dag-merge-eunif2-l1868,65410
(defun ext-exp-dag-merge-eunif2-1 ext-exp-dag-merge-eunif2-11878,65730
(defun ext-exp-arc-merge-eunif2-1 ext-exp-arc-merge-eunif2-11904,66554
(defun ext-exp-dag-merge-redex ext-exp-dag-merge-redex1913,66837
(defun ext-exp-dag-merge-redex-1 ext-exp-dag-merge-redex-11927,67208
(defun ext-exp-dag-sel-vars ext-exp-dag-sel-vars2011,69908
(defun ext-exp-dag-sel-vars-1 ext-exp-dag-sel-vars-12016,70069
(defun ext-exp-dag-dep-reln ext-exp-dag-dep-reln2030,70507
(defun ext-exp-dag-dep-reln-1 ext-exp-dag-dep-reln-12039,70771
(defun ext-exp-dag-sel-acyclicity-p ext-exp-dag-sel-acyclicity-p2076,72140
(defun ext-exp-dag-dep-cycle ext-exp-dag-dep-cycle2089,72580
(defun ext-exp-dag-dep-cycle-exp-arc ext-exp-dag-dep-cycle-exp-arc2105,73054
(defun ext-exp-dag-complete ext-exp-dag-complete2122,73612
(defun ext-exp-dag-complete-l ext-exp-dag-complete-l2130,73855
(defun ext-exp-dag-complete-conjs ext-exp-dag-complete-conjs2140,74124
(defun ext-exp-dag-accessible-kids ext-exp-dag-accessible-kids2182,75513
(defun ext-exp-dag-prettify ext-exp-dag-prettify2242,77766
(defun ext-exp-dag-prettify-process-vars ext-exp-dag-prettify-process-vars2293,80348
(defun ext-exp-dag-prettify-process-vars-rec ext-exp-dag-prettify-process-vars-rec2300,80604
(defun ext-exp-dag-rename-all-vars ext-exp-dag-rename-all-vars2337,82159
(defun ext-exp-dag-rename-all-vars-1 ext-exp-dag-rename-all-vars-12342,82330
(defun ext-exp-dag-rename-all-vars-2 ext-exp-dag-rename-all-vars-22357,82819
(defun ext-exp-dag-rulep ext-exp-dag-rulep2369,83323
(defun ext-exp-pf-to-ext-seq ext-exp-pf-to-ext-seq2400,84425
(defun ext-exp-pf-to-ext-seq-l ext-exp-pf-to-ext-seq-l2404,84639
(defun ext-exp-pf-to-ext-seq-l-0 ext-exp-pf-to-ext-seq-l-02420,85230
(defun ext-exp-pf-to-ext-seq-l-1 ext-exp-pf-to-ext-seq-l-12700,96238
(defun eed-essential-p eed-essential-p2777,98456
(defun ext-exp-dag-check-acyclicity-l ext-exp-dag-check-acyclicity-l2790,98878
(defun ext-exp-dag-check-acyclicity-l-1 ext-exp-dag-check-acyclicity-l-12797,99121
(defun ext-exp-dag-check-structure-l ext-exp-dag-check-structure-l2805,99407
(defun ext-exp-dag-check-structure-l-1 ext-exp-dag-check-structure-l-12811,99599
(defun ext-exp-dag-check-structure-1 ext-exp-dag-check-structure-12818,99810
(defun ext-exp-dag-check-structure-2 ext-exp-dag-check-structure-22821,99929
(defun ext-exp-arc-check-structure-exp-1 ext-exp-arc-check-structure-exp-12959,104851
(defun ext-exp-arc-check-structure-sel-1 ext-exp-arc-check-structure-sel-12967,105176
(defun ext-exp-dag-check-pf-p ext-exp-dag-check-pf-p2975,105492
(defun ext-exp-dag-self-contained-p ext-exp-dag-self-contained-p2980,105658
(defun ext-exp-dag-self-contained-l-p ext-exp-dag-self-contained-l-p2983,105748
(defun ext-exp-dag-self-contained-l-p-1 ext-exp-dag-self-contained-l-p-12990,105966
(defun ext-exp-dag-self-contained-nodes ext-exp-dag-self-contained-nodes3013,106730
(defun ext-exp-dag-self-contained-nodes-l ext-exp-dag-self-contained-nodes-l3016,106828
(defun ext-exp-dag-self-contained-nodes-l-1 ext-exp-dag-self-contained-nodes-l-13023,107026

ext-exp-dags-nd.lisp,578
(deffile ext-exp-dags-ndext-exp-dags-nd16,657
(defun ext-exp-pf-to-nd ext-exp-pf-to-nd24,918
(defun ext-exp-pf-to-nd-1 ext-exp-pf-to-nd-143,1771
(defun ext-exp-pf-to-nd-2 ext-exp-pf-to-nd-273,2938
(defun ext-exp-pf-to-nd-4 ext-exp-pf-to-nd-498,3867
(defun ext-exp-dag-to-nd-choose ext-exp-dag-to-nd-choose847,33577
(defun ext-exp-dag-to-nd-choice ext-exp-dag-to-nd-choice858,33845
(defun eed-node-info eed-node-info1070,42786
(defun edag-nat-introduce-lemmas edag-nat-introduce-lemmas1089,43530
(defun edag-nat-assert-lemmas edag-nat-assert-lemmas1132,45155

ext-exp-open-dags.lisp,4702
(deffile ext-exp-open-dagsext-exp-open-dags16,659
(defun print-ext-exp-open-dag print-ext-exp-open-dag23,832
(defun print-ext-exp-open-arc print-ext-exp-open-arc32,1166
(defun print-ext-exp-open-arc-verbose print-ext-exp-open-arc-verbose47,1676
(defun print-ext-exp-open-dag-verbose print-ext-exp-open-dag-verbose53,1866
(defun print-ext-exp-open-arc-verbose-rec print-ext-exp-open-arc-verbose-rec59,2056
(defun print-ext-exp-open-dag-verbose-rec print-ext-exp-open-dag-verbose-rec78,2841
(defun set-eeod-true set-eeod-true102,3747
(defun set-eeod-false set-eeod-false107,3909
(defun set-eeod-neg set-eeod-neg112,4074
(defun set-eeod-con set-eeod-con118,4286
(defun set-eeod-dis set-eeod-dis124,4512
(defun set-eeod-imp set-eeod-imp130,4738
(defun set-eeod-sel set-eeod-sel136,4962
(defun set-eeod-exp set-eeod-exp142,5175
(defun set-eeod-rew set-eeod-rew148,5388
(defun set-eeod-eqo set-eeod-eqo155,5666
(defun set-eeod-exto set-eeod-exto158,5733
(defun set-eeod-eqn set-eeod-eqn161,5801
(defun set-eeod-atom set-eeod-atom167,6020
(defun set-eeod-flex set-eeod-flex173,6246
(defun copy-eeod copy-eeod179,6472
(defun eeod-junctive eeod-junctive191,6858
(defun ext-exp-var-p ext-exp-var-p200,7160
(defun push-eqndec-arc push-eqndec-arc204,7235
(defun create-ext-exp-open-dag create-ext-exp-open-dag227,8154
(defun create-ext-exp-open-dag-1 create-ext-exp-open-dag-1235,8485
(defun create-ext-exp-open-dag-2 create-ext-exp-open-dag-2238,8624
(defun create-ext-exp-open-arc-1 create-ext-exp-open-arc-1360,12798
(defun create-ext-exp-open-arc-2 create-ext-exp-open-arc-2367,13021
(defun create-ext-exp-open-arc-exp create-ext-exp-open-arc-exp373,13243
(defun create-ext-exp-open-arc-sel create-ext-exp-open-arc-sel381,13639
(defun create-ext-exp-open-arc-decs create-ext-exp-open-arc-decs387,13897
(defun eeod-get-nodes eeod-get-nodes401,14424
(defun eeod-get-nodes-l eeod-get-nodes-l406,14559
(defun eeod-get-nodes-1 eeod-get-nodes-1414,14762
(defun eeod-get-nodes-2 eeod-get-nodes-2424,15077
(defun eeod-get-arcs-above eeod-get-arcs-above430,15257
(defun eeod-get-arcs-above-l eeod-get-arcs-above-l436,15413
(defun eeod-get-arcs-above-1 eeod-get-arcs-above-1444,15625
(defun eeod-stamp-order eeod-stamp-order458,16012
(defun eeod-exp-arcs-above eeod-exp-arcs-above461,16108
(defun eeod-exp-arcs-above-l eeod-exp-arcs-above-l466,16239
(defun eeod-get-sibling-nodes eeod-get-sibling-nodes471,16371
(defun eeod-get-sibling-nodes-1 eeod-get-sibling-nodes-1474,16489
(defun eeod-get-sibling-nodes-2 eeod-get-sibling-nodes-2480,16669
(defun eeod-find-node eeod-find-node490,17029
(defun eeod-exp-vars eeod-exp-vars496,17194
(defun eeod-exp-vars-above eeod-exp-vars-above506,17587
(defun eeod-exp-vars-above-1 eeod-exp-vars-above-1513,17741
(defun eeod-exp-vars-above-2 eeod-exp-vars-above-2520,17964
(defun eeod-sel-vars eeod-sel-vars528,18276
(defun eeod-set-banned-vars eeod-set-banned-vars536,18566
(defun eeod-set-banned-vars-1 eeod-set-banned-vars-1549,19024
(defun eeod-set-banned-vars-2 eeod-set-banned-vars-2579,20102
(defun eeod-subst-deepen eeod-subst-deepen592,20570
(defun eeod-subst-deepen-1 eeod-subst-deepen-1606,20979
(defun eeod-duplicate-expnode eeod-duplicate-expnode635,22139
(defun eed-to-eeod eed-to-eeod649,22706
(defun eed-to-eeod-1 eed-to-eeod-1654,22825
(defun eed-to-eeod-2 eed-to-eeod-2696,24178
(defun eeod-to-eed-node eeod-to-eed-node710,24646
(defun eeod-to-eed-node-1 eeod-to-eed-node-1719,24899
(defun eeod-to-eed-node-2 eeod-to-eed-node-2722,24988
(defun eeod-to-eed-arc-exp eeod-to-eed-arc-exp878,30757
(defun ext-exp-open-dag-complete ext-exp-open-dag-complete888,31181
(defun ext-exp-open-dag-complete-l ext-exp-open-dag-complete-l896,31434
(defun ext-exp-open-dag-complete-conjs ext-exp-open-dag-complete-conjs906,31713
(defun ext-exp-open-dag-accessible-kids ext-exp-open-dag-accessible-kids948,33157
(defun ext-exp-open-dag-deep ext-exp-open-dag-deep1007,35453
(defun ftree-to-edag ftree-to-edag1044,36516
(defun ftree-to-edag-1 ftree-to-edag-11049,36669
(defun ftree-to-edag-2 ftree-to-edag-21061,37029
(defun ftree-to-edag-3 ftree-to-edag-31067,37265
(defun eeod-generalized-connection eeod-generalized-connection1152,40504
(defun eeod-generalized-connection-1 eeod-generalized-connection-11165,41042
(defun eeod-generalized-refl-1 eeod-generalized-refl-11249,44674
(defun ext-exp-open-dag-kids ext-exp-open-dag-kids1303,47386
(defun eeod-var-exparc-assoc eeod-var-exparc-assoc1311,47653
(defun eeod-var-exparc-assoc-1 eeod-var-exparc-assoc-11318,47841
(defun eeod-node-assoc-1 eeod-node-assoc-11338,48583

ext-mate-top.lisp,3389
(deffile ext-mate-topext-mate-top17,733
(defun extmatecmd-mhelp extmatecmd-mhelp24,907
(defun ext-mate ext-mate35,1305
(defun extmatetop extmatetop71,2514
(defun ext-mate-top-prompt ext-mate-top-prompt83,2873
(defun ext-mate-print-* ext-mate-print-*85,2938
(defun ext-mate-command-interpreter ext-mate-command-interpreter87,3001
(defun ext-mate-opdecode ext-mate-opdecode128,4581
(defmexpr ext-mateext-mate151,5409
(defextmate leaveleave167,5834
(defun exit-ext-mate exit-ext-mate171,5948
(defun get-gwff0-or-edag get-gwff0-or-edag174,6025
(defextmate etpetp190,6572
(defextmate etdetd194,6713
(defextmate pp198,6860
(defextmate pdeeppdeep202,6969
(defextmate ppdeepppdeep206,7097
(defextmate pppp210,7234
(defextmate ppfppf214,7347
(defextmate pshpsh218,7474
(defun ext-mate-ppf ext-mate-ppf222,7596
(defun ext-mate-p ext-mate-p279,9301
(defun ext-mate-pdeep ext-mate-pdeep284,9456
(defun ext-mate-ppdeep ext-mate-ppdeep290,9632
(defun ext-mate-pp ext-mate-pp298,9892
(defun ext-mate-psh ext-mate-psh313,10416
(defun ext-mate-etp ext-mate-etp319,10592
(defun ext-mate-etd ext-mate-etd328,10874
(defextmate show-matingshow-mating339,11180
(defun ext-mate-show-mating ext-mate-show-mating343,11316
(defextmate complete-pcomplete-p369,12142
(defun ext-mate-complete-p ext-mate-complete-p374,12328
(defextmate \0\0388,12711
(defun ext-mate-0 ext-mate-0393,12876
(defextmate dd399,13104
(defun ext-mate-d ext-mate-d404,13258
(defun ext-mate-successor ext-mate-successor415,13631
(defextmate ll426,14025
(defextmate rr430,14135
(defun ext-mate-l ext-mate-l434,14246
(defun ext-mate-r ext-mate-r446,14653
(defextmate fbfb458,15061
(defun ext-mate-fb ext-mate-fb463,15225
(defextmate fifi477,15663
(defun ext-mate-fi ext-mate-fi481,15759
(defextmate upup495,16201
(defextmate ^^499,16292
(defun ext-mate-up ext-mate-up503,16389
(defun ext-mate-all-up ext-mate-all-up512,16727
(defextmate gotogoto523,17084
(defun ext-mate-goto ext-mate-goto530,17311
(defextmate add-connadd-conn541,17592
(defextmate add-conn*add-conn*548,17858
(defextmate rem-connrem-conn552,17958
(defextmate rem-conn*rem-conn*559,18227
(defun ext-mate-add-conn ext-mate-add-conn563,18327
(defun ext-mate-add-conn-1 ext-mate-add-conn-1642,21476
(defun ext-mate-print-new-info ext-mate-print-new-info717,24520
(defun ext-mate-rem-conn ext-mate-rem-conn756,25755
(defun ext-mate-rem-conn-1 ext-mate-rem-conn-1854,29331
(defun ext-mate-add-conn* ext-mate-add-conn*864,29678
(defun ext-mate-rem-conn* ext-mate-rem-conn*875,30039
(defextmate cjformcjform888,30425
(defextmate vpvp903,30987
(defextmate vpdvpd907,31094
(defextmate num-hpathsnum-hpaths913,31302
(defextmate num-vpathsnum-vpaths917,31443
(defun ext-mate-cjform ext-mate-cjform921,31582
(defun ext-mate-num-hpaths ext-mate-num-hpaths928,31806
(defun ext-mate-num-vpaths ext-mate-num-vpaths932,31922
(defun ext-mate-vp ext-mate-vp936,32036
(defun ext-mate-vpd ext-mate-vpd941,32139
(defextmate merge-treemerge-tree948,32258
(defun ext-mate-merge-tree ext-mate-merge-tree952,32358
(defextmate etree-natetree-nat963,32719
(defun ext-mate-etree-nat ext-mate-etree-nat976,33215
(defun ext-mate-etree-nat-real ext-mate-etree-nat-real993,33929
(defextmate diy-liftdiy-lift1012,34558
(defun diy-lift diy-lift1020,34825

ext-search.lisp,16835
(deffile ext-searchext-search16,652
(defflag ext-search-limit ext-search-limit23,811
(definfo ms03-7ms03-734,1244
(defflag ms03-verbosems03-verbose40,1512
(defflag MS03-USE-SET-CONSTRAINTSMS03-USE-SET-CONSTRAINTS50,1807
(defflag MS03-USE-JFORMSMS03-USE-JFORMS64,2395
(defflag MS03-WEIGHT-DISJ-MATEMS03-WEIGHT-DISJ-MATE78,2947
(defflag MS03-WEIGHT-DISJ-EUNIFMS03-WEIGHT-DISJ-EUNIF88,3200
(defflag MS03-WEIGHT-DISJ-UNIFMS03-WEIGHT-DISJ-UNIF98,3454
(defflag MS03-WEIGHT-FLEXFLEXSAME-OMS03-WEIGHT-FLEXFLEXSAME-O108,3707
(defflag MS03-WEIGHT-FLEXFLEXDIFF-OMS03-WEIGHT-FLEXFLEXDIFF-O118,3977
(defflag MS03-WEIGHT-FLEXFLEXSAMEMS03-WEIGHT-FLEXFLEXSAME128,4247
(defflag MS03-WEIGHT-FLEXFLEXDIFFMS03-WEIGHT-FLEXFLEXDIFF138,4514
(defflag MS03-WEIGHT-FLEXRIGID-BRANCHMS03-WEIGHT-FLEXRIGID-BRANCH148,4781
(defflag MS03-WEIGHT-FLEXRIGID-OMS03-WEIGHT-FLEXRIGID-O158,5052
(defflag MS03-WEIGHT-RIGIDRIGIDSAME-OMS03-WEIGHT-RIGIDRIGIDSAME-O168,5319
(defflag MS03-WEIGHT-RIGIDRIGIDDIFF-OMS03-WEIGHT-RIGIDRIGIDDIFF-O178,5591
(defflag MS03-WEIGHT-RIGIDRIGID-EQNMS03-WEIGHT-RIGIDRIGID-EQN188,5863
(defflag MS03-WEIGHT-RIGIDRIGID-FLEXEQNMS03-WEIGHT-RIGIDRIGID-FLEXEQN198,6133
(defflag MS03-WEIGHT-OCCURS-CHECKMS03-WEIGHT-OCCURS-CHECK208,6407
(defflag MS03-WEIGHT-BANNED-SELSMS03-WEIGHT-BANNED-SELS218,6676
(defflag MS03-WEIGHT-RIGIDRIGID-NOEQNMS03-WEIGHT-RIGIDRIGID-NOEQN228,6944
(defflag MS03-WEIGHT-FLEXRIGID-EQNMS03-WEIGHT-FLEXRIGID-EQN238,7217
(defflag MS03-WEIGHT-FLEXRIGID-FLEXEQNMS03-WEIGHT-FLEXRIGID-FLEXEQN248,7487
(defflag MS03-WEIGHT-FLEXRIGID-NOEQNMS03-WEIGHT-FLEXRIGID-NOEQN258,7761
(defflag MS03-WEIGHT-PRIMSUB-FIRST-PROJMS03-WEIGHT-PRIMSUB-FIRST-PROJ268,8033
(defflag MS03-WEIGHT-PRIMSUB-NEXT-PROJMS03-WEIGHT-PRIMSUB-NEXT-PROJ278,8305
(defflag MS03-WEIGHT-PRIMSUB-FIRST-FORALLMS03-WEIGHT-PRIMSUB-FIRST-FORALL288,8576
(defflag MS03-WEIGHT-PRIMSUB-FIRST-EXISTSMS03-WEIGHT-PRIMSUB-FIRST-EXISTS298,8850
(defflag MS03-WEIGHT-PRIMSUB-NEXT-FORALLMS03-WEIGHT-PRIMSUB-NEXT-FORALL308,9124
(defflag MS03-WEIGHT-PRIMSUB-NEXT-EXISTSMS03-WEIGHT-PRIMSUB-NEXT-EXISTS318,9397
(defflag MS03-WEIGHT-PRIMSUB-FIRST-ANDMS03-WEIGHT-PRIMSUB-FIRST-AND328,9670
(defflag MS03-WEIGHT-PRIMSUB-FIRST-ORMS03-WEIGHT-PRIMSUB-FIRST-OR338,9941
(defflag MS03-WEIGHT-PRIMSUB-NEXT-ANDMS03-WEIGHT-PRIMSUB-NEXT-AND348,10211
(defflag MS03-WEIGHT-PRIMSUB-NEXT-ORMS03-WEIGHT-PRIMSUB-NEXT-OR358,10481
(defflag MS03-WEIGHT-PRIMSUB-FIRST-EQUALSMS03-WEIGHT-PRIMSUB-FIRST-EQUALS368,10750
(defflag MS03-WEIGHT-PRIMSUB-NEXT-EQUALSMS03-WEIGHT-PRIMSUB-NEXT-EQUALS378,11024
(defflag MS03-WEIGHT-PRIMSUB-FIRST-NOT-EQUALSMS03-WEIGHT-PRIMSUB-FIRST-NOT-EQUALS388,11297
(defflag MS03-WEIGHT-PRIMSUB-NEXT-NOT-EQUALSMS03-WEIGHT-PRIMSUB-NEXT-NOT-EQUALS398,11575
(defflag MS03-WEIGHT-PRIMSUB-TRUTHMS03-WEIGHT-PRIMSUB-TRUTH408,11852
(defflag MS03-WEIGHT-PRIMSUB-FALSEHOODMS03-WEIGHT-PRIMSUB-FALSEHOOD418,12118
(defflag MS03-QUICK-EUNIFICATION-LIMITMS03-QUICK-EUNIFICATION-LIMIT428,12388
(defflag MS03-WEIGHT-DUP-VARMS03-WEIGHT-DUP-VAR438,12649
(defflag MS03-WEIGHT-CHANGE-DUPSMS03-WEIGHT-CHANGE-DUPS448,12901
(defflag MS03-SOLVE-RIGID-PARTSMS03-SOLVE-RIGID-PARTS458,13157
(defun ext-matingsearch-controller ext-matingsearch-controller468,13409
(defun ext-matingsearch-controller-real ext-matingsearch-controller-real479,13917
(defun ext-initialize-search ext-initialize-search488,14305
(defun eeod-to-top-jform eeod-to-top-jform506,14995
(defun eeod-to-top-jform-1 eeod-to-top-jform-1509,15076
(defun eeod-to-jform eeod-to-jform531,16025
(defun eeod-to-jform-1 eeod-to-jform-1543,16448
(defun eeod-to-jform-2 eeod-to-jform-2623,19473
(defun jform-mate-pair jform-mate-pair646,20490
(defun jform-mate-pair-1 jform-mate-pair-1652,20729
(defun jform-ancestors jform-ancestors697,22389
(defun eeod-update-jform eeod-update-jform724,23070
(defun conjunctively-related-literals conjunctively-related-literals763,24491
(defun conjunctively-related-nodes conjunctively-related-nodes774,24854
(defun conjunctively-related-nodes-1 conjunctively-related-nodes-1777,24947
(defun conjunctively-related-nodes-2 conjunctively-related-nodes-2793,25480
(defun eeod-add-all-rigid-mates eeod-add-all-rigid-mates807,26013
(defun eeod-add-all-rigid-mates-1 eeod-add-all-rigid-mates-1825,26627
(defun eeod-mate eeod-mate847,27408
(defun eeod-eunif1 eeod-eunif1872,28485
(defun eeod-eunif2 eeod-eunif2893,29371
(defun eeod-mated-p eeod-mated-p914,30257
(defun eeod-eunif1-p eeod-eunif1-p918,30384
(defun eeod-eunif2-p eeod-eunif2-p922,30516
(defun eeod-duplicate-and-lift-subst eeod-duplicate-and-lift-subst926,30648
(defun eeod-duplicate-and-lift-subst-1 eeod-duplicate-and-lift-subst-1932,30850
(defun lift-subst-theta lift-subst-theta991,32792
(defun lift-subst-theta-1 lift-subst-theta-1994,32889
(defun lift-subst-theta-2 lift-subst-theta-21000,33156
(defun lift-subst-theta-3 lift-subst-theta-31010,33468
(defun lift-subst-theta-4 lift-subst-theta-41016,33725
(defun eeod-duplicate-and-subst-forall eeod-duplicate-and-subst-forall1028,34073
(defun eeod-duplicate-and-subst-exist eeod-duplicate-and-subst-exist1038,34541
(defun eeod-duplicate-and-imitate-not eeod-duplicate-and-imitate-not1049,35051
(defun eeod-duplicate-and-imitate eeod-duplicate-and-imitate1059,35326
(defun eeod-duplicate-and-project eeod-duplicate-and-project1071,35884
(defun new-applied-evar new-applied-evar1081,36375
(defun eeod-subst-forall eeod-subst-forall1091,36718
(defun eeod-subst-exists eeod-subst-exists1098,37058
(defun create-quant-subst create-quant-subst1105,37399
(defun eeod-subst-quant eeod-subst-quant1119,37871
(defun create-imit-subst create-imit-subst1130,38246
(defun eeod-subst-imit eeod-subst-imit1147,38768
(defun create-proj-subst create-proj-subst1168,39630
(defun eeod-subst-proj eeod-subst-proj1189,40280
(defun create-pattern-flexflex-same create-pattern-flexflex-same1205,40891
(defun create-pattern-flexflex-diff create-pattern-flexflex-diff1237,42008
(defun eeod-get-earliest eeod-get-earliest1297,43966
(defun ext-imitation-possible-p ext-imitation-possible-p1303,44178
(defun ext-imitation-heads-possible-p ext-imitation-heads-possible-p1312,44509
(defun ext-possible-projections ext-possible-projections1316,44662
(defun exists-imit-or-proj-p exists-imit-or-proj-p1330,45054
(defun ext-possible-var-projections ext-possible-var-projections1334,45179
(defun ext-projection-possible-p ext-projection-possible-p1338,45326
(defun ext-rigid-occurs-check-p ext-rigid-occurs-check-p1346,45563
(defun ext-rigid-occurs-check-p-1 ext-rigid-occurs-check-p-11358,45868
(defun purely-propositional-tp purely-propositional-tp1364,46036
(defun nth-primsub-type nth-primsub-type1370,46193
(defun next-primsub-type next-primsub-type1383,46564
(defun ext-saturation-search ext-saturation-search1393,46843
(defun ext-saturation-search-1 ext-saturation-search-11458,48841
(defun ext-saturation-search-no-jforms ext-saturation-search-no-jforms1507,50635
(defun ext-saturation-search-jforms ext-saturation-search-jforms1525,51312
(defun print-ext-sat-option print-ext-sat-option1560,52756
(defun ext-saturation-solve-rigid ext-saturation-solve-rigid1619,54950
(defun ext-saturation-quick-unify ext-saturation-quick-unify1737,59212
(defun ext-saturation-solve-rigid-next-action ext-saturation-solve-rigid-next-action1894,63818
(defun ext-saturation-solve-rigid-incompatible-p ext-saturation-solve-rigid-incompatible-p1942,65742
(defun ext-cheapest-open-path ext-cheapest-open-path1947,65912
(defun ext-saturation-search-do ext-saturation-search-do1992,67425
(defun ext-saturation-search-do-1 ext-saturation-search-do-12051,69271
(defun remove-bad-ext-options remove-bad-ext-options2226,75277
(defun move-ext-options-to-duplicates move-ext-options-to-duplicates2251,76020
(defun remove-bad-ext-options-substs remove-bad-ext-options-substs2281,76819
(defun ext-dup-exp-arc-assoc ext-dup-exp-arc-assoc2300,77816
(defun ext-saturation-search-do-more-unifs ext-saturation-search-do-more-unifs2311,78167
(defun ext-saturation-full-exps ext-saturation-full-exps2370,79967
(defun ext-saturation-min-exps ext-saturation-min-exps2382,80566
(defun ext-exp-open-dag-add-lemma ext-exp-open-dag-add-lemma2411,81962
(defun ext-saturation-new-dups ext-saturation-new-dups2450,83701
(defun ext-saturation-new-dups-1 ext-saturation-new-dups-12479,84811
(defun ext-saturation-change-dups ext-saturation-change-dups2511,86103
(defun ext-sat-full-dup-p ext-sat-full-dup-p2522,86599
(defun ext-saturation-stable-dups ext-saturation-stable-dups2529,86891
(defun ext-saturation-exp-arc-above ext-saturation-exp-arc-above2537,87190
(defun ext-eeod-disj-val ext-eeod-disj-val2541,87325
(defun ext-eeod-disj-val-1 ext-eeod-disj-val-12546,87452
(defun ext-jform-disj-val ext-jform-disj-val2558,87776
(defun ext-saturation-search-options-rigid ext-saturation-search-options-rigid2565,87952
(defun ext-saturation-search-options ext-saturation-search-options2663,91450
(defun ext-saturation-search-eeod-options ext-saturation-search-eeod-options2794,96231
(defun ext-auxiliary-eqns-1 ext-auxiliary-eqns-12913,100303
(defun ext-auxiliary-eqns-2 ext-auxiliary-eqns-22924,100612
(defun ext-auxiliary-eeod-eqns-1 ext-auxiliary-eeod-eqns-12929,100782
(defun ext-auxiliary-eeod-eqns-2 ext-auxiliary-eeod-eqns-22940,101121
(defun ext-quick-eunification-weight ext-quick-eunification-weight2947,101439
(defun ext-quick-eunification-weight-1 ext-quick-eunification-weight-13123,107046
(defun ext-options-order ext-options-order3206,109728
(defun evaluate-ext-weight evaluate-ext-weight3209,109787
(defun ext-saturation-search-constraints ext-saturation-search-constraints3216,109973
(defun ext-saturation-search-solve-constraints ext-saturation-search-solve-constraints3308,113147
(defun constraint-order constraint-order3389,116262
(defun constraint-disj-val constraint-disj-val3392,116352
(defun constraint-disj-val-1 constraint-disj-val-13398,116470
(defun constraint-sets-up-to constraint-sets-up-to3406,116651
(defun constraint-sets-up-to-1 constraint-sets-up-to-13409,116733
(defun ext-saturation-search-option-rigid-mates ext-saturation-search-option-rigid-mates3430,117274
(defun ext-saturation-search-option-flex-rigid-mates ext-saturation-search-option-flex-rigid-mates3456,118224
(defun ext-saturation-search-option-eunif ext-saturation-search-option-eunif3507,119993
(defun ext-saturation-search-option-unif ext-saturation-search-option-unif3554,121583
(defun ext-saturation-search-option-primsub ext-saturation-search-option-primsub3624,123864
(defun eeod-solve-flex-flex eeod-solve-flex-flex3763,129062
(defun eeod-add-all-rigid-mates-rec eeod-add-all-rigid-mates-rec3776,129476
(defun eeod-duplicate-expvar eeod-duplicate-expvar3783,129832
(defun eeod-copy-duplicate-delayed eeod-copy-duplicate-delayed3798,130355
(defun eeod-copy-duplicate-arc eeod-copy-duplicate-arc3819,131325
(defun eeod-copy-duplicate-node eeod-copy-duplicate-node3843,132364
(defun eeod-duplicate-jform eeod-duplicate-jform3875,133595
(defun eeod-duplicate-jform-1 eeod-duplicate-jform-13903,134499
(defun ext-saturation-valid-lift ext-saturation-valid-lift3927,135402
(defun ext-saturation-option-flag-info ext-saturation-option-flag-info4090,140666
(defun lift-eed-to-saturation lift-eed-to-saturation4124,142179
(defun lift-eed-to-saturation-flag-suggest lift-eed-to-saturation-flag-suggest4137,142753
(defun lift-eed-to-saturation-flag-coeff lift-eed-to-saturation-flag-coeff4300,148934
(defun update-edag-lift-info update-edag-lift-info4310,149143
(defun lift-eed-to-eeod lift-eed-to-eeod4320,149541
(defun lift-eed-to-eeod-exp lift-eed-to-eeod-exp4661,162931
(defun lift-eed-to-eeod-exp-1 lift-eed-to-eeod-exp-14668,163178
(defun lift-eed-to-eeod-exp-2 lift-eed-to-eeod-exp-24675,163487
(defun lift-eed-to-eeod-exp-3 lift-eed-to-eeod-exp-34719,165042
(defun lift-eed-to-eeod-exp-4 lift-eed-to-eeod-exp-44741,165847
(defun eed-search-info eed-search-info4757,166372
(defun eeod-lift-1 eeod-lift-14807,168397
(defun eeod-lift-1-exp eeod-lift-1-exp4926,172857
(defun eeod-lift-2 eeod-lift-24942,173491
(defun measure-exp-arc measure-exp-arc4953,173919
(defun eeod-lift-next-steps-perform eeod-lift-next-steps-perform4963,174204
(defun eeod-next-step-string eeod-next-step-string5005,175781
(defun eeod-print-set-constraint eeod-print-set-constraint5094,179387
(defun eeod-print-set-constraint-1 eeod-print-set-constraint-15101,179595
(defun eeod-print-simul-set-constraints eeod-print-simul-set-constraints5106,179741
(defun eeod-lift-next-step-perform eeod-lift-next-step-perform5113,180013
(defun eeod-lift-incf-search-info eeod-lift-incf-search-info5167,182380
(defun eeod-lift-next-steps-perform-mate eeod-lift-next-steps-perform-mate5174,182601
(defun eeod-lift-instantiate-flexnode eeod-lift-instantiate-flexnode5187,183196
(defun eeod-lift-next-steps-perform-flexmate eeod-lift-next-steps-perform-flexmate5208,183932
(defun eeod-lift-next-steps-perform-flexflexmate eeod-lift-next-steps-perform-flexflexmate5214,184255
(defun eeod-lift-next-steps-perform-eunif1 eeod-lift-next-steps-perform-eunif15221,184635
(defun eeod-lift-next-steps-perform-eunif2 eeod-lift-next-steps-perform-eunif25242,185447
(defun eeod-lift-next-steps-perform-dup eeod-lift-next-steps-perform-dup5263,186259
(defun eeod-lift-next-steps-perform-create-sc eeod-lift-next-steps-perform-create-sc5272,186591
(defun eeod-lift-next-steps-perform-weaken-lsc eeod-lift-next-steps-perform-weaken-lsc5277,186895
(defun eeod-lift-next-steps-perform-weaken-usc eeod-lift-next-steps-perform-weaken-usc5282,187149
(defun eeod-lift-next-steps-perform-move-lsc eeod-lift-next-steps-perform-move-lsc5287,187403
(defun eeod-lift-next-steps-perform-move-usc eeod-lift-next-steps-perform-move-usc5292,187640
(defun eeod-lift-next-steps-perform-combine-lsc eeod-lift-next-steps-perform-combine-lsc5297,187877
(defun eeod-lift-next-steps-perform-combine-usc eeod-lift-next-steps-perform-combine-usc5302,188160
(defun eeod-lift-next-steps-perform-unif eeod-lift-next-steps-perform-unif5307,188443
(defun eeod-lift-next-steps-perform-primsub eeod-lift-next-steps-perform-primsub5317,188726
(defun eeod-lift-next-steps-perform-primsub2 eeod-lift-next-steps-perform-primsub25324,188968
(defun eeod-lift-inst-1 eeod-lift-inst-15333,189281
(defun eeod-lift-next-steps eeod-lift-next-steps5365,190639
(defun eeod-lift-next-set-constrs eeod-lift-next-set-constrs5391,191908
(defun eeod-lift-next-dups eeod-lift-next-dups5423,193073
(defun eeod-lift-next-steps-1 eeod-lift-next-steps-15445,193862
(defun eeod-lift-next-steps-2 eeod-lift-next-steps-25463,194594
(defun eeod-lift-next-steps-3 eeod-lift-next-steps-35474,194907
(defun eeod-lift-next-steps-3-1 eeod-lift-next-steps-3-15489,195456
(defun eeod-lift-next-steps-4 eeod-lift-next-steps-45529,197089
(defun eeod-lift-next-steps-5 eeod-lift-next-steps-55572,198807
(defun eeod-pattern-pair-p eeod-pattern-pair-p5586,199320
(defun eeod-pattern-p eeod-pattern-p5590,199418
(defun eeod-pattern-p-1 eeod-pattern-p-15593,199488
(defun eeod-pattern-p-2 eeod-pattern-p-25602,199741
(defun eeod-pattern-p-3 eeod-pattern-p-35608,199971
(defun eeod-pattern-p-4 eeod-pattern-p-45614,200143
(defun eeod-lift-next-steps-6 eeod-lift-next-steps-65622,200337
(defun eeod-lift-next-steps-7 eeod-lift-next-steps-75654,201531
(defun eed-to-eeod-with-vars eed-to-eeod-with-vars5694,203090
(defun eed-to-eeod-with-vars-1 eed-to-eeod-with-vars-15702,203326
(defun eed-to-eeod-with-vars-2 eed-to-eeod-with-vars-25736,204841
(defun eed-to-eeod-with-vars-3 eed-to-eeod-with-vars-35767,206157
(defun eed-to-eeod-with-vars-4 eed-to-eeod-with-vars-45797,207185
(defun eed-to-eeod-with-vars-5 eed-to-eeod-with-vars-55822,208180
(defun make-eed-eeod-assoc make-eed-eeod-assoc5827,208360
(defun update-eed-eeod-node-assoc-unif update-eed-eeod-node-assoc-unif5890,210958
(defun update-eed-eeod-exp-assoc update-eed-eeod-exp-assoc5908,211703
(defun update-eed-eeod-exp-assoc-1 update-eed-eeod-exp-assoc-15911,211813
(defun update-eed-eeod-exp-assoc-2 update-eed-eeod-exp-assoc-25918,212113
(defun update-eed-eeod-exp-assoc-3 update-eed-eeod-exp-assoc-35928,212511
(defun eed-lift-next-step eed-lift-next-step5935,212727
(defun eed-lift-next-steps eed-lift-next-steps5947,213053
(defun classify-lambda-term classify-lambda-term6010,215685
(defun eed-rewrite-equivs-vals eed-rewrite-equivs-vals6029,216373
(defun eed-rewrite-equivs-vals-1 eed-rewrite-equivs-vals-16062,217860
(defun eepf-relevant-node eepf-relevant-node6086,218742

ext-seq.lisp,4726
(deffile ext-seqext-seq17,735
(defun wffeq-ab-multiset wffeq-ab-multiset24,887
(defun multiset-extract-wffs multiset-extract-wffs33,1140
(defun multiset-extract-wffs-1 multiset-extract-wffs-136,1225
(defun negate-wffs negate-wffs44,1519
(defun make-ext-seq-true make-ext-seq-true47,1590
(defun make-ext-seq-neg make-ext-seq-neg51,1721
(defun make-ext-seq-dis-pos make-ext-seq-dis-pos60,1989
(defun make-ext-seq-dis-neg make-ext-seq-dis-neg69,2265
(defun make-ext-seq-forall-pos make-ext-seq-forall-pos82,2759
(defun make-ext-seq-forall-neg make-ext-seq-forall-neg92,3076
(defun make-ext-seq-internalize make-ext-seq-internalize102,3438
(defun loghead loghead115,3831
(defun externalize-wff1 externalize-wff1127,4070
(defun make-ext-seq-lambda-1 make-ext-seq-lambda-1152,4695
(defun make-ext-seq-lambda make-ext-seq-lambda162,4973
(defun make-ext-seq-init make-ext-seq-init165,5072
(defun make-ext-seq-init-ab make-ext-seq-init-ab169,5233
(defun make-ext-seq-init-eq make-ext-seq-init-eq175,5522
(defun make-ext-seq-refl make-ext-seq-refl197,6375
(defun make-ext-seq-refl-ab make-ext-seq-refl-ab206,6650
(defun make-ext-seq-dec make-ext-seq-dec214,6921
(defun make-ext-seq-eunif make-ext-seq-eunif237,7734
(defun make-ext-seq-eunif1 make-ext-seq-eunif1274,8906
(defun make-ext-seq-eunif2 make-ext-seq-eunif2277,9000
(defun make-ext-seq-eqo make-ext-seq-eqo280,9092
(defun make-ext-seq-exto make-ext-seq-exto314,10365
(defun make-ext-seq-extfunc make-ext-seq-extfunc331,10963
(defun make-ext-seq-rew make-ext-seq-rew346,11547
(defun make-ext-seq-cut make-ext-seq-cut357,11901
(defun make-ext-seq-contr make-ext-seq-contr367,12258
(defun make-ext-seq-false make-ext-seq-false373,12485
(defun make-ext-seq-con-pos make-ext-seq-con-pos379,12632
(defun make-ext-seq-con-neg make-ext-seq-con-neg386,12901
(defun make-ext-seq-imp-neg make-ext-seq-imp-neg394,13163
(defun make-ext-seq-imp-pos make-ext-seq-imp-pos400,13390
(defun make-ext-seq-equiv-pos make-ext-seq-equiv-pos405,13568
(defun make-ext-seq-equiv-neg make-ext-seq-equiv-neg415,14036
(defun make-ext-seq-exists-pos make-ext-seq-exists-pos429,14779
(defun make-ext-seq-exists-neg make-ext-seq-exists-neg441,15073
(defun make-ext-seq-sym-ax-1 make-ext-seq-sym-ax-1453,15338
(defun make-ext-seq-sym-ax make-ext-seq-sym-ax487,16465
(defun make-ext-seq-weaken make-ext-seq-weaken494,16669
(defun make-ext-seq-weaken-rec make-ext-seq-weaken-rec501,16903
(defun ext-seq-general-eunif1 ext-seq-general-eunif1522,17602
(defun ext-seq-expand-refl-4 ext-seq-expand-refl-4550,18618
(defun ext-seq-expand-refl-3 ext-seq-expand-refl-3563,19248
(defun ext-seq-expand-refl-2 ext-seq-expand-refl-2575,19724
(defun ext-seq-expand-refl-1 ext-seq-expand-refl-1583,20099
(defun ext-seq-expand-refl ext-seq-expand-refl600,20677
(defun ext-seq-expand-init-5 ext-seq-expand-init-5604,20831
(defun ext-seq-expand-init-4 ext-seq-expand-init-4614,21357
(defun ext-seq-expand-init-3 ext-seq-expand-init-3659,22723
(defun ext-seq-expand-init-2 ext-seq-expand-init-2679,23487
(defun ext-seq-expand-init-1 ext-seq-expand-init-1686,23690
(defun ext-seq-expand-init ext-seq-expand-init702,24263
(defun ext-seq-expand-init-refl ext-seq-expand-init-refl709,24482
(defun ext-seq-leibniz-neg ext-seq-leibniz-neg731,25201
(defun ext-seq-leibniz-pos ext-seq-leibniz-pos750,25889
(defun ext-seq-wff-assoc ext-seq-wff-assoc771,26547
(defun ext-seq-gamma-assoc ext-seq-gamma-assoc778,26755
(defun ext-seq-equivwffs-reduced ext-seq-equivwffs-reduced788,27036
(defun ext-seq-equivwffs ext-seq-equivwffs803,27542
(defun ext-seq-eager-lambdas ext-seq-eager-lambdas1087,37918
(defun ext-seq-invert-lambda-1 ext-seq-invert-lambda-11132,39589
(defun ext-seq-invert-lambda ext-seq-invert-lambda1142,39910
(defun ext-seq-general-inversion ext-seq-general-inversion1145,40039
(defun ext-seq-general-inversion-1 ext-seq-general-inversion-11157,40632
(defun ext-seq-invert-internalize ext-seq-invert-internalize1195,42057
(defun ext-seq-invert-truth-pos ext-seq-invert-truth-pos1203,42358
(defun ext-seq-invert-truth-neg ext-seq-invert-truth-neg1206,42477
(defun ext-seq-invert-dis-pos ext-seq-invert-dis-pos1212,42794
(defun ext-seq-invert-dis-neg ext-seq-invert-dis-neg1215,42935
(defun ext-seq-invert-dis-neg-1 ext-seq-invert-dis-neg-11219,43089
(defun ext-seq-invert-dis-neg-2 ext-seq-invert-dis-neg-21222,43240
(defun ext-seq-invert-neg ext-seq-invert-neg1225,43390
(defun ext-seq-forall-to-funceq ext-seq-forall-to-funceq1228,43525
(defun ext-seq-forall-to-funceq-1 ext-seq-forall-to-funceq-11235,43834
(defun ftree-seq-to-ext-seq ftree-seq-to-ext-seq1310,46820

ext-seq-tactics.lisp,1712
(deffile ext-seq-tacticsext-seq-tactics17,720
(defextseq go2go224,872
(defun extseq-go2 extseq-go234,1145
(deftactic go2-tacgo2-tac37,1206
(defun extseq-tactic-choose-wff extseq-tactic-choose-wff74,1768
(defun extseq-tactic-choose-wff-1 extseq-tactic-choose-wff-178,1936
(defun extseq-tactic-choose-wff-2 extseq-tactic-choose-wff-289,2233
(defun extseq-tactic-choose-wff-2-1 extseq-tactic-choose-wff-2-195,2508
(deftactic true+tactrue+tac106,2875
(deftactic false-tacfalse-tac122,3397
(deftactic init-tacinit-tac138,3952
(deftactic refl+tacrefl+tac158,4582
(deftactic lambda-taclambda-tac178,5198
(deftactic not-tacnot-tac204,6039
(deftactic or+tacor+tac229,6860
(deftactic and-tacand-tac254,7653
(deftactic implies+tacimplies+tac279,8474
(deftactic all+tacall+tac304,9297
(deftactic exists-tacexists-tac345,10759
(deftactic extfunc+tacextfunc+tac386,12270
(deftactic or-tacor-tac428,13765
(deftactic and+tacand+tac453,14611
(deftactic implies-tacimplies-tac478,15441
(deftactic equiv+tacequiv+tac503,16317
(deftactic equiv-tacequiv-tac528,17159
(deftactic exto+tacexto+tac553,18023
(deftactic eqo-taceqo-tac580,18918
(deftactic all-tacall-tac607,19825
(deftactic exists+tacexists+tac638,20942
(deftactic eqfunc-taceqfunc-tac669,22049
(deftactic equivwffs+tacequivwffs+tac704,23255
(deftactic equivwffs-tacequivwffs-tac731,24182
(deftactic internalize+tacinternalize+tac759,25157
(deftactic internalize-tacinternalize-tac785,26033
(deftactic dec+tacdec+tac812,26945
(deftactic eunif1-taceunif1-tac851,28230
(deftactic eunif2-taceunif2-tac890,29674
(deftactic initeq-taciniteq-tac929,31118
(deftactic contract-taccontract-tac976,32799

ext-seq-top.lisp,6357
(deffile ext-seq-topext-seq-top17,733
(defun extseqcmd-mhelp extseqcmd-mhelp24,908
(defun ext-seq ext-seq35,1302
(defun extseqtop extseqtop50,1868
(defun ext-seq-top-prompt ext-seq-top-prompt62,2222
(defun ext-seq-print-* ext-seq-print-*64,2285
(defun ext-seq-command-interpreter ext-seq-command-interpreter66,2347
(defun ext-seq-opdecode ext-seq-opdecode110,4122
(defmexpr ext-seqext-seq137,5339
(defextseq leaveleave144,5535
(defun exit-ext-seq exit-ext-seq148,5645
(defextseq PALLPALL153,5748
(defun is-ext-seqder-p is-ext-seqder-p157,5876
(defun extseq-pall extseq-pall161,6028
(defun print-ext-seq print-ext-seq166,6205
(defun pext-seq pext-seq186,6751
(defun pext-seql pext-seql189,6797
(defun rebuild-fake-nd-ext-seqder rebuild-fake-nd-ext-seqder247,9240
(defun ext-seq-change-fake-nd-line ext-seq-change-fake-nd-line264,9903
(defun ext-seqder-to-fake-nd ext-seqder-to-fake-nd272,10187
(defun print-ext-seq-line-generic print-ext-seq-line-generic306,11497
(defextseq pstatuspstatus344,13248
(defextseq pplanpplan348,13373
(defun esnumalias esnumalias357,13607
(defun es-nextplan es-nextplan360,13709
(defun es-introduce-gap es-introduce-gap365,13834
(defextseq proveprove373,14031
(defun extseq-prove extseq-prove390,14707
(defun set-extseq-line-assertion set-extseq-line-assertion415,15616
(defun ext-seq-wffs-to-fake-wff ext-seq-wffs-to-fake-wff419,15748
(defun update-extseq-proof-plans update-extseq-proof-plans432,16179
(defextseq weakenweaken445,16784
(defun extseq-weaken extseq-weaken460,17249
(defextseq squeezesqueeze469,17624
(defun extseq-cleanup extseq-cleanup477,17874
(defun extseq-complete-lines extseq-complete-lines500,18762
(defextseq introduce-gapintroduce-gap510,19078
(defextseq deletedelete521,19479
(defextseq prooflistprooflist528,19686
(defun extseq-prooflist extseq-prooflist533,19898
(defextseq reconsider reconsider537,20026
(defun extseq-reconsider extseq-reconsider550,20492
(defun extseq-defaultplan extseq-defaultplan558,20743
(defun extseq-defaultplan-2 extseq-defaultplan-2570,21115
(defun extseq-defaultnewplan extseq-defaultnewplan587,21583
(defun extseq-defaultnewplans extseq-defaultnewplans594,21744
(defun set-extseq-line-justification set-extseq-line-justification621,22572
(defun set-extseq-line-justification-1 set-extseq-line-justification-1635,23076
(defun new-extseq-line new-extseq-line669,24103
(defun extseq-choose-princ-wff extseq-choose-princ-wff685,24835
(defun extseq-choose-prem-wff extseq-choose-prem-wff697,25351
(defextseq dnegdneg709,25820
(defun extseq-rule-1-1 extseq-rule-1-1725,26294
(defun extseq-dneg extseq-dneg786,28581
(defextseq lamlam800,29125
(defun extseq-lam extseq-lam815,29634
(defextseq equivwffs+equivwffs+837,30494
(defextseq equivwffs-equivwffs-855,31121
(defun extseq-equivwffs+ extseq-equivwffs+873,31785
(defun extseq-equivwffs- extseq-equivwffs-901,32832
(defextseq internalize+internalize+930,33944
(defextseq internalize-internalize-946,34534
(defun extseq-internalize+ extseq-internalize+964,35183
(defun extseq-internalize- extseq-internalize-987,36085
(defextseq all+all+1011,37081
(defextseq all-all-1038,37983
(defun extseq-all+ extseq-all+1056,38528
(defun extseq-all- extseq-all-1101,40266
(defextseq extfuncextfunc1133,41530
(defextseq eqfunceqfunc1167,42677
(defun extseq-extfunc extseq-extfunc1187,43312
(defun extseq-eqfunc extseq-eqfunc1231,44925
(defextseq contrcontr1266,46246
(defun extseq-contr extseq-contr1281,46706
(defextseq or+or+1350,49340
(defun extseq-or+ extseq-or+1368,49775
(defun extseq-rule-0 extseq-rule-01458,53076
(defextseq true+true+1487,54031
(defextseq initinit1499,54331
(defextseq reflrefl1513,54686
(defun extseq-true extseq-true1525,55031
(defun extseq-init extseq-init1537,55439
(defun extseq-refl extseq-refl1580,56888
(defun extseq-rule-2 extseq-rule-21600,57619
(defextseq or-or-1698,61384
(defun extseq-or- extseq-or-1724,62052
(defextseq eqoeqo1744,62814
(defextseq extoexto1770,63500
(defun extseq-eqo extseq-eqo1797,64216
(defun extseq-exto extseq-exto1826,65402
(defextseq cutcut1855,66558
(defun extseq-cut extseq-cut1881,67232
(defextseq eunif1eunif11955,69973
(defextseq eunif2eunif21989,70959
(defun extseq-eunif extseq-eunif2023,71945
(defun extseq-eunif1 extseq-eunif12252,81779
(defun extseq-eunif2 extseq-eunif22255,81881
(defextseq initeqiniteq2258,81981
(defextseq decdec2307,83473
(defun extseq-initeq extseq-initeq2355,84813
(defun extseq-dec extseq-dec2499,90199
(defextseq false-false-2620,94361
(defextseq and-and-2632,94699
(defextseq and+and+2650,95167
(defextseq implies+implies+2676,95812
(defextseq implies-implies-2694,96274
(defextseq equiv+equiv+2720,96965
(defextseq equiv-equiv-2746,97637
(defextseq exists-exists-2772,98336
(defextseq exists+exists+2800,99299
(defun extseq-false extseq-false2816,99805
(defun extseq-and- extseq-and-2839,100707
(defun extseq-implies+ extseq-implies+2925,104024
(defun extseq-and+ extseq-and+3010,107231
(defun extseq-implies- extseq-implies-3044,108662
(defun extseq-equiv- extseq-equiv-3076,109982
(defun extseq-equiv+ extseq-equiv+3106,111209
(defun extseq-exists- extseq-exists-3135,112387
(defun extseq-exists+ extseq-exists+3183,114314
(defextseq expand-all-derived-rulesexpand-all-derived-rules3216,115575
(defun extseq-expand-all-derived-rules extseq-expand-all-derived-rules3222,115842
(defextseq expand-all-inits-and-reflsexpand-all-inits-and-refls3242,116762
(defun extseq-expand-all-inits-and-refls extseq-expand-all-inits-and-refls3246,116935
(defextseq saveproofsaveproof3271,117753
(defun extseq-saveproof extseq-saveproof3287,118338
(defun write-saved-extseq write-saved-extseq3303,118966
(defun write-saved-extseq-defs write-saved-extseq-defs3415,122598
(defextseq texprooftexproof3461,124836
(defextseq scribeproofscribeproof3485,125737
(defextseq restoreproofrestoreproof3503,126316
(defun extseq-restoreproof extseq-restoreproof3523,127213
(defun extseq-restoreproof-real extseq-restoreproof-real3526,127314
(defun build-line-ext-seq build-line-ext-seq3547,128003
(defextseq cutfree-to-edagcutfree-to-edag3687,134124
(defun cutfree-to-edag cutfree-to-edag3707,134786

faces.lisp,152
(deffile facesfaces26,868
(defcategory print-faceprint-face33,994
(defprintprop faceface44,1223
(defun princ-mhelp-char princ-mhelp-char55,1677

filsys.lisp,189
(deffile filsysfilsys22,750
(defmexpr openrecordopenrecord30,874
(defun openrecord openrecord43,1250
(defmexpr closerecordcloserecord58,1712
(defun closerecord closerecord61,1786

flag-deps.lisp,1971
(defvar *func-hash* *func-hash*15,635
(defvar *flag-hash* *flag-hash*16,660
(defvar *flag-rel-hash* *flag-rel-hash*17,685
(defvar *flag-paths-hash* *flag-paths-hash*18,714
(defmenuitem save-flag-relevancy-infosave-flag-relevancy-info20,746
(defreview save-flag-relevancy-infosave-flag-relevancy-info29,950
(defutil analyze-flag-dependenciesanalyze-flag-dependencies39,1310
(defun save-flag-relevancy-info save-flag-relevancy-info46,1537
(defun load-flag-relevancy load-flag-relevancy69,2522
(defun choose-relevancy-data choose-relevancy-data88,3240
(defun print-flag-relevancy print-flag-relevancy103,3940
(defun analyze-flag-dependencies analyze-flag-dependencies122,4528
(defun analyze-flags-in-fn analyze-flags-in-fn173,6578
(defun analyze-flags-in-cond analyze-flags-in-cond247,9494
(defun analyze-flags-in-case analyze-flags-in-case265,10253
(defun modify-lisp-condition modify-lisp-condition290,11255
(defun easy-flag-condition-p easy-flag-condition-p347,13213
(defun easy-flag-conditions-p easy-flag-conditions-p362,13744
(defun easy-flag-term-p easy-flag-term-p368,13940
(defun analyze-relevancy-of-flags analyze-relevancy-of-flags375,14110
(defun clearly-inconsistent-conds-p clearly-inconsistent-conds-p407,15266
(defun incompatible-easy-conds incompatible-easy-conds415,15569
(defun remove-recursive-conds remove-recursive-conds430,16158
(defun condition-depends-on-flag condition-depends-on-flag468,17212
(defun flags-in-easy-cond flags-in-easy-cond478,17503
(defun flags-in-easy-cond-list flags-in-easy-cond-list492,17989
(defun flags-in-easy-cond-term flags-in-easy-cond-term498,18176
(defun fill-in-flag-rel-hash fill-in-flag-rel-hash503,18280
(defun relevant-flags-from-hash relevant-flags-from-hash524,19025
(defmenuitem show-relevance-pathsshow-relevance-paths531,19266
(defreview show-relevance-pathsshow-relevance-paths540,19458
(defun show-relevance-paths show-relevance-paths550,19949

flagging.lisp,807
(deffile flaggingflagging20,736
(defun subject-p subject-p27,876
(defvar *never-irrelevant* *never-irrelevant*32,1195
(defvar *relevance-graphs-built* *relevance-graphs-built*33,1227
(defcategory flagflag40,1513
(defmacro defflag defflag57,1951
(defmacro defsynonym defsynonym103,3705
(defun update-synonymlist update-synonymlist134,5046
(defun update-all-in-list update-all-in-list141,5339
(defcategory flag-modeflag-mode154,5875
(defun tps-mode-p tps-mode-p163,6061
(defflag last-mode-namelast-mode-name179,6715
(defvar *mode-altered* *mode-altered*187,6988
(defvar *lastmode* *lastmode*188,7016
(defun mode mode195,7474
(defun set-flag set-flag225,9081
(defmacro in-mode in-mode257,10475
(defutil in-modein-mode279,11088
(defcategory modes-gwffsmodes-gwffs296,11854

flavoring.lisp,858
(deffile flavoringflavoring22,809
(defstruct flavorflavor28,933
(defmacro apply-label apply-label65,2011
(defun apply-label-error apply-label-error93,2792
(defstruct structured-tps-label structured-tps-label103,3096
(defvar *flavor-hash-table**flavor-hash-table*107,3257
(defcategory flavorflavor110,3327
(defun defflavorstruct defflavorstruct123,3701
(defmacro defflavor defflavor136,4103
(defun read-flavor-fn read-flavor-fn219,7485
(defmacro define-label define-label227,7740
(defun create-name create-name238,8062
(defun create-namestring create-namestring243,8229
(defun create-namestring-with-hyphen create-namestring-with-hyphen248,8405
(defun reset-name-counter reset-name-counter253,8594
(defgwff-type flavor-typeflavor-type256,8661
(defun flavor-ckfn flavor-ckfn261,8775
(defun flavor-getfn flavor-getfn266,8953

ftree-seq.lisp,5779
(deffile ftree-seqftree-seq20,915
(defvar *seqder-list* *seqder-list*25,1058
(defvar *current-seqder* *current-seqder*26,1085
(defvar ftree-seq-verbose ftree-seq-verbose27,1115
(defstruct (ftree-seqftree-seq52,1752
(defflag pseq-use-labelspseq-use-labels66,2269
(defmexpr seq-to-natseq-to-nat72,2428
(defun new-ftree-seq-der new-ftree-seq-der86,2910
(defmexpr seqlistseqlist95,3192
(defmexpr pseqpseq98,3294
(defmexpr pseqlpseql110,3577
(defun print-ftree-seq print-ftree-seq124,4015
(defun seqlist seqlist140,4432
(defun seqder-to-fake-nd seqder-to-fake-nd152,4867
(defun pseq pseq260,8474
(defun pseql pseql263,8522
(defun print-lit-legend print-lit-legend311,10291
(defun ftree-seq-label-wff ftree-seq-label-wff317,10451
(defun next-ftree-seq-lit-label next-ftree-seq-lit-label326,10689
(defun print-seq-line-generic print-seq-line-generic342,11074
(defun cutfree-ftree-seq-to-ftrees cutfree-ftree-seq-to-ftrees389,13300
(defun cutfree-ftree-seq-to-ftrees-rec cutfree-ftree-seq-to-ftrees-rec403,13857
(defun focus-nth focus-nth644,20973
(defun unfocus-nth unfocus-nth649,21059
(defun unfocus-nth-rec unfocus-nth-rec654,21149
(defun focus-preimage focus-preimage659,21269
(defun focus-image focus-image666,21366
(defun remove-nth remove-nth673,21459
(defun ftree-seq-cut-elim ftree-seq-cut-elim683,21664
(defun ftree-seq-mix-elim-finish ftree-seq-mix-elim-finish700,22260
(defun ftree-seq-bring-to-front ftree-seq-bring-to-front731,23209
(defun ftree-seq-mix-elim-1 ftree-seq-mix-elim-1767,24350
(defun ftree-seq-mix-elim-2 ftree-seq-mix-elim-2807,25773
(defun ftree-seq-mix-elim-principal ftree-seq-mix-elim-principal992,32363
(defun ftree-seq-principal-p ftree-seq-principal-p1346,42896
(defun ftree-seq-replace-equivwffs ftree-seq-replace-equivwffs1351,43040
(defun ftree-seq-initial-equivwffs ftree-seq-initial-equivwffs1507,48893
(defun ftree-seq-post-merge-duplicates ftree-seq-post-merge-duplicates1536,49911
(defun ftree-seq-pre-merge-duplicates ftree-seq-pre-merge-duplicates1565,50911
(defun ftree-seq-weaken-by ftree-seq-weaken-by1585,51373
(defun ftree-seq-order-by ftree-seq-order-by1592,51578
(defun make-ftree-seq-weaken make-ftree-seq-weaken1613,52283
(defun make-ftree-seq-focus make-ftree-seq-focus1624,52582
(defun find-previous-focus find-previous-focus1642,53098
(defun make-ftree-seq-focus-2 make-ftree-seq-focus-21656,53484
(defun make-ftree-seq-unfocus make-ftree-seq-unfocus1664,53768
(defun make-ftree-seq-move-to-end make-ftree-seq-move-to-end1669,53909
(defun make-ftree-seq-init make-ftree-seq-init1683,54347
(defun make-ftree-seq-con-pos make-ftree-seq-con-pos1686,54455
(defun make-ftree-seq-con-neg make-ftree-seq-con-neg1695,54738
(defun make-ftree-seq-dis-pos make-ftree-seq-dis-pos1706,55147
(defun make-ftree-seq-dis-neg make-ftree-seq-dis-neg1717,55553
(defun make-ftree-seq-imp-pos make-ftree-seq-imp-pos1726,55837
(defun make-ftree-seq-imp-neg make-ftree-seq-imp-neg1736,56238
(defun make-ftree-seq-neg-pos make-ftree-seq-neg-pos1746,56552
(defun make-ftree-seq-neg-neg make-ftree-seq-neg-neg1755,56817
(defun make-ftree-seq-exp-pos make-ftree-seq-exp-pos1764,57084
(defun make-ftree-seq-exp-neg make-ftree-seq-exp-neg1772,57332
(defun make-ftree-seq-sel-pos make-ftree-seq-sel-pos1780,57582
(defun make-ftree-seq-sel-neg make-ftree-seq-sel-neg1788,57825
(defun make-ftree-seq-rew-pos make-ftree-seq-rew-pos1796,58070
(defun make-ftree-seq-rew-neg make-ftree-seq-rew-neg1803,58296
(defun make-ftree-seq-cut make-ftree-seq-cut1810,58524
(defun make-ftree-seq-merge-pos make-ftree-seq-merge-pos1824,59043
(defun make-ftree-seq-merge-neg make-ftree-seq-merge-neg1835,59476
(defun ftree-seq-merge-focus-all-pos ftree-seq-merge-focus-all-pos1848,60001
(defun ftree-seq-merge-focus-all-neg ftree-seq-merge-focus-all-neg1869,60762
(defvar *ftree-seq-true**ftree-seq-true*1887,61420
(defvar *ftree-seq-false**ftree-seq-false*1890,61516
(defun make-ftree-seq-lrew make-ftree-seq-lrew1895,61721
(defun make-ftree-seq-ab-rew make-ftree-seq-ab-rew1935,63106
(defun ftree-seq-mix-elim-imitate-rule ftree-seq-mix-elim-imitate-rule1947,63592
(defun ftree-seq-imitate-rule ftree-seq-imitate-rule2192,70965
(defun ftree-seq-invert-position ftree-seq-invert-position2237,72724
(defun ftree-seq-invert-position-list ftree-seq-invert-position-list2311,74623
(defun ftree-seq-refresh-sel-vars ftree-seq-refresh-sel-vars2343,75442
(defun ftree-seq-substitute ftree-seq-substitute2346,75521
(defun ftree-seq-simul-substitute ftree-seq-simul-substitute2349,75618
(defun ftree-seq-remove-neg-false ftree-seq-remove-neg-false2402,77482
(defun ftree-seq-pos-not-A-to-neg-A ftree-seq-pos-not-A-to-neg-A2457,79416
(defun make-ftree-seq-rec-dnot-true make-ftree-seq-rec-dnot-true2547,82718
(defun make-ftree-seq-rec-dnot-false make-ftree-seq-rec-dnot-false2555,82935
(defun make-ftree-seq-nnf-init make-ftree-seq-nnf-init2565,83233
(defun make-ftree-seq-nnf-neg make-ftree-seq-nnf-neg2650,86167
(defun make-ftree-seq-nnf-pos make-ftree-seq-nnf-pos2702,88187
(defun ftree-seq-nnf-neg ftree-seq-nnf-neg2753,89932
(defun ftree-seq-nnf-pos ftree-seq-nnf-pos2762,90205
(defun ftree-seq-weaken-early ftree-seq-weaken-early2770,90551
(defun ftree-seq-weaken-early-1 ftree-seq-weaken-early-12790,91266
(defun ftree-seq-raise-lambdas ftree-seq-raise-lambdas3181,105593
(defun check-ftree-seq check-ftree-seq3240,107783
(defun seq-to-nat seq-to-nat3492,117031
(defun ftree-seq-to-proof-rec ftree-seq-to-proof-rec3588,119537
(defun ftree-seq-to-proof-ab ftree-seq-to-proof-ab4119,136910
(defun check-lines-before check-lines-before4195,139614
(defun my-comdecode my-comdecode4203,139911

ftrees.lisp,6101
(deffile ftreesftrees20,892
(defstruct (ftree ftree50,2390
(defvar ftree-verbose ftree-verbose62,2850
(defun print-ftree print-ftree64,2878
(defun etree-to-ftree etree-to-ftree90,3611
(defun other-evar-subs other-evar-subs178,7422
(defun ftree-junctive ftree-junctive192,7847
(defun ftree-to-etree ftree-to-etree201,8181
(defun ftree-to-etree-rec ftree-to-etree-rec250,10381
(defmateop save-etreesave-etree415,16321
(defmateop restore-etreerestore-etree419,16398
(defwffop save-etreesave-etree423,16481
(defwffop restore-etreerestore-etree440,17000
(defun save-etree save-etree455,17418
(defun write-ftree write-ftree470,17929
(defun restore-etree restore-etree484,18300
(defun restore-etree-real restore-etree-real487,18389
(defun finfo-to-ftree finfo-to-ftree502,18949
(defun strip-to-vars strip-to-vars517,19366
(defun exp-vars-in exp-vars-in527,19741
(defun dual-rew-ftree-node-p dual-rew-ftree-node-p535,19936
(defun deepen-ftree-to-literals deepen-ftree-to-literals543,20228
(defun deepen-ftree-leaf deepen-ftree-leaf567,21070
(defun gwff-to-ftree gwff-to-ftree577,21522
(defun gwff-to-ftree-rec gwff-to-ftree-rec584,21815
(defun gwff-to-ftree-dup gwff-to-ftree-dup729,29919
(defun make-ftree-conjunction make-ftree-conjunction751,30544
(defun gwff-to-rulep-ftree gwff-to-rulep-ftree757,30705
(defun merge-ftrees merge-ftrees788,31690
(defun merge-ftree-real merge-ftree-real798,32078
(defun merge-ftree-contract merge-ftree-contract806,32308
(defun merge-ftree-find-redex merge-ftree-find-redex911,36325
(defun merge-ftree-find-redex-0 merge-ftree-find-redex-0915,36454
(defun merge-ftree-find-redex-1 merge-ftree-find-redex-1929,36968
(defun merge-ftree-replace-all merge-ftree-replace-all935,37131
(defun merge-ftree-replace-sel-all merge-ftree-replace-sel-all946,37398
(defun merge-ftree-replace merge-ftree-replace955,37741
(defun merge-ftree-replace-sel merge-ftree-replace-sel987,38774
(defun merge-reconstruct-ftree-all merge-reconstruct-ftree-all1034,40523
(defun merge-reconstruct-ftree merge-reconstruct-ftree1041,40738
(defun use-equivwffs-to-merge-ftrees use-equivwffs-to-merge-ftrees1071,42012
(defun rename-selected-vars-of-ftree rename-selected-vars-of-ftree1079,42201
(defun rename-selected-vars-of-ftree-rec rename-selected-vars-of-ftree-rec1086,42434
(defun make-ftree-leaf make-ftree-leaf1113,43495
(defun make-ftree-exp make-ftree-exp1123,43806
(defun make-ftree-sel make-ftree-sel1141,44464
(defun make-ftree-rew make-ftree-rew1155,44920
(defun make-ftree-con make-ftree-con1167,45333
(defun make-ftree-dis make-ftree-dis1177,45717
(defun make-ftree-imp make-ftree-imp1187,46113
(defvar *global-pos-true-ftree* *global-pos-true-ftree*1197,46512
(defvar *global-neg-true-ftree* *global-neg-true-ftree*1201,46622
(defvar *global-pos-false-ftree* *global-pos-false-ftree*1205,46734
(defvar *global-neg-false-ftree* *global-neg-false-ftree*1209,46851
(defun make-ftree-true make-ftree-true1213,46970
(defun make-ftree-false make-ftree-false1218,47070
(defun make-ftree-neg make-ftree-neg1223,47173
(defun make-ftree-rew-chain make-ftree-rew-chain1234,47551
(defun make-fntype make-fntype1255,48179
(defun ftree-free-evars-in-image ftree-free-evars-in-image1260,48298
(defun ftree-parameters ftree-parameters1268,48570
(defun selected-vars-of-ftree selected-vars-of-ftree1272,48684
(defun substitutable-exp-vars-of-ftree substitutable-exp-vars-of-ftree1282,49055
(defun substitutable-vars-of-ftree substitutable-vars-of-ftree1288,49233
(defun substitutable-vars-of-ftree-rec substitutable-vars-of-ftree-rec1292,49343
(defun substitutions-in-ftree substitutions-in-ftree1303,49666
(defun substitutions-in-ftree-rec substitutions-in-ftree-rec1310,49877
(defun substitute-in-ftree substitute-in-ftree1326,50610
(defun substitute-in-ftree-rec substitute-in-ftree-rec1335,50929
(defun simul-substitute-in-ftree simul-substitute-in-ftree1380,52839
(defun simul-substitute-in-ftree-rec simul-substitute-in-ftree-rec1391,53262
(defun ftree-to-jform ftree-to-jform1448,55176
(defun ftree-lambda-rewrite-p ftree-lambda-rewrite-p1454,55378
(defun allow-ftree-node-in-jform allow-ftree-node-in-jform1459,55522
(defun ftree-to-jform-rec ftree-to-jform-rec1474,56066
(defun ftree-assoc ftree-assoc1492,56699
(defun ftree-mating-image ftree-mating-image1508,57237
(defun ftree-image ftree-image1515,57460
(defun ftree-image-rec ftree-image-rec1519,57622
(defun ftree-list-image-rec ftree-list-image-rec1528,57992
(defun find-ftree-node find-ftree-node1535,58190
(defun find-ftree-node-rec find-ftree-node-rec1539,58325
(defun find-ftree-node-list find-ftree-node-list1544,58472
(defun list-ftree-nodes list-ftree-nodes1550,58629
(defun ftree-instantiated-exp-term ftree-instantiated-exp-term1555,58746
(defun ftree-exp-terms-s ftree-exp-terms-s1560,58966
(defun ftree-first-junct ftree-first-junct1565,59104
(defun ftree-second-junct ftree-second-junct1572,59359
(defun ftree-neg-child ftree-neg-child1579,59616
(defun ftree-positions ftree-positions1586,59847
(defun get-ftree-pos get-ftree-pos1598,60154
(defun check-acyclicity-ftree check-acyclicity-ftree1603,60271
(defun ftree-all-subs ftree-all-subs1612,60629
(defun ftree-all-banned ftree-all-banned1626,61135
(defun ftree-all-banned-rec ftree-all-banned-rec1631,61353
(defun ftree-embedding-reln ftree-embedding-reln1674,62919
(defun ftree-embedded-sel-vars ftree-embedded-sel-vars1680,63091
(defun ftree-embedding-reln-cyclic ftree-embedding-reln-cyclic1697,63568
(defun embedding-cycle-starting-at embedding-cycle-starting-at1704,63816
(defun compose-embedding-reln compose-embedding-reln1715,64126
(defun duplicate-evars-max duplicate-evars-max1725,64381
(defun ftree-deep ftree-deep1747,65305
(defun make-ftree-subst make-ftree-subst1775,66291
(defun abstract-term-from-equation abstract-term-from-equation1836,69134
(defun check-ftree-pf check-ftree-pf1882,71136
(defun check-ftree-mating check-ftree-mating1901,71767

gensty.lisp,512
(deffile genstygensty22,771
(defcategory device-styledevice-style29,977
(defun noop noop58,1696
(defun noop-1 noop-160,1755
(defstyle genericgeneric65,1835
(deftype% fsymfsym86,2456
(defvar curpos curpos97,2834
(defflag alpha-lower-flagalpha-lower-flag99,2853
(defun nextpar-generic nextpar-generic108,3151
(defun tab-generic tab-generic115,3314
(defun curtab curtab121,3433
(defun margin-generic-tps margin-generic-tps125,3544
(defutil pcallpcall139,4080
(defflag stylestyle154,4766

grades1.lisp,2227
(deffile grades1grades114,637
(defvar read-grade-ini read-grade-ini24,972
(defvar listofchanges listofchanges25,1000
(defvar gradefileflag gradefileflag26,1027
(defvar msg-template msg-template27,1052
(defun gradetop gradetop29,1079
(defun grade-top-prompt grade-top-prompt37,1306
(defun grade-command-interpreter grade-command-interpreter40,1384
(defun grade-print-* grade-print-*97,3230
(defun days-late days-late100,3295
(defun defaultfn1 defaultfn1115,3812
(defun get1 get1126,4137
(defun initialize initialize130,4241
(defun initialize1 initialize1218,7789
(defun cal-letter-grade cal-letter-grade248,8928
(defun linereadp1 linereadp1283,10436
(defun linereadp2 linereadp2288,10569
(defun maxsizelist maxsizelist307,11281
(defun penalty penalty314,11548
(defun penalty-0 penalty-0318,11640
(defun penalty%10 penalty%10322,11737
(defun penalty1%10 penalty1%10325,11813
(defun penalty2%10 penalty2%10328,11891
(defun penalty% penalty%331,11969
(defun penalty1% penalty1%334,12069
(defun penalty2% penalty2%338,12197
(defun get-exename get-exename344,12400
(defun display2 display2382,13832
(defun display1 display1397,14315
(defun displaygrade-main displaygrade-main410,14767
(defun displaygrade displaygrade449,15982
(defun displaygrade1-main displaygrade1-main476,17077
(defun displaygrade1 displaygrade1489,17538
(defun displayterminal displayterminal503,18108
(defun print-grades-main print-grades-main521,18659
(defun print-grades print-grades565,20282
(defun printgrade1-main printgrade1-main581,20887
(defun printgrade1 printgrade1596,21365
(defun print-letter-grades print-letter-grades611,21966
(defun next-counter next-counter622,22349
(defun prompt4 prompt4626,22425
(defun read1 read1658,23836
(defun rename-file% rename-file%663,23985
(defun round-off round-off676,24437
(defun initialize-filenames initialize-filenames684,24742
(defun unbind-filenames unbind-filenames706,25929
(defun update-filenames update-filenames715,26161
(defun replace1 replace1730,26860
(defgexpr chg-varschg-vars744,27264
(defun chg-vars chg-vars747,27337
(defgexpr gr-reviewgr-review856,31266
(defun gr-review gr-review859,31334

grades2.lisp,2579
(deffile grades2grades214,637
(defgexpr create-gradefilecreate-gradefile21,771
(defun create-gradefile create-gradefile24,837
(defgexpr resume-insert-gradesresume-insert-grades84,2954
(defun resume-insert-grades resume-insert-grades87,3062
(defgexpr insert-gradesinsert-grades94,3300
(defun insert-grades insert-grades97,3389
(defun insert-grades-main1 insert-grades-main1137,4860
(defun insert-grades-main2 insert-grades-main2162,5878
(defun insert-grades-main3 insert-grades-main3182,6601
(defgexpr alter-gradealter-grade202,7472
(defun alter-grade alter-grade205,7553
(defgexpr modify-grademodify-grade232,8585
(defun modify-grade modify-grade235,8667
(defun modify-grade1 modify-grade1248,9039
(defgexpr late-exerciseslate-exercises271,9906
(defun late-exercises late-exercises275,10019
(defgexpr etps-gradeetps-grade318,11443
(defun etps-grade etps-grade321,11527
(defgexpr due-datesdue-dates401,14667
(defun due-dates due-dates404,14732
(defun duedate-main duedate-main426,15535
(defgexpr add-studentsadd-students441,15943
(defun add-students add-students444,16015
(defgexpr delete-studentdelete-student478,17246
(defun delete-student delete-student481,17327
(defgexpr change-sequencechange-sequence508,18195
(defun change-sequence change-sequence511,18270
(defun remove-one remove-one533,19141
(defgexpr aliasesaliases538,19255
(defun aliases1 aliases1545,19505
(defgexpr commentcomment578,20705
(defun commnt commnt582,20794
(defgexpr statisticsstatistics593,21129
(defun statistics-main statistics-main597,21218
(defun statistics statistics603,21372
(defun statistics1 statistics1607,21442
(defgexpr number-of-studentsnumber-of-students658,23614
(defun number-of-students number-of-students661,23723
(defgexpr displaydisplay669,24002
(defun display display672,24074
(defgexpr info-exercisesinfo-exercises720,25903
(defun info-exercises info-exercises724,26047
(defgexpr change-weightchange-weight753,27261
(defun change-weight change-weight756,27334
(defgexpr calculate-gradecalculate-grade780,28263
(defun calculate-grade calculate-grade783,28319
(defgexpr penalty-fnspenalty-fns866,31204
(defun penalty-fns penalty-fns869,31288
(defgexpr sort-fnsort-fn887,31896
(defun sort-fn sort-fn890,31945
(defgexpr letter-gradeletter-grade937,33766
(defun letter-grade letter-grade940,33825
(defgexpr gr-leavegr-leave979,35211
(defgexpr leaveleave983,35323
(defgexpr gr-exitgr-exit987,35432
(defun gr-exit gr-exit990,35501
(defun grader-exit grader-exit993,35559

grades-top.lisp,110
(deffile grades-topgrades-top16,711
(defmexpr do-gradesdo-grades23,850
(defun do-grades do-grades26,912

gr-macros.lisp,1191
(deffile gr-macrosgr-macros18,664
(deftoplevel grade-topgrade-top23,770
(defcategory gexprgexpr32,1054
(deftype% consp1consp148,1433
(deftype% functionfunction54,1524
(defflag patch-filepatch-file61,1625
(defflag grade-dirgrade-dir67,1796
(defflag grade-filegrade-file79,2410
(defflag old-grade-fileold-grade-file88,2663
(defflag totals-grade-filetotals-grade-file95,2902
(defflag old-totals-grade-fileold-totals-grade-file103,3215
(defflag letter-grade-fileletter-grade-file110,3476
(defflag  etps-fileetps-file117,3740
(defflag  course-namecourse-name124,3984
(defflag statistical-optionsstatistical-options137,4466
(defflag print-n-digitsprint-n-digits151,5020
(defflag cal-percentagecal-percentage161,5341
(defflag letter-grade-flagletter-grade-flag168,5531
(defflag new-itemnew-item175,5730
(defflag drop-mindrop-min182,5919
(defflag due-date-flagdue-date-flag189,6107
(defun no-penalty no-penalty197,6379
(defflag default-penalty-fndefault-penalty-fn202,6464
(defmacro linereadp-s linereadp-s209,6679
(defmacro linereadp-e linereadp-e212,6721
(defvar eof-value eof-value215,6763
(defvar numeric-eof-value numeric-eof-value216,6797

htmldoc.lisp,458
(deffile htmldochtmldoc13,610
(defmexpr html-dochtml-doc20,744
(defun html-everything html-everything28,1004
(defun print-html print-html119,5892
(defun mhelp-html mhelp-html122,6034
(defun print-htmlified print-htmlified196,9100
(defutil print-htmlprint-html205,9472
(defun find-symbol-real find-symbol-real235,10914
(defun mhelp-html-2 mhelp-html-2257,12192
(defun strhtml strhtml284,13195
(defun make-htaccess make-htaccess378,20175

hx-natree-aux.lisp,863
(deffile hx-natree-auxhx-natree-aux15,626
(defun rename-justification rename-justification21,789
(defun deepenable-leaf-node-natree deepenable-leaf-node-natree31,1050
(defun dup-info-rewrite-exp-ctr dup-info-rewrite-exp-ctr43,1625
(defun merge-dup-info merge-dup-info130,5601
(defun merge-selection-node merge-selection-node208,9451
(defun pre-merge-dup-info pre-merge-dup-info225,10088
(defun etree-to-jform-rec etree-to-jform-rec234,10414
(defun etree-to-jform-rec-2 etree-to-jform-rec-2260,11261
(defun rewrite-equiv-natree rewrite-equiv-natree321,13625
(defun deepen-leaf-node-rulep deepen-leaf-node-rulep331,13905
(defun deepen-leaf-node-with-dup-info deepen-leaf-node-with-dup-info363,14892
(defun deepen-leaf-node-with-dup-info* deepen-leaf-node-with-dup-info*371,15175
(defun natree-subst-l-cntxt natree-subst-l-cntxt379,15465

hx-natree-cleanup.lisp,553
(defun natree-node-in-mating natree-node-in-mating4,60
(defun natree-cleanup-reverse-rewrites natree-cleanup-reverse-rewrites12,334
(defun natree-cleanup-inner-nodes natree-cleanup-inner-nodes26,944
(defun etree-with-shallow etree-with-shallow46,1782
(defun natree-cleanup-inner-nodes natree-cleanup-inner-nodes51,1931
(defun empty-dup-info-to-leaf empty-dup-info-to-leaf58,2183
(defun replace-empty-dup-infos replace-empty-dup-infos67,2502
(defun natree-precleanup natree-precleanup72,2674
(defun ml::ugen-legal ml::ugen-legal82,3060

hx-natree-debug.lisp,310
(defflag natree-debugnatree-debug15,626
(defun xattach-dup-info-to-natree xattach-dup-info-to-natree25,1085
(defun xupward-update-natree xupward-update-natree31,1245
(defun xupdate-dup-info xupdate-dup-info36,1394
(defun attention attention42,1568
(defun xdisplay-dup-info xdisplay-dup-info45,1643

hx-natree-duplication.lisp,1652
(defun display-dup-info display-dup-info13,607
(defun negate-etree negate-etree22,850
(defvar otherwise otherwise30,1114
(defun print-dup-info-debug print-dup-info-debug34,1202
(defun copy-dup-info copy-dup-info37,1279
(defun empty-dup-info empty-dup-info41,1393
(defun empty-dup-info-1 empty-dup-info-148,1581
(defun selection-dup-info selection-dup-info55,1758
(defun skolem-dup-info skolem-dup-info65,2027
(defun expansion-dup-info expansion-dup-info75,2341
(defun negation-dup-info negation-dup-info85,2606
(defun econjunction-dup-info econjunction-dup-info93,2845
(defun edisjunction-dup-info edisjunction-dup-info102,3126
(defun implication-dup-info implication-dup-info111,3407
(defun hd-substitute-in-natree hd-substitute-in-natree120,3682
(defun update-dup-info update-dup-info125,3909
(defun update-selection-dup-info update-selection-dup-info131,4103
(defun update-expansion-dup-info update-expansion-dup-info145,4639
(defun attach-dup-info-to-natree attach-dup-info-to-natree156,5157
(defun upward-update-natree upward-update-natree462,20833
(defun natree-to-etree natree-to-etree552,25572
(defun initialize-dup-info initialize-dup-info579,26795
(defun deepen-dup-info deepen-dup-info582,26899
(defun deepen-dup-info* deepen-dup-info*587,27038
(defun deepen-leaf-node-natree deepen-leaf-node-natree594,27263
(defun deepen-to-literals-natree deepen-to-literals-natree628,28565
(defun etree-conc-attach-natree etree-conc-attach-natree633,28797
(defun initialize-current-natree initialize-current-natree644,29138
(defun neg-dup-info-with-assertion neg-dup-info-with-assertion661,29730

hx-natree-rulep.lisp,516
(deffile hx-natree-rulephx-natree-rulep15,626
(defun break-up-dup-info break-up-dup-info21,796
(defun break-up-dup-info break-up-dup-info49,1967
(defun put-together-dup-info put-together-dup-info74,3105
(defun outfox-rulep-warning outfox-rulep-warning107,4701
(defun rulep-attach-dup-info-to-natree rulep-attach-dup-info-to-natree113,4891
(defun outfox-rulep outfox-rulep117,5026
(defun merge-dup-info-lenient merge-dup-info-lenient198,8953
(defun display-rulep-tables display-rulep-tables205,9185

hx-natree-top.lisp,336
(deffile hx-natree-tophx-natree-top15,626
(defvar current-natree current-natree21,779
(defstruct (natree natree23,808
(defun print-natree print-natree42,1306
(defmexpr pntrpntr48,1462
(defun print-natree-main print-natree-main54,1633
(defun proof-to-natree proof-to-natree71,2408
(defun hx-nat-etree hx-nat-etree96,3379

interface-style.lisp,1493
(deffile interface-styleinterface-style21,768
(defstyle istyleistyle29,945
(defvar istyle-characters istyle-characters51,1587
(defvar istyle-sym-in-use istyle-sym-in-use52,1618
(defvar istyle-start-sym istyle-start-sym53,1649
(defvar istyle-end-sym istyle-end-sym54,1688
(defun pp-symbol-istyle pp-symbol-istyle57,1728
(defun pp-istyle-special-symbolpp-istyle-special-symbol69,2083
(defun pp-space-p-istyle pp-space-p-istyle76,2243
(defun pp-typesym-istyle pp-typesym-istyle92,2731
(defun print-greek-type-char-istyle print-greek-type-char-istyle107,3231
(defun istyle-sym-font istyle-sym-font117,3630
(defun istyle-normal-font istyle-normal-font123,3767
(defun pptyoisym pptyoisym129,3903
(defun short-to-bytes short-to-bytes144,4223
(defun start-prompt-msg start-prompt-msg149,4335
(defun start-prompt-name start-prompt-name153,4384
(defun start-prompt-argtyp start-prompt-argtyp157,4434
(defun start-prompt-options start-prompt-options161,4486
(defun start-prompt-default start-prompt-default165,4539
(defun start-prompt-help start-prompt-help169,4592
(defun end-prompt end-prompt173,4642
(defun command-finished command-finished178,4702
(defun send-top-level send-top-level183,4768
(defun open-window-with-socket open-window-with-socket192,4914
(defun open-window-with-socket open-window-with-socket197,5194
(defun clear-window clear-window219,5647
(defun change-color change-color226,5814
(defun close-window close-window234,6013

jforms-defns.lisp,172
(deffile jforms-defnsjforms-defns13,606
(defflag lit-namelit-name20,718
(defflag print-lit-nameprint-lit-name27,851
(defgwff-type jforms-labelsjforms-labels38,1100

jforms-edops.lisp,760
(deffile jforms-edopsjforms-edops15,628
(defedop djformdjform22,751
(defedop cjformcjform27,836
(defwffop number-of-vertical-pathsnumber-of-vertical-paths32,920
(defedop num-vpathsnum-vpaths38,1092
(defun number-of-vertical-paths number-of-vertical-paths43,1191
(defun number-of-vertical-paths-main number-of-vertical-paths-main47,1305
(defwffop number-of-horizontal-pathsnumber-of-horizontal-paths63,1876
(defedop num-hpathsnum-hpaths69,2052
(defun number-of-horizontal-paths number-of-horizontal-paths74,2153
(defun number-of-horizontal-paths-main number-of-horizontal-paths-main78,2272
(defwffop print-jlistprint-jlist94,2847
(defun print-jlist print-jlist101,3003
(defedop pjpj104,3062
(defedop prop-cjformprop-cjform109,3141

jforms-labels.lisp,451
(deffile jforms-labelsjforms-labels13,606
(defflavor jformjform21,793
(defflavor disjunctiondisjunction37,1139
(defflavor conjunctionconjunction58,2035
(defflavor literalliteral68,2350
(defflavor universaluniversal89,3296
(defmacro jform-mark jform-mark111,4169
(defflavor existentialexistential115,4288
(defun print-jform print-jform123,4574
(defun print-jform-main print-jform-main127,4701
(defun copy-jform copy-jform143,5386

jforms.lisp,458
(deffile jformsjforms13,606
(defwffop jform-to-gwffjform-to-gwff20,725
(defun jform-to-gwff jform-to-gwff31,1027
(defun jform-to-gwff-c jform-to-gwff-c66,2789
(defwffop gwff-to-jformgwff-to-jform71,2986
(defun gwff-to-jform gwff-to-jform78,3169
(defun gwff-to-jform-rec gwff-to-jform-rec82,3322
(defun get-jform get-jform166,6333
(defwffop gwff-to-prop-jformgwff-to-prop-jform172,6501
(defun gwff-to-prop-jform gwff-to-prop-jform179,6738

lemmas.lisp,779
(deffile lemmaslemmas17,651
(defflag ASSERT-LEMMASASSERT-LEMMAS22,755
(defflag USE-EXT-LEMMASUSE-EXT-LEMMAS42,1452
(defmateop add-ext-lemmasadd-ext-lemmas60,2074
(defun extensionality-etree-lemmas extensionality-etree-lemmas72,2576
(defun introduce-extensionality-etree-lemma introduce-extensionality-etree-lemma90,3218
(defun extensionality-ftree-lemma-pf-1 extensionality-ftree-lemma-pf-1131,4744
(defun extensionality-ftree-lemma-pf-2 extensionality-ftree-lemma-pf-2155,5516
(defun set-subterms set-subterms173,6109
(defun set-subterms-1 set-subterms-1177,6208
(defun set-subterms-2 set-subterms-2185,6478
(defun set-subterms-3 set-subterms-3193,6721
(defmexpr deassert-lemmas deassert-lemmas202,6962
(defun deassert-lemmas deassert-lemmas213,7364

lib-bug.lisp,710
(deffile lib-buglib-bug13,608
(defflag default-bug-dirdefault-bug-dir18,712
(defflag use-default-bug-diruse-default-bug-dir34,1443
(defmexpr bug-savebug-save43,1730
(defmexpr bug-restorebug-restore62,2586
(defmexpr bug-deletebug-delete73,2990
(defmexpr bug-listbug-list82,3244
(defun bug-list bug-list87,3377
(defmexpr bug-helpbug-help101,3886
(defun bug-help bug-help108,4043
(defun bug-record bug-record120,4446
(defun bug-delete bug-delete132,4853
(defun bug-record-real bug-record-real145,5351
(defun proof-string proof-string205,7929
(defun string-history string-history242,9095
(defun retrieve-bug retrieve-bug255,9443
(defun retrieve-bug-real retrieve-bug-real269,9964

lib-macros.lisp,1037
(deffile lib-macroslib-macros17,640
(defcategory libobjectlibobject24,760
(defstruct libitemlibitem37,1083
(defstruct (libclasslibclass51,1253
(deftype% libclasslibclass64,1646
(defvar *current-class* *current-class*77,2078
(defflag default-libfile-typedefault-libfile-type81,2168
(defflag default-libindex-typedefault-libindex-type87,2325
(defflag default-lib-dirdefault-lib-dir99,2749
(defflag backup-lib-dirbackup-lib-dir117,3517
(defflag show-all-libobjectsshow-all-libobjects135,4297
(defflag add-subdirectoriesadd-subdirectories144,4648
(defflag recordflagsrecordflags153,4993
(defflag lib-masterindex-filelib-masterindex-file160,5185
(defflag lib-keyword-filelib-keyword-file166,5360
(defflag lib-bestmode-filelib-bestmode-file172,5535
(defflag remove-trailing-dirremove-trailing-dir178,5719
(defvar assumed-initial-dir assumed-initial-dir189,6106
(defvar lib-keyword-list lib-keyword-list190,6138
(defvar lib-bestmodes lib-bestmodes204,6978
(defcategory class-schemeclass-scheme206,7031

lib-menus.lisp,5542
(deffile lib-menuslib-menus17,642
(defmenu LIBRARYLIBRARY24,775
(defmenu LIB-DISPLAYLIB-DISPLAY30,873
(defmenuitem KEYKEY36,975
(defmenuitem LIBFILESLIBFILES43,1087
(defmenuitem LIBOBJECTS-IN-FILELIBOBJECTS-IN-FILE50,1214
(defmenuitem LIST-OF-LIBOBJECTSLIST-OF-LIBOBJECTS57,1371
(defmenuitem SCRIBE-ALL-WFFSSCRIBE-ALL-WFFS64,1528
(defmenuitem SCRIBELIBDIRSCRIBELIBDIR71,1676
(defmenuitem SCRIBELIBFILESCRIBELIBFILE79,1835
(defmenuitem SEARCH2SEARCH287,1997
(defmenuitem SEARCH22SEARCH2294,2119
(defmenuitem SHOWSHOW101,2245
(defmenuitem SHOW*-WFFSHOW*-WFF108,2361
(defmenuitem SHOW-ALL-WFFSSHOW-ALL-WFFS115,2492
(defmenuitem SHOW-HELPSHOW-HELP122,2635
(defmenuitem SHOW-OBJECTS-IN-FILESHOW-OBJECTS-IN-FILE129,2766
(defmenuitem SHOW-TIMINGSHOW-TIMING136,2930
(defmenuitem SHOW-WFFSHOW-WFF143,3067
(defmenuitem SHOW-WFF&HELPSHOW-WFF&HELP150,3195
(defmenuitem SHOW-WFFS-IN-FILESHOW-WFFS-IN-FILE157,3338
(defmenuitem TEX-ALL-WFFSTEX-ALL-WFFS164,3493
(defmenuitem TEXLIBDIRTEXLIBDIR172,3653
(defmenuitem TEXLIBFILETEXLIBFILE180,3804
(defmenu STRUCTSTRUCT188,3958
(defmenuitem COPY-LIBDIRCOPY-LIBDIR194,4050
(defmenuitem COPY-LIBFILECOPY-LIBFILE202,4201
(defmenuitem CREATE-LIB-DIRCREATE-LIB-DIR210,4355
(defmenuitem CREATE-LIB-SUBDIRCREATE-LIB-SUBDIR218,4515
(defmenuitem DELETE-LIB-DIRDELETE-LIB-DIR226,4684
(defmenuitem DELETE-LIBFILEDELETE-LIBFILE234,4844
(defmenuitem MOVE-LIBFILEMOVE-LIBFILE242,5004
(defmenuitem RENAME-LIBDIRRENAME-LIBDIR250,5158
(defmenuitem RENAME-LIBFILERENAME-LIBFILE258,5315
(defmenuitem UPDATE-LIBDIRUPDATE-LIBDIR266,5476
(defmenu WRITEWRITE274,5634
(defmenuitem CHANGE-PROVABILITYCHANGE-PROVABILITY281,5744
(defmenuitem CHECK-NEEDED-OBJECTSCHECK-NEEDED-OBJECTS289,5915
(defmenuitem COPY-LIBOBJECTCOPY-LIBOBJECT296,6076
(defmenuitem DELETE2DELETE2304,6235
(defmenuitem FIX-MODESFIX-MODES312,6371
(defmenuitem IMPORT-NEEDED-OBJECTSIMPORT-NEEDED-OBJECTS320,6515
(defmenuitem INSERTINSERT328,6695
(defmenuitem MOVE-LIBOBJECTMOVE-LIBOBJECT336,6830
(defmenuitem REFORMATREFORMAT344,6989
(defmenuitem REINDEXREINDEX352,7131
(defmenuitem RENAME-OBJECTRENAME-OBJECT360,7270
(defmenuitem SORTSORT368,7427
(defmenuitem SPRING-CLEANSPRING-CLEAN376,7557
(defmenu KEYWORDSKEYWORDS384,7711
(defmenuitem ADD-KEYWORDADD-KEYWORD390,7807
(defmenuitem CHANGE-KEYWORDSCHANGE-KEYWORDS398,7960
(defmenuitem SHOW-KEYWORDSSHOW-KEYWORDS406,8125
(defmenuitem UPDATE-KEYWORDSUPDATE-KEYWORDS413,8264
(defmenu BEST-MODESBEST-MODES421,8429
(defmenuitem ADD-BESTMODEADD-BESTMODE427,8529
(defmenuitem DELETE-BESTMODEDELETE-BESTMODE435,8687
(defmenuitem FIND-DUP-MODESFIND-DUP-MODES443,8854
(defmenuitem MODIFY-BESTMODEMODIFY-BESTMODE450,8998
(defmenuitem SHOW-BESTMODESHOW-BESTMODE458,9165
(defmenuitem SHOW-NEW-BESTMODESSHOW-NEW-BESTMODES465,9306
(defmenuitem UPDATE-PROVABILITYUPDATE-PROVABILITY472,9462
(defmenu LIB-CLASSLIB-CLASS480,9638
(defmenuitem CLASSIFY-CLASSCLASSIFY-CLASS486,9736
(defmenuitem CLASSIFY-ITEMCLASSIFY-ITEM493,9879
(defmenuitem CREATE-CLASS-SCHEMECREATE-CLASS-SCHEME500,10019
(defmenuitem CREATE-LIBCLASSCREATE-LIBCLASS507,10177
(defmenuitem FETCH-DOWNFETCH-DOWN514,10323
(defmenuitem FETCH-LIBCLASSFETCH-LIBCLASS521,10454
(defmenuitem FETCH-LIBCLASS*FETCH-LIBCLASS*528,10597
(defmenuitem FETCH-UPFETCH-UP535,10743
(defmenuitem GOTO-CLASSGOTO-CLASS542,10868
(defmenuitem PCLASSPCLASS549,11000
(defmenuitem PCLASS-SCHEME-TREEPCLASS-SCHEME-TREE556,11120
(defmenuitem PCLASS-TREEPCLASS-TREE563,11276
(defmenuitem PINTERSECTPINTERSECT570,11411
(defmenuitem PINTERSECT*PINTERSECT*577,11543
(defmenuitem PSCHEMES2PSCHEMES2584,11678
(defmenuitem ROOT-CLASSROOT-CLASS591,11805
(defmenuitem UNCLASSIFY-CLASSUNCLASSIFY-CLASS598,11937
(defmenuitem UNCLASSIFY-ITEMUNCLASSIFY-ITEM605,12087
(defmenuitem LEAVE2LEAVE2612,12234
(defmenu LIBRARY-FLAGSLIBRARY-FLAGS619,12351
(defmenuitem DEFAULT-BUG-DIRDEFAULT-BUG-DIR625,12455
(defmenuitem USE-DEFAULT-BUG-DIRUSE-DEFAULT-BUG-DIR632,12605
(defmenuitem CLASS-DIRECTIONCLASS-DIRECTION639,12767
(defmenuitem CLASS-SCHEMECLASS-SCHEME646,12917
(defmenuitem ADD-SUBDIRECTORIESADD-SUBDIRECTORIES653,13058
(defmenuitem BACKUP-LIB-DIRBACKUP-LIB-DIR660,13217
(defmenuitem DEFAULT-LIB-DIRDEFAULT-LIB-DIR667,13364
(defmenuitem DEFAULT-LIBFILE-TYPEDEFAULT-LIBFILE-TYPE674,13514
(defmenuitem DEFAULT-LIBINDEX-TYPEDEFAULT-LIBINDEX-TYPE681,13679
(defmenuitem LIB-BESTMODE-FILELIB-BESTMODE-FILE688,13848
(defmenuitem LIB-KEYWORD-FILELIB-KEYWORD-FILE695,14005
(defmenuitem LIB-MASTERINDEX-FILELIB-MASTERINDEX-FILE702,14159
(defmenuitem RECORDFLAGSRECORDFLAGS709,14325
(defmenuitem REMOVE-TRAILING-DIRREMOVE-TRAILING-DIR716,14464
(defmenuitem SHOW-ALL-LIBOBJECTSSHOW-ALL-LIBOBJECTS723,14627
(defmenu LIBLIB730,14790
(defmenuitem BUG-DELETEBUG-DELETE736,14882
(defmenuitem BUG-HELPBUG-HELP744,15027
(defmenuitem BUG-LISTBUG-LIST751,15146
(defmenuitem BUG-RESTOREBUG-RESTORE758,15265
(defmenuitem BUG-SAVEBUG-SAVE765,15393
(defmenuitem PSCHEMESPSCHEMES773,15532
(defmenuitem DATERECDATEREC780,15651
(defmenuitem MODERECMODEREC788,15787
(defmenuitem DISPLAYFILEDISPLAYFILE796,15923
(defmenuitem LIB-ABBRLIB-ABBR803,16052
(defmenu LIB-READLIB-READ810,16178
(defmenuitem DESTROYDESTROY816,16274
(defmenuitem FETCHFETCH823,16395
(defmenuitem FIND-PROVABLEFIND-PROVABLE830,16510
(defmenuitem RESTORE-MASTERINDEXRESTORE-MASTERINDEX837,16649
(defmenuitem RETRIEVE-FILERETRIEVE-FILE844,16806

lib-objects2.lisp,612
(deffile lib-objects2lib-objects218,666
(deflibobject rrulerrule27,868
(defun lib-promptfn-rewrite lib-promptfn-rewrite34,1058
(defun libprint-rewrite libprint-rewrite87,3521
(defun libparse-rewrite libparse-rewrite92,3800
(defun get-lib-rewrite get-lib-rewrite99,4076
(deflibobject theorytheory116,4969
(defun lib-promptfn-theory lib-promptfn-theory123,5189
(defun libprint-theory libprint-theory127,5378
(defun libparse-theory libparse-theory131,5468
(defun get-lib-theory get-lib-theory134,5511
(defun rrule-to-gwff rrule-to-gwff166,7119
(defun theory-to-gwff theory-to-gwff178,7469

lib-objects.lisp,2450
(deffile lib-objectslib-objects18,666
(deflibobject gwffgwff25,825
(defun lib-promptfn-gwff lib-promptfn-gwff32,992
(defun libprint-gwff libprint-gwff52,1778
(defun libparse-gwff libparse-gwff63,2206
(defun get-lib-cw get-lib-cw66,2259
(deflibobject abbrabbr74,2495
(defun libprint-abbr libprint-abbr80,2684
(defun get-lib-abbr get-lib-abbr86,2873
(defun lib-promptfn-abbr lib-promptfn-abbr99,3453
(deflibobject dpairsetdpairset194,7378
(defun libprint-dpairset libprint-dpairset201,7595
(defun libparse-dpairset libparse-dpairset211,7933
(defun lib-tpsobject-dpairset lib-tpsobject-dpairset218,8163
(defun lib-promptfn-dpairset lib-promptfn-dpairset229,8656
(deflibobject modemode252,9610
(defun lib-promptfn-mode lib-promptfn-mode260,9949
(defun get-mode-flags get-mode-flags278,10936
(defun get-lib-mode get-lib-mode290,11441
(defun define-mode-flags define-mode-flags303,11935
(defun define-mode-flag define-mode-flag308,12162
(defun flagsort flagsort322,12810
(deflibobject mode1mode1329,12977
(defun lib-promptfn-mode1 lib-promptfn-mode1336,13254
(defun libprint-mode1 libprint-mode1368,15006
(deflibobject lib-constlib-const387,15411
(defun get-lib-const get-lib-const394,15654
(defun lib-promptfn-const lib-promptfn-const409,16301
(defvar *libtex-start*)*libtex-start*493,20256
(defun pwff-lib pwff-lib495,20281
(defun atomvalterpri-tex atomvalterpri-tex529,21486
(defun printwffscope-lib-tex printwffscope-lib-tex539,21751
(defun printwffplain-lib-tex printwffplain-lib-tex570,22900
(defun printwff-lib-tex printwff-lib-tex587,23548
(defun printpplist-lib-tex printpplist-lib-tex682,26992
(defun indentation-lib-tex indentation-lib-tex761,29524
(deflibobject class-schemeclass-scheme768,29714
(defun libprint-class-scheme libprint-class-scheme781,30267
(defun lib-promptfn-class-scheme lib-promptfn-class-scheme785,30356
(defun get-class-scheme get-class-scheme792,30720
(defun build-class-scheme build-class-scheme806,31355
(defun build-class-scheme-rec build-class-scheme-rec811,31492
(defun class-scheme-description class-scheme-description836,32339
(defun class-scheme-description-rec class-scheme-description-rec842,32508
(deflibobject MODES-GWFFSMODES-GWFFS855,32963
(defun lib-promptfn-modes-gwffs lib-promptfn-modes-gwffs867,33466
(defun get-modes-gwffs get-modes-gwffs889,34537
(defun libprint-modes-gwffs libprint-modes-gwffs898,34899

lib-ops.lisp,2432
(deffile lib-opslib-ops17,637
(defun initialise-assumed initialise-assumed22,735
(defun pfile pfile34,1272
(defun complete-lib-filename complete-lib-filename40,1513
(defun complete-lib-filename-choose complete-lib-filename-choose53,2177
(defun get-lib-printfn get-lib-printfn79,3500
(defun get-lib-descr-readfn get-lib-descr-readfn83,3641
(defun get-lib-attr-readfn get-lib-attr-readfn86,3741
(defun make-lib-tpsobject make-lib-tpsobject89,3839
(defun locate-item locate-item94,4009
(defun one-of-each-type one-of-each-type126,5572
(defun restore-lib-hashtable restore-lib-hashtable132,5793
(defun stringpath-to-symbollist stringpath-to-symbollist271,12714
(defun get-directories-below get-directories-below288,13175
(defun get-directories-below get-directories-below295,13359
(defun find-subdirs find-subdirs322,14891
(defun directory% directory%354,16498
(defun delete-item-from-file delete-item-from-file368,17291
(defun modify-item-in-file modify-item-in-file391,18229
(defun insert-item-in-file insert-item-in-file407,19093
(defun rewrite-masterindex rewrite-masterindex415,19401
(defun add-to-masterindex add-to-masterindex436,20281
(defun write-libitem write-libitem448,20799
(defun write-libitem-quick write-libitem-quick489,22591
(defun insert-lots-of-spaces insert-lots-of-spaces496,22871
(defun write-description-only write-description-only505,23073
(defun write-brief-description write-brief-description524,23912
(defun write-brief-d-and-m write-brief-d-and-m534,24372
(defun write-mhelp-only write-mhelp-only560,25514
(defun write-libitem-time write-libitem-time568,25782
(defun prin-filter prin-filter590,26766
(defun delete-item-from-masterindex delete-item-from-masterindex622,28672
(defun store-item store-item632,29120
(defun update-libitem update-libitem647,29782
(defvar *retrieve-stack* *retrieve-stack*660,30368
(defun retrieve-item retrieve-item662,30399
(defun retrieve-item-from-file-without-needed-objs retrieve-item-from-file-without-needed-objs746,34474
(defun object-present object-present757,34936
(defun define-permanent-objects define-permanent-objects771,35778
(defun parse-libitem parse-libitem801,37142
(defun delete-libobject delete-libobject836,38933
(defun def-abbr-quick def-abbr-quick859,40160
(defun princ-tex-verbatim princ-tex-verbatim873,40658
(defun tex-verbatim-char-p tex-verbatim-char-p882,40894

library1.lisp,3601
(deffile library1library117,650
(deftoplevel library-toplibrary-top24,776
(defcategory librarycmdlibrarycmd34,1097
(defvar *lib-masterindex* *lib-masterindex*54,1650
(defun librarycmd-mhelp librarycmd-mhelp56,1696
(defun library library67,2081
(defun librarytop librarytop71,2175
(defun library-top-prompt library-top-prompt84,2549
(defun library-print-* library-print-*86,2608
(defun library-command-interpreter library-command-interpreter88,2670
(defun lib-opdecode lib-opdecode128,4178
(defmexpr liblib151,4977
(deflibrary leaveleave159,5132
(defun exit-library exit-library163,5240
(deflibrary showshow167,5335
(defun show-libobject show-libobject180,5774
(deflibrary keykey186,6000
(defun lib-key lib-key197,6541
(defun is-a-keyword is-a-keyword226,8032
(deflibrary searchsearch229,8132
(deflibrary search2search2246,8951
(defun lib-search-2 lib-search-2269,10021
(defun lib-search lib-search272,10076
(defun readable-boolean readable-boolean336,12856
(deflibrary show-wffshow-wff346,13212
(defun show-libobject-wff show-libobject-wff358,13596
(deflibrary show-timingshow-timing365,13903
(defun show-libobject-time show-libobject-time379,14505
(defun main-show-time-fn main-show-time-fn428,16708
(deflibrary show-helpshow-help434,17012
(defun show-libobject-help show-libobject-help447,17494
(deflibrary show-wff&helpshow-wff&help453,17698
(deflibrary show*-wffshow*-wff463,18023
(defun show-libobject-wff-and-help show-libobject-wff-and-help475,18446
(defun show-libobject-wff-and-help-rec show-libobject-wff-and-help-rec483,18820
(defun show-libobject-wff-and-help-rec-1 show-libobject-wff-and-help-rec-1488,18981
(deflibrary show-all-wffsshow-all-wffs504,19686
(deflibrary scribe-all-wffsscribe-all-wffs516,20283
(deflibrary tex-all-wffstex-all-wffs535,21250
(defun scribe-all-wffs-anywhere scribe-all-wffs-anywhere554,22201
(defun tex-all-wffs-anywhere tex-all-wffs-anywhere557,22326
(defun write-all-wff-anywhere write-all-wff-anywhere560,22450
(defun keyword-filter keyword-filter635,25715
(defun first-order-check first-order-check645,26145
(defun proven proven657,26669
(defun unproven unproven667,27046
(defun true-fo-check true-fo-check670,27088
(defun get-real-filter get-real-filter683,27494
(defun show-all-wffs-anywhere show-all-wffs-anywhere711,28837
(deflibrary show-wffs-in-fileshow-wffs-in-file733,29648
(defun show-wffs-in-file show-wffs-in-file739,29797
(deflibrary show-objects-in-fileshow-objects-in-file756,30514
(defun show-objects-in-file show-objects-in-file770,31042
(deflibrary list-of-libobjectslist-of-libobjects789,31809
(defun list-of-libobjects list-of-libobjects797,32204
(deflibrary libfileslibfiles810,32917
(defun libfiles libfiles819,33155
(deflibrary libobjects-in-filelibobjects-in-file849,34291
(defun  libobjects-in-file libobjects-in-file858,34597
(deflibrary scribelibfilescribelibfile869,35149
(deflibrary scribelibdirscribelibdir894,36506
(deflibrary texlibdirtexlibdir908,37219
(defun scribelibdir scribelibdir922,37926
(defun texlibdir texlibdir925,38012
(defun writelibdir writelibdir928,38097
(defun scribelibfile scribelibfile948,38900
(defun scribelibfile-real scribelibfile-real964,39650
(deflibrary texlibfiletexlibfile1032,42591
(defun texlibfile texlibfile1049,43654
(defun texlibfile-real texlibfile-real1069,44639
(defun maximum-output maximum-output1186,49498
(defun medium-output medium-output1202,50279
(defmexpr displayfiledisplayfile1223,51256
(defun displayfile displayfile1234,51713

library2.lisp,3534
(deffile library2library217,650
(deflibrary restore-masterindexrestore-masterindex26,829
(deflibrary destroydestroy34,1227
(defun destroy-libobject destroy-libobject43,1502
(deflibrary fetchfetch60,2343
(defun retrieve-libobject-real retrieve-libobject-real75,2925
(defun retrieve-libobject retrieve-libobject86,3436
(deflibrary retrieve-fileretrieve-file99,4201
(defun retrieve-file retrieve-file109,4611
(deflibrary find-provablefind-provable130,5391
(defun find-provable find-provable137,5648
(deflibrary change-provabilitychange-provability146,5845
(defun change-provability change-provability156,6170
(defun get-provability get-provability200,8374
(defun get-provability-list get-provability-list222,9329
(deflibrary insertinsert244,10378
(defun insert-libobject insert-libobject265,11298
(deflibrary deletedelete412,18623
(defun delete-libobject-list delete-libobject-list424,19060
(deflibrary move-libobjectmove-libobject428,19160
(defun move-libobject move-libobject439,19689
(defun movlib movlib442,19777
(deflibrary copy-libobjectcopy-libobject484,21778
(deflibrary rename-objectrename-object502,22538
(defun rename-libobject rename-libobject512,22962
(defun copy-libobject copy-libobject519,23222
(defun movlib2 movlib2572,25879
(deflibrary reformatreformat594,26919
(defun reformat-libfile reformat-libfile605,27389
(deflibrary sortsort626,28273
(defun sort-libfile sort-libfile637,28822
(defun daterec daterec680,30751
(defun get-rough-time-estimate get-rough-time-estimate841,37932
(deflibrary reindexreindex856,38501
(defun reindex-libfile reindex-libfile872,39267
(deflibrary spring-cleanspring-clean910,41071
(defun spring-clean spring-clean931,42197
(defun library-file-p library-file-p983,44632
(defun valid-file-p valid-file-p987,44777
(deflibrary fix-modesfix-modes1002,45589
(defun fix-modes fix-modes1018,46290
(deflibrary check-needed-objectscheck-needed-objects1134,52302
(defun check-needed-objects check-needed-objects1140,52508
(deflibrary import-needed-objectsimport-needed-objects1174,53874
(defun import-needed-objects import-needed-objects1189,54468
(defun import-needed-objects-1 import-needed-objects-11195,54701
(deflibrary create-lib-dircreate-lib-dir1265,57532
(deflibrary create-lib-subdircreate-lib-subdir1277,58048
(deflibrary delete-lib-dirdelete-lib-dir1293,58778
(defun create-lib-dir create-lib-dir1303,59111
(defun create-lib-subdir create-lib-subdir1319,59780
(defun delete-lib-dir delete-lib-dir1334,60351
(defun choose-library-directory choose-library-directory1385,62533
(defun choose-library-subdirectory choose-library-subdirectory1446,64811
(deflibrary copy-libdircopy-libdir1507,67028
(defun copy-libdir copy-libdir1532,68236
(defun copy-libdir-work copy-libdir-work1541,68573
(deflibrary update-libdirupdate-libdir1667,74133
(defun update-libdir update-libdir1697,75405
(deflibrary delete-libfiledelete-libfile1707,75921
(defun delete-libfile delete-libfile1715,76163
(defun delete-libfile-2 delete-libfile-21720,76333
(deflibrary rename-libfilerename-libfile1733,76817
(defun rename-libfile rename-libfile1741,77145
(deflibrary rename-libdirrename-libdir1752,77568
(defun rename-libdir rename-libdir1756,77665
(deflibrary copy-libfilecopy-libfile1770,78177
(defun copy-libfile copy-libfile1786,78873
(deflibrary move-libfilemove-libfile1819,80634
(defun move-libfile move-libfile1829,81080
(defun move-libfile-2 move-libfile-21854,82372

library3.lisp,7591
(deffile library3library313,593
(deflibrary add-keywordadd-keyword20,725
(defun add-keyword add-keyword29,1048
(deflibrary show-keywordsshow-keywords41,1743
(defun show-keywords show-keywords44,1844
(deflibrary change-keywordschange-keywords50,1961
(defun change-keywords change-keywords59,2328
(defun input-keywords input-keywords93,3972
(defun input-keywords-2 input-keywords-2103,4398
(defun keyword-p keyword-p111,4699
(defun get-keywords-for get-keywords-for113,4770
(defun get-keywords-for-real get-keywords-for-real118,4900
(deflibrary update-keywordsupdate-keywords145,6328
(defun update-keywords update-keywords160,7127
(defun destroy-libobject-quiet destroy-libobject-quiet196,9138
(defun stuff-bestmodes-into-hashtable stuff-bestmodes-into-hashtable211,9955
(defun output-bestmodes-to-file output-bestmodes-to-file218,10278
(defun shuffle-backups shuffle-backups249,11568
(defun different-files different-files281,13065
(defun output-today output-today298,13714
(deftype% short-dateshort-date305,14012
(defun princ-date princ-date313,14311
(defun get-short-date get-short-date323,14586
(defun is-short-date-p is-short-date-p338,15343
(defun integer-short-date-p integer-short-date-p342,15425
(defmexpr moderecmoderec359,16505
(defun moderec moderec363,16632
(deflibrary add-bestmodeadd-bestmode380,17450
(defun add-bestmode add-bestmode408,18869
(defun add-bestmode-2 add-bestmode-2424,19708
(deflibrary modify-bestmodemodify-bestmode439,20294
(deflibrary delete-bestmodedelete-bestmode448,20622
(defun modify-bestmode modify-bestmode457,20905
(defun delete-bestmode delete-bestmode494,22550
(defun remove-bestmode remove-bestmode522,23736
(defun listeq listeq532,24040
(deflibrary show-bestmodeshow-bestmode537,24167
(deflibrary show-new-bestmodesshow-new-bestmodes547,24591
(defun show-new-bestmodes show-new-bestmodes556,24989
(defun show-bestmode show-bestmode570,25447
(deflibrary show-bestmode-thmsshow-bestmode-thms586,25992
(defmenuitem SHOW-BESTMODE-THMSSHOW-BESTMODE-THMS589,26106
(defun show-bestmode-thms show-bestmode-thms596,26262
(defun print-bestmodes-nicely print-bestmodes-nicely601,26442
(defreview find-modefind-mode627,27343
(defun find-mode find-mode636,27676
(deflibrary find-dup-modesfind-dup-modes667,29008
(defun find-dup-modes find-dup-modes670,29106
(defun print-duplicates-in print-duplicates-in687,29707
(defun update-bestmodes-file update-bestmodes-file704,30320
(deflibrary update-provabilityupdate-provability720,30976
(defun update-provability update-provability724,31104
(defflag CLASS-SCHEMECLASS-SCHEME755,32435
(deflibrary create-class-schemecreate-class-scheme792,34057
(deflibrary pclasspclass814,35037
(defmexpr pschemespschemes831,35579
(deflibrary pschemespschemes838,35835
(deflibrary root-classroot-class846,36118
(deflibrary goto-classgoto-class853,36309
(deflibrary classify-classclassify-class871,36973
(deflibrary unclassify-classunclassify-class888,37659
(deflibrary classify-itemclassify-item912,38473
(deflibrary unclassify-itemunclassify-item932,39373
(deflibrary fetch-libclassfetch-libclass948,39975
(deflibrary fetch-libclass*fetch-libclass*963,40546
(defflag CLASS-DIRECTIONCLASS-DIRECTION983,41424
(deflibrary fetch-upfetch-up998,41941
(deflibrary fetch-downfetch-down1014,42555
(deflibrary create-libclasscreate-libclass1030,43170
(deflibrary pclass-scheme-treepclass-scheme-tree1041,43585
(deflibrary pclass-treepclass-tree1056,44179
(defun create-class-scheme create-class-scheme1064,44494
(defun pclass pclass1075,44897
(defun print-libclass-libitems print-libclass-libitems1095,45468
(defun pclassinfo pclassinfo1109,45850
(defun pschemes pschemes1127,46544
(defun goto-root-class goto-root-class1133,46691
(defun goto-class goto-class1140,46963
(defun find-libclass find-libclass1151,47313
(defun find-libclasses find-libclasses1160,47731
(defun find-libsubclass find-libsubclass1179,48359
(defun find-libsubclasses find-libsubclasses1185,48607
(defun is-a-class-ancestor is-a-class-ancestor1192,48816
(defun is-a-class-ancestor-rec is-a-class-ancestor-rec1195,48911
(defun find-libsuperclass find-libsuperclass1206,49265
(defun find-libsuperclasses find-libsuperclasses1210,49407
(defun choose-libclass choose-libclass1217,49621
(defun classify-class classify-class1239,50394
(defun unclassify-class unclassify-class1253,50942
(defun items-classified items-classified1270,51627
(defun items-classified* items-classified*1273,51683
(defun classify-item classify-item1279,51876
(defun classify-item-1 classify-item-11289,52242
(defun classify-item-2 classify-item-21297,52564
(defun unclassify-item unclassify-item1331,53905
(defun fetch-libclass fetch-libclass1343,54292
(defun fetch-libclass-1 fetch-libclass-11353,54636
(defun fetch-up fetch-up1362,54928
(defun fetch-down fetch-down1365,54982
(defun fetch-libclass* fetch-libclass*1368,55040
(defun fetch-libclass*-1 fetch-libclass*-11382,55550
(defun create-libclass create-libclass1392,55857
(defun pclass-scheme-tree pclass-scheme-tree1413,56575
(defun pclass-tree pclass-tree1416,56675
(defun pclass-tree-main pclass-tree-main1425,57027
(defun rec-libclass-kids rec-libclass-kids1440,57601
(defun rec-libclass-print rec-libclass-print1446,57839
(defun p-libclass-elt p-libclass-elt1479,59239
(defun find-or-create-libclass find-or-create-libclass1496,60082
(defun libclass-libitems* libclass-libitems*1506,60436
(deflibrary pintersectpintersect1514,60681
(deflibrary pintersect*pintersect*1523,60933
(defun pintersect pintersect1537,61383
(defun pintersect* pintersect*1555,61934
(deflibrary generate-class-schemegenerate-class-scheme1573,62488
(defun generate-class-scheme generate-class-scheme1591,63219
(defun generate-class-scheme-abbrevs-down generate-class-scheme-abbrevs-down1609,64111
(defun generate-class-scheme-abbrevs-up generate-class-scheme-abbrevs-up1660,65999
(defun first-existing-classes-up first-existing-classes-up1710,67835
(defun first-existing-classes-up-rec first-existing-classes-up-rec1715,67996
(defun lowest-existing-classes-down lowest-existing-classes-down1732,68508
(defun lowest-existing-classes-down-rec lowest-existing-classes-down-rec1737,68677
(defun remove-empty-classes remove-empty-classes1755,69339
(defun force-unique-parent-classes force-unique-parent-classes1776,70141
(defun remove-ancestor-classes remove-ancestor-classes1805,71460
(defun find-maximal-subset-classes find-maximal-subset-classes1815,71679
(defun find-minimal-superset-classes find-minimal-superset-classes1825,72079
(defun generate-class-scheme-abbrevs-info generate-class-scheme-abbrevs-info1839,72677
(defun needed-objects-with-types needed-objects-with-types2100,81439
(defun needed-object-type needed-object-type2109,81653
(defun generate-class-scheme-abbrevs-info-simplify-needed generate-class-scheme-abbrevs-info-simplify-needed2123,82021
(defun generate-class-scheme-abbrevs-info-simplify-needed-1 generate-class-scheme-abbrevs-info-simplify-needed-12147,82833
(defun generate-class-scheme-abbrevs-info-needed* generate-class-scheme-abbrevs-info-needed*2164,83368
(defun destroy-all-extras destroy-all-extras2185,84064
(defun remove-props remove-props2199,84741
(deflibrary add-goodmodesadd-goodmodes2211,85130
(deflibrary remove-goodmodesremove-goodmodes2222,85645
(defun add-goodmodes add-goodmodes2233,86176
(defun remove-goodmodes remove-goodmodes2241,86527

linenumber1.lisp,1054
(deffile linenumber1linenumber125,799
(defflag support-numberssupport-numbers41,1284
(defun line-no-defaults-to line-no-defaults-to58,1926
(defun line-no-defaults-to-main line-no-defaults-to-main219,8655
(defun find-defaults-for-pair find-defaults-for-pair378,15184
(defun find-next-line find-next-line399,15956
(defun match-variables match-variables404,16184
(defun maximize-num maximize-num440,17407
(defun minimize-num minimize-num450,17767
(defun find-closest-plan-line find-closest-plan-line470,18507
(defun find-defaults find-defaults486,19232
(defun line-no-defaults-from line-no-defaults-from503,19901
(defun update-gaps1 update-gaps1531,21049
(defun update-gaps update-gaps575,22687
(defun find-all-gaps find-all-gaps650,25558
(defun find-closest-gap find-closest-gap677,26694
(defun find-previous-gap find-previous-gap689,27109
(defun remove-unnecessary-gaps remove-unnecessary-gaps729,28547
(defun introduce-new-plan-line introduce-new-plan-line759,29725
(defun set-intersect-p set-intersect-p772,30260

linenumber2.lisp,574
(deffile linenumber2linenumber225,799
(defun update-plan update-plan33,961
(defun update-plan1 update-plan1249,9772
(defun update-plan2 update-plan2463,18335
(defun hyp-eq hyp-eq520,20747
(defun find-old-label find-old-label526,20936
(defun insert-new-line insert-new-line587,23438
(defun find-new-pairs find-new-pairs594,23722
(defun planp planp627,25062
(defun modify-just modify-just631,25158
(defun find-new-lines find-new-lines645,25775
(defun update-plan-pairs update-plan-pairs658,26280
(defun find-support-lines find-support-lines673,26835

linereadp.lisp,3438
(deffile linereadplinereadp13,604
(defun linereadp linereadp52,2355
(defun read-line-sym read-line-sym90,3793
(defun read-line-sym read-line-sym103,4202
(defun lisp-ize lisp-ize116,4604
(defun all-dots all-dots120,4736
(defun linereadpplinereadpp128,4909
(defflag completion-optionscompletion-options152,5702
(defun command-completion command-completion180,6490
(defun get-comp-option get-comp-option215,7773
(defun find-matching-prefix find-matching-prefix225,8199
(defun find-completions-real find-completions-real243,8857
(defun find-completions find-completions251,9132
(defun find-flag-completions find-flag-completions262,9636
(defun do-flag-substitutions do-flag-substitutions272,9997
(defvar *command-history* *command-history*297,10820
(defflag history-sizehistory-size301,10930
(defun change-history change-history311,11217
(defmexpr historyhistory326,11732
(defvar *previous-matched-line* *previous-matched-line*346,12601
(defun do-command-history-substitutions do-command-history-substitutions349,12640
(defun print-history print-history362,13088
(defun update-history update-history383,13768
(defun history-substitute-top history-substitute-top398,14262
(defun history-substitute history-substitute434,15270
(defun get-range-of-line get-range-of-line452,15957
(defun parse-history-subst parse-history-subst502,17771
(defun parse-range parse-range566,20435
(defun parse-first-range-num parse-first-range-num587,21075
(defun parse-second-range-num parse-second-range-num605,21615
(defun get-int-from-string get-int-from-string626,22318
(defun find-line-num-with-string-anywhere find-line-num-with-string-anywhere630,22411
(defun find-line-num-with-string-begin find-line-num-with-string-begin642,22776
(defun get-history-line get-history-line648,22968
(defmexpr aliasalias663,23418
(defmexpr unaliasunalias680,24079
(defun alias-command alias-command691,24366
(defvar *alias-hash-table* *alias-hash-table*706,24885
(defconstant *alias-pack* *alias-pack*707,24942
(defstruct alias-elt alias-elt714,25237
(defun make-alias make-alias724,25577
(defun remove-alias remove-alias749,26249
(defun find-alias find-alias757,26486
(defun print-alias print-alias767,26826
(defmacro alias alias785,27403
(defmacro unalias unalias796,27737
(defvar *already-expanded* *already-expanded*808,28081
(defun do-alias-substitutions do-alias-substitutions833,29246
(defun do-alias-substitutions1 do-alias-substitutions1876,30664
(defun do-alias-substitutions-aux do-alias-substitutions-aux894,31421
(defun tokenize-line tokenize-line926,32636
(defun get-next-token get-next-token944,33249
(defun read-a-dispatch-macro-token read-a-dispatch-macro-token979,34678
(defun read-a-string-token read-a-string-token1062,38456
(defun read-a-list-token read-a-list-token1068,38660
(defun read-until-token read-until-token1084,39153
(defun read-macro-comment read-macro-comment1100,39734
(defun whitespace-char-p whitespace-char-p1125,40501
(defun next-non-whitespace-char next-non-whitespace-char1128,40601
(defun read-a-single-escape-token read-a-single-escape-token1137,40803
(defun accumulate-token-even-multiple accumulate-token-even-multiple1144,41047
(defun accumulate-token-odd-multiple accumulate-token-odd-multiple1175,42264
(defun get-a-number get-a-number1202,43242
(defun get-a-number-list get-a-number-list1210,43615

lsppck-core.lisp,338
(deffile lsppck-corelsppck-core13,604
(defun lisp-package-p lisp-package-p20,756
(defun get-lisp-package-name get-lisp-package-name23,832
(defun print-lisp-package-name print-lisp-package-name28,1001
(defun use-one use-one31,1071
(defmexpr unuseunuse34,1139
(defun unuse unuse40,1282
(defun pack-status pack-status43,1350

lsppck-maint.lisp,104
(deffile lsppck-maintlsppck-maint11,589
(defmexpr useuse18,743
(defmexpr pack-statpack-stat27,996

macsys.lisp,1669
(deffile macsysmacsys19,709
(defun terminalp terminalp26,853
(defun fileprinc fileprinc29,936
(defun getfilespec getfilespec35,1184
(defun filespecp filespecp44,1488
(defun getdirspec getdirspec57,2114
(defun dirspecp dirspecp70,2577
(defmexpr exitexit74,2624
(defvar save-file-closed-on-exit save-file-closed-on-exit80,2709
(defvar first-entry first-entry81,2747
(defvar script-files script-files82,2814
(defun userexit userexit84,2841
(defmexpr newsnews133,5477
(defun news news137,5557
(defun curpos curpos145,5802
(defun setcurpos setcurpos147,5823
(defmacro dont-count dont-count149,5848
(defconstant month-format-stringmonth-format-string154,5981
(defconstant day-of-week-format-stringday-of-week-format-string158,6128
(defutil stringdtstringdt161,6240
(defun stringdt stringdt169,6582
(defutil stringdtlstringdtl180,7089
(defun stringdtl stringdtl189,7482
(defun cmd-completion cmd-completion205,8187
(defun initialize-top-command-ctree initialize-top-command-ctree210,8341
(defun initialize-top-level-ctree initialize-top-level-ctree213,8422
(defun create-sorted-ctree create-sorted-ctree220,8640
(defvar reroute-close-message reroute-close-message230,8982
(defmacro reroute-output-append reroute-output-append232,9016
(defmacro reroute-output reroute-output247,9575
(defutil reroute-outputreroute-output259,10008
(defutil reroute-output-appendreroute-output-append274,10818
(defmacro err-protect err-protect283,11142
(defvar gctime0 gctime0288,11286
(defvar runtime0 runtime0290,11306
(defvar time0 time0292,11327
(defun filetype filetype298,11403
(defun copy-file copy-file309,11749

maint.lisp,2438
(deffile maintmaint20,719
(defflag read-lload-sources-pread-lload-sources-p27,852
(defflag load-warn-pload-warn-p33,1014
(defflag news-dirnews-dir42,1303
(defflag source-pathsource-path48,1438
(defflag source-extensionsource-extension54,1584
(defflag compiled-extensioncompiled-extension60,1733
(defflag save-filesave-file66,1878
(defflag java-commjava-comm72,2041
(defflag init-dialogueinit-dialogue84,2302
(defflag init-dialogue-fninit-dialogue-fn91,2526
(definfo init-dialogue-default-fninit-dialogue-default-fn104,3148
(definfo init-define-my-default-modeinit-define-my-default-mode109,3324
(defflag expertflagexpertflag114,3543
(defun init-dialogue-default-fn init-dialogue-default-fn121,3804
(defun worth-saving worth-saving124,3903
(defun process-flag process-flag138,4464
(defun init-define-my-default-mode init-define-my-default-mode148,4840
(defun ck-expertlist ck-expertlist165,5596
(defun inv-exp inv-exp174,6033
(defmexpr sys-loadsys-load178,6153
(defmexpr tloadtload184,6314
(defmexpr qloadqload203,7288
(defmexpr organizeorganize230,8671
(defmexpr tlisttlist234,8860
(defmexpr leditledit240,9056
(defun ledit ledit247,9385
(defun tps-filetype tps-filetype254,9596
(defmexpr filetypefiletype259,9760
(defmexpr tps3-savetps3-save268,9990
(defun tlist tlist274,10162
(defun load-slow load-slow279,10302
(defmexpr load-slowload-slow313,11800
(defflag test-theoremstest-theorems319,11941
(defflag test-modifytest-modify343,13099
(defmode quietquiet356,13671
(defmexpr test-inittest-init369,14112
(def-modes-gwffs EMPTYGOODMODESEMPTYGOODMODES402,15554
(defflag GOODMODESGOODMODES406,15673
(defun test-init test-init417,16130
(defmexpr tps-testtps-test495,19667
(defun tps-test tps-test567,23949
(defvar *dont-ask* *dont-ask*595,25871
(defun tps-test-newcore tps-test-newcore597,25896
(defun tps-test-real tps-test-real669,29124
(defun tps-test-real2 tps-test-real2852,37692
(defmexpr tps-test2tps-test21013,44649
(defun tps-test2 tps-test21031,45734
(defun test-partial test-partial1114,49427
(defun mate-partial mate-partial1144,50631
(defun memory-status memory-status1165,51327
(defmexpr setup-online-accesssetup-online-access1171,51522
(defun setup-online-access setup-online-access1179,51836
(defun modify-online-access modify-online-access1204,52666
(defun modify-online-access-1 modify-online-access-11220,53391

master-tactic.lisp,1172
(deffile master-tacticmaster-tactic14,668
(deftactic monstro-tacmonstro-tac27,1105
(deftactic go2-tacgo2-tac61,1809
(deftactic prop-intro-rules-tacprop-intro-rules-tac90,2362
(deftactic prop-elim-rules-tacprop-elim-rules-tac102,2556
(deftactic elim-defns-tacelim-defns-tac112,2768
(deftactic sub=-tacsub=-tac118,2846
(deftactic indirect-exists-pline-tacindirect-exists-pline-tac126,2948
(deftactic indirect-disj-pline-tacindirect-disj-pline-tac167,4349
(defflag ui-herbrand-limitui-herbrand-limit213,5786
(deftactic ui-herbrand-tacui-herbrand-tac221,6015
(defun get-fns-of-type get-fns-of-type336,9979
(defun make-possible-terms make-possible-terms361,10858
(defun make-terms-of-type make-terms-of-type372,11172
(defun make-terms-of-type-aux make-terms-of-type-aux379,11311
(defun make-terms-of-type make-terms-of-type389,11603
(defun make-terms-of-type-fn make-terms-of-type-fn392,11693
(defun make-terms-of-type-term make-terms-of-type-term397,11849
(defun get-subterms-of-type get-subterms-of-type406,12133
(defmexpr go2go2420,12544
(defun go2 go2432,12941
(defmexpr monstromonstro447,13294
(defun monstro monstro459,13698

match-macros.lisp,265
(deffile match-macrosmatch-macros20,682
(defmacro wffset wffset27,833
(defmacro wffeval wffeval30,913
(defflag default-wffeqdefault-wffeq33,983
(defmode rulesrules40,1144
(defmacro same-match-p same-match-p47,1311
(defmacro mismatch% mismatch%55,1557

match-wffs.lisp,906
(deffile match-wffsmatch-wffs23,816
(defun getsubstpair getsubstpair30,1014
(defun princsubstpair princsubstpair36,1227
(defwffop matchmatch43,1382
(defun match match53,1669
(defun match-bind match-bind59,1813
(defun meta-var-match-bind meta-var-match-bind81,2582
(defun meta-bdvar-match-bind meta-bdvar-match-bind91,2959
(defun meta-label-match-bind meta-label-match-bind105,3531
(defun same-const-p same-const-p115,3910
(defun msubst msubst130,4390
(defwffrec meta-subst meta-subst147,4933
(defun meta-subst meta-subst149,4978
(defwffrec meta-subst1 meta-subst1159,5312
(defun meta-subst1 meta-subst1161,5358
(defun meta-subst-meta-var meta-subst-meta-var179,5988
(defun meta-subst-meta-bd meta-subst-meta-bd188,6281
(defun meta-label-subst meta-label-subst204,7009
(defun meta-subst-if-wff meta-subst-if-wff215,7354
(defun meta-label-eval meta-label-eval226,7762

mate-menus.lisp,3719
(deffile mate-menusmate-menus18,690
(defmenuitem MATE0MATE025,821
(defmenu MATEMATE33,951
(defmenuitem ETREE-INFOETREE-INFO39,1040
(defmenuitem STATSSTATS46,1162
(defmenuitem EXPUNGEEXPUNGE53,1273
(defmenuitem EXPUNGE-OLDEXPUNGE-OLD60,1390
(defmenu SCRIBE-RECORDSCRIBE-RECORD67,1519
(defmenuitem O2O273,1622
(defmenuitem REM2REM280,1731
(defmenuitem LEAVE4LEAVE487,1846
(defmenu MATE-PRINTINGMATE-PRINTING94,1960
(defmenuitem ETDETD100,2067
(defmenuitem ETPETP107,2181
(defmenuitem P2P2114,2295
(defmenuitem PDEEPPDEEP121,2404
(defmenuitem PP2PP2128,2524
(defmenuitem PPDEEPPPDEEP135,2636
(defmenuitem PPFPPF142,2759
(defmenuitem PSHPSH149,2873
(defmenuitem PTREEPTREE156,2987
(defmenuitem PTREE*PTREE*163,3108
(defmenuitem PTREE-FILEPTREE-FILE170,3232
(defmenuitem SHOW-OPTION-TREESHOW-OPTION-TREE177,3368
(defmenu EXP-TREE-OPSEXP-TREE-OPS184,3522
(defmenuitem DPDP190,3627
(defmenuitem DP*DP*197,3737
(defmenuitem DP=DP=204,3850
(defmenuitem DPTREEDPTREE211,3963
(defmenuitem DUP-ALLDUP-ALL218,4085
(defmenuitem DUP-OUTERDUP-OUTER225,4210
(defmenuitem DUP-VARDUP-VAR232,4341
(defmenuitem EXPEXP239,4466
(defmenuitem MOD-STATUSMOD-STATUS246,4579
(defmenuitem NAME-PRIM2NAME-PRIM2253,4714
(defmenuitem PRIM-ALLPRIM-ALL260,4847
(defmenuitem PRIM-OUTERPRIM-OUTER267,4976
(defmenuitem PRIM-SINGLEPRIM-SINGLE274,5111
(defmenuitem PRIM-SUBPRIM-SUB281,5249
(defmenuitem MS98-DUPMS98-DUP288,5378
(defmenuitem MS98-PRIMMS98-PRIM295,5507
(defmenuitem RESTORE-ETREERESTORE-ETREE302,5639
(defmenuitem SAVE-ETREESAVE-ETREE309,5783
(defmenuitem SELSEL316,5918
(defmenuitem SET-SEARCH-TREESET-SEARCH-TREE323,6032
(defmenuitem SUB2SUB2330,6182
(defmenuitem SUB-ETREESUB-ETREE337,6297
(defmenuitem TERMSTERMS344,6429
(defmenuitem APPLY-SUBSTSAPPLY-SUBSTS351,6549
(defmenuitem MERGE-TREEMERGE-TREE358,6690
(defmenuitem ADD-EXT-LEMMASADD-EXT-LEMMAS365,6825
(defmenu MATING-SEARCHMATING-SEARCH372,6972
(defmenuitem GO23GO23378,7079
(defmenuitem NOOP2NOOP2385,7192
(defmenuitem UNIFYUNIFY392,7310
(defmenuitem ADD-CONNADD-CONN399,7430
(defmenuitem ADD-CONN*ADD-CONN*406,7559
(defmenuitem INIT-MATINGINIT-MATING413,7691
(defmenuitem PROP-MSEARCHPROP-MSEARCH420,7829
(defmenuitem MINIMAL-PMINIMAL-P427,7970
(defmenuitem COMPLETE-PCOMPLETE-P434,8102
(defmenuitem MS88MS88441,8238
(defmenuitem MS88-SUBMS88-SUB448,8356
(defmenuitem MS89MS89455,8486
(defmenuitem EXPAND-ETREEEXPAND-ETREE462,8604
(defmenuitem MS90-3MS90-3469,8746
(defmenuitem MS90-9MS90-9476,8870
(defmenuitem MS91-6MS91-6483,8994
(defmenuitem MS91-7MS91-7490,9118
(defmenuitem MS92-9MS92-9497,9242
(defmenuitem MS93-1MS93-1504,9366
(defmenuitem MS98-1MS98-1511,9490
(defmenuitem REM-CONNREM-CONN518,9614
(defmenuitem REM-CONN*REM-CONN*525,9744
(defmenuitem REM-LAST-CONNREM-LAST-CONN532,9877
(defmenuitem DEL-DUP-CONNSDEL-DUP-CONNS539,10022
(defmenuitem SHOW-MATINGSHOW-MATING546,10167
(defmenuitem SHOW-SUBSTSSHOW-SUBSTS553,10306
(defmenu JFORMSJFORMS560,10445
(defmenuitem CJFORM2CJFORM2566,10538
(defmenuitem CW2CW2573,10655
(defmenuitem CWDCWD580,10760
(defmenuitem CWSCWS587,10867
(defmenuitem NUM-HPATHS2NUM-HPATHS2594,10974
(defmenuitem NUM-VPATHS2NUM-VPATHS2601,11103
(defmenuitem VP2VP2608,11232
(defmenuitem VPD2VPD2615,11337
(defmenuitem VPETREEVPETREE622,11445
(defmenuitem VPT2VPT2629,11565
(defmenu MOVINGMOVING636,11674
(defmenuitem |0||0|642,11767
(defmenuitem D2D2649,11887
(defmenuitem FBFB656,11989
(defmenuitem FIFI663,12093
(defmenuitem GOTOGOTO670,12197
(defmenuitem LL677,12307
(defmenuitem RR684,12408
(defmenuitem UPUP691,12509
(defmenuitem ^^698,12613

mating-aux.lisp,1374
(deffile mating-auxmating-aux14,630
(defun init-mating init-mating19,763
(defun insert-in-cgraph insert-in-cgraph33,1215
(defun subsumed-clist-p subsumed-clist-p48,1898
(defun subsumed-p subsumed-p56,2215
(defun find-active-mating find-active-mating62,2432
(defun print-connection print-connection81,3249
(defun print-clist print-clist85,3443
(defun insert-conn-in-utree insert-conn-in-utree95,3684
(defun insert-conn-in-utree-rec insert-conn-in-utree-rec102,3945
(defun find-all-connections-in-utree find-all-connections-in-utree121,4703
(defun locate-connection-in-utree locate-connection-in-utree127,4888
(defun remove-conn-from-utree remove-conn-from-utree132,5119
(defun first-order-problem-p first-order-problem-p144,5696
(defun rigidnode-p rigidnode-p149,5896
(defun find-all-nodes-in-clist find-all-nodes-in-clist154,6023
(defun initialize-ms-after-dup initialize-ms-after-dup164,6374
(defun find-maximal-clists find-maximal-clists175,6808
(defflag primsub-var-selectprimsub-var-select186,7136
(defun apply-prim-subst-for-var apply-prim-subst-for-var200,7655
(defun occurs-on-path-p occurs-on-path-p211,8144
(defun modify-utree modify-utree216,8384
(defun find-substs-for-mating find-substs-for-mating234,9033
(defflag remove-leibnizremove-leibniz245,9404
(defflag merge-minimize-matingmerge-minimize-mating253,9739

mating-dir.lisp,457
(deffile mating-dirmating-dir13,605
(defvar *doing-prenex* *doing-prenex*20,864
(defun initialize-mating-search initialize-mating-search22,893
(defun ms-director ms-director39,1491
(defun ms-propositional ms-propositional45,1704
(defun ms-propositional-real ms-propositional-real50,1855
(defun ms ms104,3927
(defun ms-real ms-real109,4125
(defun handle-user-interrupt handle-user-interrupt477,18478
(defun quasi-tps1 quasi-tps1543,20875

mating-events.lisp,1485
(deffile mating-eventsmating-events16,647
(defevent added-connadded-conn22,788
(defun signal-added-conn signal-added-conn28,967
(defevent removed-connremoved-conn42,1478
(defun signal-removed-conn signal-removed-conn48,1665
(defevent dupedupe62,2187
(defun signal-dupe signal-dupe69,2358
(defevent considered-connconsidered-conn82,2896
(defun signal-considered-conn signal-considered-conn88,3078
(defevent dupe-vardupe-var96,3353
(defun signal-dupe-var signal-dupe-var102,3518
(defevent primsubprimsub114,4025
(defun signal-primsub signal-primsub121,4224
(defevent mate-subsumed-testmate-subsumed-test136,4810
(defun signal-mate-subsumed-test signal-mate-subsumed-test143,5002
(defevent mate-subsumed-truemate-subsumed-true154,5447
(defun signal-mate-subsumed-true signal-mate-subsumed-true161,5650
(defevent unif-subsumed-testunif-subsumed-test172,6137
(defun signal-unif-subsumed-test signal-unif-subsumed-test179,6359
(defevent unif-subsumed-trueunif-subsumed-true190,6828
(defun signal-unif-subsumed-true signal-unif-subsumed-true197,7058
(defevent start-timestart-time208,7495
(defun signal-start-time signal-start-time215,7720
(defevent stop-timestop-time220,7868
(defun signal-stop-time signal-stop-time227,8096
(defevent mating-changedmating-changed235,8423
(defun signal-mating-changed signal-mating-changed242,8607
(defevent incomp-matingincomp-mating257,9118
(defun signal-incomp-mating signal-incomp-mating263,9296

mating.lisp,244
(deffile matingmating14,630
(defun store-incomp-clist store-incomp-clist33,1262
(defun add-connection add-connection50,1887
(defun remove-last-connection remove-last-connection57,2148
(defun remove-connection remove-connection65,2484

mating-macros.lisp,465
(deffile mating-macrosmating-macros17,671
(defmacro max-cgraph-counter max-cgraph-counter25,814
(defmacro bktrack-limit bktrack-limit28,894
(defmacro connections-array connections-array31,964
(defmacro incomp-clists-wrt-etree incomp-clists-wrt-etree34,1041
(defmacro mating-list mating-list37,1131
(defmacro incomp-clists incomp-clists40,1197
(defmacro cgraph cgraph43,1266
(defmacro max-incomp-clists-wrt-etree max-incomp-clists-wrt-etree46,1321

mating-mateops.lisp,1784
(deffile mating-mateopsmating-mateops17,623
(defmateop init-matinginit-mating22,737
(defwffop init-matinginit-mating26,819
(defun start-new-mating start-new-mating34,1031
(defmateop add-connadd-conn38,1134
(defmateop add-conn*add-conn*42,1205
(defmateop rem-conn*rem-conn*46,1278
(defvar ms-jform ms-jform50,1351
(defwffop add-conn*add-conn*52,1374
(defwffop rem-conn*rem-conn*59,1513
(defun add-conn* add-conn*66,1652
(defun rem-conn* rem-conn*77,1996
(defun complete-leaf-name complete-leaf-name89,2382
(defwffop add-conn add-conn95,2585
(defun add-conn add-conn124,3745
(defmateop rem-connrem-conn170,5482
(defwffop rem-conn rem-conn174,5553
(defun rem-conn rem-conn196,6368
(defmateop rem-last-connrem-last-conn209,6995
(defwffop rem-last-conn rem-last-conn214,7077
(defun rem-last-conn rem-last-conn222,7311
(defmateop complete-pcomplete-p231,7700
(defwffop complete-pcomplete-p235,7775
(defun complete-p complete-p244,8059
(defmateop show-matingshow-mating258,8569
(defwffop show-matingshow-mating262,8646
(defun show-mating show-mating269,8849
(defmateop apply-substsapply-substs277,9136
(defwffop apply-substs-msapply-substs-ms281,9218
(defun apply-substs-ms apply-substs-ms289,9468
(defmateop show-substsshow-substs297,9731
(defwffop show-substsshow-substs301,9808
(defun show-substs show-substs309,10044
(defmateop statsstats317,10273
(defwffop show-mating-statsshow-mating-stats321,10350
(defun show-mating-stats show-mating-stats331,10623
(defmateop del-dup-connsdel-dup-conns344,11194
(defwffop delete-duplicate-connsdelete-duplicate-conns348,11284
(defun delete-duplicate-conns delete-duplicate-conns356,11552
(defmexpr daterecdaterec367,11957
(defmexpr display-timedisplay-time390,12776

mating-merge2.lisp,809
(deffile mating-merge2mating-merge216,674
(defun lambda-rewrite-node-p lambda-rewrite-node-p26,1001
(defun raise-lambda-nodes-aux1 raise-lambda-nodes-aux131,1117
(defun raise-lambda-nodes-neg raise-lambda-nodes-neg58,1994
(defun raise-lambda-nodes-ab raise-lambda-nodes-ab78,2622
(defun raise-lambda-nodes-equiv raise-lambda-nodes-equiv89,2973
(defun raise-lambda-nodes-skol raise-lambda-nodes-skol100,3380
(defun raise-lambda-nodes raise-lambda-nodes142,4997
(defun raise-lambda-nodes-2 raise-lambda-nodes-2164,5951
(defun raise-lambda-nodes-3 raise-lambda-nodes-3183,6682
(defun raise-lambda-nodes-1 raise-lambda-nodes-1202,7389
(defun replace-pi-and-sigma-in-wff replace-pi-and-sigma-in-wff293,11355
(defun replace-pi-and-sigma-in-wff-rec replace-pi-and-sigma-in-wff-rec296,11447

mating-merge-eq.lisp,2713
(deffile mating-merge-eqmating-merge-eq15,676
(defun deepen-negated-leaves deepen-negated-leaves21,836
(defun make-left-side-refl make-left-side-refl39,1529
(defun make-sub-eq-wff make-sub-eq-wff41,1563
(defun remove-leibniz-nodes remove-leibniz-nodes51,1945
(defun nonleaf-mating-below nonleaf-mating-below78,3255
(defun remove-leibniz remove-leibniz91,3664
(defun cleanup-leibniz-expansions cleanup-leibniz-expansions259,12687
(defun check-shallow-formulas check-shallow-formulas315,15417
(defun strip-sk-terms strip-sk-terms363,18097
(defun apply-thm-146 apply-thm-146370,18335
(defun replace-with replace-with399,19594
(defun pre-process-nonleaf-leibniz-connections pre-process-nonleaf-leibniz-connections417,20295
(defun reduce-rewrites reduce-rewrites439,21226
(defun remove-double-negations-merge remove-double-negations-merge466,22323
(defun remove-spurious-connections remove-spurious-connections488,23090
(defun prettify-etree prettify-etree550,25316
(defun remove-unnecessary-ab-rews remove-unnecessary-ab-rews602,27928
(defun unnecessary-ab-rew-p unnecessary-ab-rew-p613,28305
(defun prettify-process-vars-in-etree prettify-process-vars-in-etree619,28506
(defun prettify-process-vars-in-etree-rec prettify-process-vars-in-etree-rec626,28730
(defun prettify-process-top-shallow prettify-process-top-shallow670,30700
(defun prettify-process-wff prettify-process-wff690,31596
(defun list-up-to list-up-to726,33286
(defun prettify-free-rename prettify-free-rename734,33436
(defun prettify-bound-rename prettify-bound-rename741,33693
(defun prettify-free-legal-p prettify-free-legal-p747,33914
(defun prettify-bound-legal-p prettify-bound-legal-p756,34269
(defun prettify-free-bound-legal-p prettify-free-bound-legal-p766,34721
(defun prettify-bound-bound-legal-p prettify-bound-bound-legal-p772,34999
(defun prettify-identify-free-bound prettify-identify-free-bound786,35857
(defun prettify-identify-bound-bound prettify-identify-bound-bound808,36670
(defun which-kind-of-var which-kind-of-var831,37680
(defun pretty-var-p pretty-var-p847,38072
(defun get-best-alt-name get-best-alt-name851,38187
(defun get-best-alt-free-name get-best-alt-free-name881,39190
(defun get-best-alt-bound-name get-best-alt-bound-name884,39278
(defun rename-all-vars-in-etree rename-all-vars-in-etree889,39435
(defun scope-problem-p scope-problem-p916,40958
(defun rename-all-vars-in-wff rename-all-vars-in-wff928,41538
(defun cleanup-etree cleanup-etree973,43191
(defun cleanup-all-expansions cleanup-all-expansions984,43531
(defun cleanup-expansion cleanup-expansion1072,46640
(defun cleanup-rewrite-node cleanup-rewrite-node1131,49411

mating-merge.lisp,2890
(deffile mating-mergemating-merge16,674
(defmateop merge-treemerge-tree21,810
(defun merge-tree merge-tree37,1431
(defvar predicate-var predicate-var43,1626
(defvar proposition-var proposition-var44,1676
(defvar relation-var relation-var45,1720
(defvar function-var function-var46,1785
(defvar individual-var individual-var47,1842
(defun randomvars randomvars49,1894
(defun randomlist randomlist54,2070
(defvar merge-debug merge-debug65,2403
(defun merge-display merge-display69,2560
(defun merge-option merge-option76,2781
(defun merge-tree-real merge-tree-real80,2860
(defun wffeq-ab1-lazy2 wffeq-ab1-lazy2216,9245
(defun fiddle-with-hrl fiddle-with-hrl237,10141
(defun fiddle-with-hrl2 fiddle-with-hrl2244,10413
(defun shallow-merge shallow-merge250,10592
(defun treemerge treemerge469,17902
(defun find-identical-terms find-identical-terms501,19196
(defun merge-all merge-all540,20795
(defun find-ident-pair find-ident-pair586,22514
(defun make-subst-list make-subst-list603,23155
(defun ab-sub-list ab-sub-list629,24054
(defun unneeded-node-p unneeded-node-p652,24806
(defun prune-unmated-branches prune-unmated-branches669,25402
(defun print-nodes-between print-nodes-between769,30416
(defun rewrite-nodes-between rewrite-nodes-between773,30560
(defun fix-shallow-chain fix-shallow-chain780,30748
(defun replace-dual-gensym replace-dual-gensym785,30961
(defun string-rename string-rename794,31254
(defun ancestor-rewrite ancestor-rewrite799,31459
(defun get-junct get-junct806,31650
(defun modify-dual-rewrites modify-dual-rewrites812,31796
(defun prune-unmated-rewrites prune-unmated-rewrites873,34005
(defun remove-rew-connections remove-rew-connections974,39722
(defun replace-non-leaf-leaves replace-non-leaf-leaves985,40134
(defun make-mating-lists make-mating-lists1004,40736
(defun prune-status-0 prune-status-01028,41508
(defun etr-merge etr-merge1048,42093
(defun strip-exp-vars-from-etree strip-exp-vars-from-etree1072,43188
(defun strip-sk-terms-from-etree strip-sk-terms-from-etree1078,43434
(defun subst-skol-terms subst-skol-terms1105,44382
(defun subst-skol-terms-main subst-skol-terms-main1117,44748
(defun subst-vars-for-params subst-vars-for-params1147,46265
(defun free-for-exp free-for-exp1205,48240
(defun simul-free-for simul-free-for1240,49443
(defun insert-rewrite-ab-node insert-rewrite-ab-node1245,49571
(defun update-statuses update-statuses1268,50355
(defun get-possible-newabbs get-possible-newabbs1274,50529
(defun standing-disjunctively standing-disjunctively1296,51602
(defun lowest-common-ancestor lowest-common-ancestor1301,51870
(defun lambda-bind-free-vars lambda-bind-free-vars1310,52260
(defun discard-subfms discard-subfms1315,52413
(defun more-quantifiers more-quantifiers1326,52777
(defun set-all-parents set-all-parents1334,53119

mating-move.lisp,746
(deffile mating-movemating-move20,715
(defmateop \0\028,884
(defmateop ^^35,1098
(defun move-to-root move-to-root45,1321
(defmateop ll50,1415
(defun move-to-left move-to-left58,1602
(defmateop rr65,1753
(defun move-to-right move-to-right72,1941
(defmateop fifi78,2095
(defwffop find-infix-etreefind-infix-etree86,2284
(defun find-infix-etree find-infix-etree93,2436
(defmateop fbfb99,2575
(defun find-binder-etree find-binder-etree108,2771
(defun move-to-successor move-to-successor116,2980
(defmateop upup126,3335
(defun up-node up-node134,3522
(defmateop dd138,3627
(defun down-node down-node147,3863
(defmateop gotogoto151,3980
(defwffop goto-node goto-node157,4121
(defun goto-node goto-node164,4264

mating-paths.lisp,313
(deffile mating-pathsmating-paths12,589
(defun find-next-openpath find-next-openpath17,697
(defun complete-mspath complete-mspath27,1100
(defun find-cheapest-mspath find-cheapest-mspath35,1436
(defun find-alt-mspath find-alt-mspath61,2467
(defun complete-alt-mspath-and complete-alt-mspath-and84,3402

mating-prop.lisp,1276
(deffile mating-propmating-prop14,629
(defun find-open-msprop-push-path find-open-msprop-push-path19,752
(defun find-cheapest-msprop-push-path find-cheapest-msprop-push-path30,1131
(defun find-alt-msprop-push-path find-alt-msprop-push-path61,2353
(defun complete-alt-msprop-push-path-and complete-alt-msprop-push-path-and83,3175
(defun complete-alt-msprop-push-path-or complete-alt-msprop-push-path-or96,3641
(defun find-open-msprop-pushnew-path find-open-msprop-pushnew-path104,3925
(defun find-cheapest-msprop-pushnew-path find-cheapest-msprop-pushnew-path115,4313
(defun find-alt-msprop-pushnew-path find-alt-msprop-pushnew-path146,5584
(defun complete-alt-msprop-pushnew-path-and complete-alt-msprop-pushnew-path-and169,6426
(defun complete-alt-msprop-pushnew-path-or complete-alt-msprop-pushnew-path-or182,6901
(defun find-open-msprop-hashtable-path find-open-msprop-hashtable-path190,7191
(defun find-cheapest-msprop-hashtable-path find-cheapest-msprop-hashtable-path201,7614
(defun find-alt-msprop-hashtable-path find-alt-msprop-hashtable-path236,9081
(defun complete-alt-msprop-hashtable-path-and complete-alt-msprop-hashtable-path-and259,9955
(defun complete-alt-msprop-hashtable-path-or complete-alt-msprop-hashtable-path-or272,10456

mating-sub.lisp,443
(deffile mating-submating-sub13,604
(defmateop ms88ms8820,750
(defun ms88-real ms88-real30,1204
(defmateop ms88-subms88-sub34,1285
(defwffop ms88-subms88-sub39,1357
(defun ms88-sub ms88-sub48,1612
(defvar num-of-splitting num-of-splitting85,3043
(defun ms-top ms-top87,3072
(defun reduce-subst-stack reduce-subst-stack149,5383
(defun compose-matings compose-matings170,5988
(defun ms88-controller ms88-controller234,8901

mating-top.lisp,3077
(deffile mating-topmating-top13,604
(deftoplevel mate-topmate-top20,758
(defcategory mateopmateop37,1278
(defflag printmateflagprintmateflag69,2061
(defflag printmateflag-slidesprintmateflag-slides77,2273
(defflag printmatefileprintmatefile86,2597
(defmode scribe-matewffscribe-matewff94,2858
(defflag printmateopsprintmateops111,3227
(defvar mate-written-p mate-written-p122,3504
(defvar mate-level mate-level127,3613
(defvar mate-command-ctree mate-command-ctree131,3714
(defun initialize-mate-ctree initialize-mate-ctree133,3747
(defvar last-eproof last-eproof143,4019
(defvar *last-gwff-name* *last-gwff-name*145,4045
(defvar *eproof-list* *eproof-list*147,4076
(defun get-gwff0-or-eproof get-gwff0-or-eproof149,4104
(defmexpr eprooflisteprooflist166,4730
(defun eprooflist eprooflist173,4960
(defmexpr set-eproofset-eproof189,5431
(defun set-eproof set-eproof201,5703
(defmexpr matemate211,6001
(defvar nodestack nodestack229,6587
(defun mate-wff-prefix mate-wff-prefix231,6611
(defun mate-wff mate-wff265,8216
(defun strong-mate-defaults strong-mate-defaults284,8905
(defgwff-type current-eproof-typecurrent-eproof-type294,9252
(defun current-eproof-ckfn current-eproof-ckfn299,9435
(defun current-eproof-getfn current-eproof-getfn302,9497
(defgwff-type last-eproof-typelast-eproof-type307,9693
(defun last-eproof-ckfn last-eproof-ckfn312,9875
(defun last-eproof-getfn last-eproof-getfn315,9931
(defun matetop matetop326,10213
(defun mate-top-prompt mate-top-prompt345,10806
(defvar *mate-temp* *mate-temp*357,11238
(defun mateop-interpreter mateop-interpreter359,11264
(defun mate-command-interpreter mate-command-interpreter414,12909
(defun mate-print-* mate-print-*447,14107
(defmateop oo461,14461
(defun invert-printmateflag invert-printmateflag466,14668
(defmateop remrem469,14744
(defwffop remark-printmatefileremark-printmatefile474,14873
(defmateop leaveleave483,15039
(defmateop noopnoop491,15260
(defmateop gogo495,15352
(defflag default-msdefault-ms500,15500
(defflag default-expanddefault-expand552,18740
(definfo otreeotree586,20503
(definfo osetoset590,20630
(defflag default-matedefault-mate594,20749
(definfo npfdnpfd627,22520
(definfo ms98-1ms98-1631,22633
(definfo npfd-1 npfd-1635,22736
(definfo pfd pfd640,22874
(definfo mtreemtree644,22986
(definfo mtree-1mtree-1648,23082
(definfo mtree-2mtree-2652,23180
(defun update-defms update-defms656,23277
(defun update-otherdefs update-otherdefs677,23707
(defun matingsearch-controller matingsearch-controller694,24170
(defflag use-fast-prop-searchuse-fast-prop-search704,24544
(defvar *fps-succeeded* *fps-succeeded*713,24861
(defun matingsearch-controller-real matingsearch-controller-real717,25031
(defun negate-last-move negate-last-move774,27613
(defun exit-ms exit-ms782,27829
(defun abort-ms abort-ms799,28374
(defun remark-printmatefile remark-printmatefile804,28455
(defun mate-opdecode mate-opdecode820,29004
(defun get-mate-argnames get-mate-argnames852,30217

mating-trans.lisp,530
(deffile mating-transmating-trans15,618
(defun old-spanning-clist-p old-spanning-clist-p19,732
(defun spanning-clist-p spanning-clist-p27,1040
(defun mating-subset mating-subset38,1465
(defun find-cheapest-spanning-clist-path find-cheapest-spanning-clist-path52,2095
(defun find-alt-spanning-clist-path find-alt-spanning-clist-path77,3099
(defun complete-alt-spanning-clist-path-and complete-alt-spanning-clist-path-and99,3936
(defun complete-alt-spanning-clist-path-or complete-alt-spanning-clist-path-or111,4388

menus.lisp,35956
(deffile menusmenus13,609
(defmenu mbarmbar37,1608
(defmenu mainmain43,1787
(defmenu flagsflags49,1917
(defmenu rulesrules55,2030
(defmenu misc-commandsmisc-commands61,2143
(defmenu top-levelstop-levels67,2279
(defmenuitem PROVEPROVE73,2406
(defmenuitem EXERCISEEXERCISE82,2545
(defmenu SET-MODESET-MODE90,2678
(defmenuitem LIBRARY-MODELIBRARY-MODE96,2771
(defmenuitem MS98-FO-MODEMS98-FO-MODE104,2902
(defmenuitem MS98-HO-MODEMS98-HO-MODE112,3059
(defmenuitem EASY-SV-MODEEASY-SV-MODE120,3216
(defmenuitem MAIN-DIYMAIN-DIY128,3373
(defmenuitem PALLPALL136,3512
(defmenuitem RECONSIDER-PROOFRECONSIDER-PROOF144,3647
(defmenuitem RESTORE-PROOFRESTORE-PROOF152,3790
(defmenuitem HELPHELP160,3934
(defmenuitem INTERRUPTINTERRUPT169,4068
(defmenuitem HISTORYHISTORY178,4219
(defmenuitem EXITEXIT186,4349
(defmenu SEARCH-FLAGSSEARCH-FLAGS195,4485
(defmenu SET-SUBSTITUTIONSSET-SUBSTITUTIONS201,4587
(defmenuitem BAD-VAR-CONNECTED-PRUNEBAD-VAR-CONNECTED-PRUNE207,4706
(defmenuitem DELAY-SETVARSDELAY-SETVARS214,4884
(defmenuitem INCLUDE-COINDUCTION-PRINCIPLEINCLUDE-COINDUCTION-PRINCIPLE221,5032
(defmenuitem INCLUDE-INDUCTION-PRINCIPLEINCLUDE-INDUCTION-PRINCIPLE228,5228
(defmenuitem MAX-CONSTRAINT-SIZEMAX-CONSTRAINT-SIZE235,5418
(defmenuitem MAX-NUM-CONSTRAINTSMAX-NUM-CONSTRAINTS242,5584
(defmenuitem PRIMSUB-VAR-SELECTPRIMSUB-VAR-SELECT249,5750
(defmenuitem MAX-PRIM-DEPTHMAX-PRIM-DEPTH256,5913
(defmenuitem MAX-PRIM-LITSMAX-PRIM-LITS263,6064
(defmenuitem MIN-PRIM-DEPTHMIN-PRIM-DEPTH270,6213
(defmenuitem MIN-PRIM-LITSMIN-PRIM-LITS277,6365
(defmenuitem NEG-PRIM-SUBNEG-PRIM-SUB284,6514
(defmenuitem PR00-ALLOW-SUBNODE-CONNSPR00-ALLOW-SUBNODE-CONNS291,6660
(defmenuitem PR00-MAX-SUBSTS-VARPR00-MAX-SUBSTS-VAR298,6842
(defmenuitem PR00-NUM-ITERATIONSPR00-NUM-ITERATIONS305,7009
(defmenuitem PR00-REQUIRE-ARG-DEPSPR00-REQUIRE-ARG-DEPS312,7176
(defmenuitem PR97C-MAX-ABBREVSPR97C-MAX-ABBREVS319,7349
(defmenuitem PR97C-PRENEXPR97C-PRENEX326,7510
(defmenuitem PRIM-BDTYPESPRIM-BDTYPES333,7656
(defmenuitem PRIM-BDTYPES-AUTOPRIM-BDTYPES-AUTO340,7802
(defmenuitem PRIM-PREFIXPRIM-PREFIX347,7963
(defmenuitem PRIMSUB-METHODPRIMSUB-METHOD354,8106
(defmenuitem WHICH-CONSTRAINTSWHICH-CONSTRAINTS361,8258
(defmenu EQUALITY-FLAGSEQUALITY-FLAGS368,8419
(defmenuitem LAMBDA-CONVLAMBDA-CONV374,8532
(defmenuitem REWRITE-DEFNSREWRITE-DEFNS382,8682
(defmenuitem REWRITE-EQUALITIESREWRITE-EQUALITIES389,8827
(defmenuitem REWRITE-EQUIVSREWRITE-EQUIVS397,8998
(defmenu JFORM-FLAGSJFORM-FLAGS405,9157
(defmenuitem ALLOW-NONLEAF-CONNSALLOW-NONLEAF-CONNS411,9264
(defmenuitem DISSOLVEDISSOLVE418,9424
(defmenuitem MATE-UP-TO-NNFMATE-UP-TO-NNF425,9551
(defmenuitem PLACEMENT-COMPONENTSPLACEMENT-COMPONENTS432,9696
(defmenuitem PRINT-LIT-NAMEPRINT-LIT-NAME439,9859
(defmenuitem PRINTVPDFLAGPRINTVPDFLAG446,10004
(defmenuitem TEXFORMATTEXFORMAT453,10143
(defmenuitem VPD-BRIEFVPD-BRIEF460,10273
(defmenuitem VPD-FILENAMEVPD-FILENAME467,10403
(defmenuitem VPD-PTYPESVPD-PTYPES474,10543
(defmenuitem VPD-STYLEVPD-STYLE481,10677
(defmenuitem VPD-VPFPAGEVPD-VPFPAGE488,10808
(defmenuitem VPFORM-LABELSVPFORM-LABELS495,10945
(defmenuitem VPFORM-TEX-MAGNIFICATIONVPFORM-TEX-MAGNIFICATION502,11088
(defmenuitem VPFORM-TEX-NESTVPFORM-TEX-NEST509,11264
(defmenuitem VPFORM-TEX-PREAMBLEVPFORM-TEX-PREAMBLE516,11413
(defmenuitem VPW-HEIGHTVPW-HEIGHT523,11574
(defmenuitem VPW-WIDTHVPW-WIDTH530,11708
(defmenu MATING-SEARCH-FLAGSMATING-SEARCH-FLAGS537,11839
(defmenuitem ASSERT-LEMMASASSERT-LEMMAS543,11962
(defmenuitem DEFAULT-EXPANDDEFAULT-EXPAND550,12112
(defmenuitem DEFAULT-MATEDEFAULT-MATE557,12265
(defmenuitem DEFAULT-MSDEFAULT-MS564,12412
(defmenuitem INTERRUPT-ENABLEINTERRUPT-ENABLE571,12553
(defmenuitem MATING-VERBOSEMATING-VERBOSE578,12712
(defmenuitem MONITORFLAGMONITORFLAG585,12865
(defmenuitem NEW-MATING-AFTER-DUPNEW-MATING-AFTER-DUP592,13009
(defmenuitem QUERY-USERQUERY-USER599,13180
(defmenuitem REC-MS-FILEREC-MS-FILE606,13322
(defmenuitem REC-MS-FILENAMEREC-MS-FILENAME613,13467
(defmenuitem USE-DIYUSE-DIY620,13624
(defmenuitem USE-EXT-LEMMASUSE-EXT-LEMMAS627,13757
(defmenuitem USE-FAST-PROP-SEARCHUSE-FAST-PROP-SEARCH634,13911
(defmenu EXPANSION-TREE-FLAGSEXPANSION-TREE-FLAGS641,14083
(defmenuitem ADD-TRUTHADD-TRUTH647,14208
(defmenuitem DUPLICATION-STRATEGYDUPLICATION-STRATEGY654,14347
(defmenuitem DUPLICATION-STRATEGY-PFDDUPLICATION-STRATEGY-PFD661,14519
(defmenuitem INITIAL-BKTRACK-LIMITINITIAL-BKTRACK-LIMIT668,14703
(defmenuitem MIN-QUANTIFIER-SCOPEMIN-QUANTIFIER-SCOPE675,14878
(defmenuitem PRINT-DEEPPRINT-DEEP682,15050
(defmenuitem PRINT-NODENAMESPRINT-NODENAMES689,15192
(defmenuitem SHOW-SKOLEMSHOW-SKOLEM696,15349
(defmenuitem SKOLEM-DEFAULTSKOLEM-DEFAULT703,15494
(defmenuitem TRUTHVALUES-HACKTRUTHVALUES-HACK710,15649
(defmenu SEQUENT-CALCULUS-FLAGSSEQUENT-CALCULUS-FLAGS717,15810
(defmenuitem PSEQ-USE-LABELSPSEQ-USE-LABELS723,15939
(defmenu MS98-1-FLAGSMS98-1-FLAGS730,16098
(defmenuitem BREAK-AT-QUANTIFIERSBREAK-AT-QUANTIFIERS736,16207
(defmenuitem FF-DELAYFF-DELAY743,16371
(defmenuitem HPATH-THRESHOLDHPATH-THRESHOLD750,16499
(defmenuitem MAXIMIZE-FIRSTMAXIMIZE-FIRST757,16648
(defmenuitem MEASUREMENTSMEASUREMENTS764,16794
(defmenuitem MS98-BASE-PRIMMS98-BASE-PRIM771,16934
(defmenuitem MS98-DUP-BELOW-PRIMSUBSMS98-DUP-BELOW-PRIMSUBS778,17080
(defmenuitem MS98-DUP-PRIMSUBSMS98-DUP-PRIMSUBS785,17253
(defmenuitem MS98-FIRST-FRAGMENTMS98-FIRST-FRAGMENT792,17408
(defmenuitem MS98-FORCE-H-OMS98-FORCE-H-O799,17570
(defmenuitem MS98-FRAGMENT-PLACEMENTMS98-FRAGMENT-PLACEMENT806,17717
(defmenuitem MS98-INITMS98-INIT813,17891
(defmenuitem MS98-LOW-MEMORYMS98-LOW-MEMORY820,18023
(defmenuitem MS98-MAX-COMPONENTSMS98-MAX-COMPONENTS827,18173
(defmenuitem MS98-MAX-PRIMSMS98-MAX-PRIMS834,18335
(defmenuitem MS98-MEASUREMS98-MEASURE841,18482
(defmenuitem MS98-MERGE-DAGSMS98-MERGE-DAGS848,18623
(defmenuitem MS98-MINIMALITY-CHECKMS98-MINIMALITY-CHECK855,18773
(defmenuitem MS98-NUM-OF-DUPSMS98-NUM-OF-DUPS862,18941
(defmenuitem MS98-PRIMSUB-COUNTMS98-PRIMSUB-COUNT869,19094
(defmenuitem MS98-REW-PRIMSUBSMS98-REW-PRIMSUBS876,19253
(defmenuitem MS98-REWRITE-DEPTHMS98-REWRITE-DEPTH883,19409
(defmenuitem MS98-REWRITE-MODELMS98-REWRITE-MODEL890,19568
(defmenuitem MS98-REWRITE-PRUNEMS98-REWRITE-PRUNE897,19727
(defmenuitem MS98-REWRITE-SIZEMS98-REWRITE-SIZE904,19886
(defmenuitem MS98-REWRITE-UNIFMS98-REWRITE-UNIF911,20042
(defmenuitem MS98-REWRITESMS98-REWRITES918,20198
(defmenuitem MS98-TRACEMS98-TRACE925,20342
(defmenuitem MS98-UNIF-HACKMS98-UNIF-HACK932,20477
(defmenuitem MS98-UNIF-HACK2MS98-UNIF-HACK2939,20624
(defmenuitem MS98-USE-COLORSMS98-USE-COLORS946,20774
(defmenuitem MS98-VALID-PAIRMS98-VALID-PAIR953,20924
(defmenuitem MS98-VARIABLE-PLACEMENTMS98-VARIABLE-PLACEMENT960,21074
(defmenuitem MS98-VERBOSEMS98-VERBOSE967,21248
(defmenu MS91-FLAGSMS91-FLAGS974,21389
(defmenuitem MS91-INTERLEAVEMS91-INTERLEAVE980,21494
(defmenuitem MS91-PREFER-SMALLERMS91-PREFER-SMALLER987,21641
(defmenuitem MS91-TIME-BY-VPATHSMS91-TIME-BY-VPATHS994,21800
(defmenuitem MS91-WEIGHT-LIMIT-RANGEMS91-WEIGHT-LIMIT-RANGE1001,21959
(defmenuitem NEW-OPTION-SET-LIMITNEW-OPTION-SET-LIMIT1008,22130
(defmenuitem OPTIONS-GENERATE-ARGOPTIONS-GENERATE-ARG1015,22292
(defmenuitem OPTIONS-GENERATE-FNOPTIONS-GENERATE-FN1022,22454
(defmenuitem OPTIONS-GENERATE-UPDATEOPTIONS-GENERATE-UPDATE1029,22613
(defmenuitem OPTIONS-VERBOSEOPTIONS-VERBOSE1036,22784
(defmenuitem PENALTY-FOR-EACH-PRIMSUBPENALTY-FOR-EACH-PRIMSUB1043,22932
(defmenuitem PENALTY-FOR-MULTIPLE-PRIMSUBSPENALTY-FOR-MULTIPLE-PRIMSUBS1050,23107
(defmenuitem PENALTY-FOR-MULTIPLE-SUBSPENALTY-FOR-MULTIPLE-SUBS1057,23297
(defmenuitem PENALTY-FOR-ORDINARY-DUPPENALTY-FOR-ORDINARY-DUP1064,23475
(defmenuitem RECONSIDER-FNRECONSIDER-FN1071,23650
(defmenuitem WEIGHT-A-COEFFICIENTWEIGHT-A-COEFFICIENT1078,23792
(defmenuitem WEIGHT-A-FNWEIGHT-A-FN1085,23955
(defmenuitem WEIGHT-B-COEFFICIENTWEIGHT-B-COEFFICIENT1092,24091
(defmenuitem WEIGHT-B-FNWEIGHT-B-FN1099,24254
(defmenuitem WEIGHT-C-COEFFICIENTWEIGHT-C-COEFFICIENT1106,24390
(defmenuitem WEIGHT-C-FNWEIGHT-C-FN1113,24553
(defmenu MS90-3-FLAGSMS90-3-FLAGS1120,24689
(defmenuitem MAX-MATESMAX-MATES1126,24798
(defmenuitem MIN-QUANT-ETREEMIN-QUANT-ETREE1133,24929
(defmenuitem MS90-3-DUP-STRATEGYMS90-3-DUP-STRATEGY1140,25078
(defmenuitem NUM-FRPAIRSNUM-FRPAIRS1147,25239
(defmenuitem PRINT-MATING-COUNTERPRINT-MATING-COUNTER1154,25376
(defmenuitem SHOW-TIMESHOW-TIME1161,25540
(defmenu MS89-FLAGSMS89-FLAGS1168,25671
(defmenuitem MAX-SEARCH-LIMITMAX-SEARCH-LIMIT1174,25776
(defmenuitem RANK-EPROOF-FNRANK-EPROOF-FN1181,25926
(defmenuitem SEARCH-TIME-LIMITSEARCH-TIME-LIMIT1188,26070
(defmenu MS88-FLAGSMS88-FLAGS1195,26223
(defmenuitem ADDED-CONN-ENABLED0ADDED-CONN-ENABLED01201,26328
(defmenuitem CONSIDERED-CONN-ENABLED0CONSIDERED-CONN-ENABLED01208,26485
(defmenuitem DUP-ALLOWEDDUP-ALLOWED1215,26657
(defmenuitem DUPE-ENABLED0DUPE-ENABLED01222,26792
(defmenuitem DUPE-VAR-ENABLED0DUPE-VAR-ENABLED01229,26931
(defmenuitem EXCLUDING-GC-TIMEEXCLUDING-GC-TIME1236,27082
(defmenuitem FIRST-PLACEMENT-MODE-MSFIRST-PLACEMENT-MODE-MS1243,27235
(defmenuitem INCOMP-MATING-ENABLED0INCOMP-MATING-ENABLED01250,27406
(defmenuitem MATE-FFPAIRMATE-FFPAIR1257,27572
(defmenuitem MATE-SUBSUMED-TEST-ENABLED0MATE-SUBSUMED-TEST-ENABLED01264,27708
(defmenuitem MATE-SUBSUMED-TRUE-ENABLED0MATE-SUBSUMED-TRUE-ENABLED01271,27890
(defmenuitem MATING-CHANGED-ENABLED0MATING-CHANGED-ENABLED01278,28072
(defmenuitem MS-INIT-PATHMS-INIT-PATH1285,28242
(defmenuitem MS-SPLITMS-SPLIT1292,28381
(defmenuitem OCCURS-CHECKOCCURS-CHECK1299,28508
(defmenuitem PRIM-QUANTIFIERPRIM-QUANTIFIER1306,28647
(defmenuitem PRIMSUB-ENABLED0PRIMSUB-ENABLED01313,28795
(defmenuitem PROP-STRATEGYPROP-STRATEGY1320,28944
(defmenuitem REMOVED-CONN-ENABLED0REMOVED-CONN-ENABLED01327,29086
(defmenuitem SEARCH-COMPLETE-PATHSSEARCH-COMPLETE-PATHS1334,29250
(defmenuitem START-TIME-ENABLED0START-TIME-ENABLED01341,29416
(defmenuitem STOP-TIME-ENABLED0STOP-TIME-ENABLED01348,29574
(defmenuitem TIMING-NAMEDTIMING-NAMED1355,29729
(defmenuitem UNIF-SUBSUMED-TEST-ENABLED0UNIF-SUBSUMED-TEST-ENABLED01362,29868
(defmenuitem UNIF-SUBSUMED-TRUE-ENABLED0UNIF-SUBSUMED-TRUE-ENABLED01369,30050
(defmenu MATING-TREE-FLAGSMATING-TREE-FLAGS1376,30232
(defmenuitem MT-SUBSUMPTION-CHECKMT-SUBSUMPTION-CHECK1382,30351
(defmenuitem MT94-12-TRIGGERMT94-12-TRIGGER1389,30520
(defmenuitem MTREE-FILTER-DUPSMTREE-FILTER-DUPS1396,30674
(defmenuitem MTREE-STOP-IMMEDIATELYMTREE-STOP-IMMEDIATELY1403,30834
(defmenuitem TAG-CONN-FNTAG-CONN-FN1410,31009
(defmenuitem TAG-MATING-FNTAG-MATING-FN1417,31151
(defmenuitem DEFAULT-OBDEFAULT-OB1424,31299
(defmenuitem MT-DUPS-PER-QUANTMT-DUPS-PER-QUANT1431,31438
(defmenuitem MT-DEFAULT-OB-MATEMT-DEFAULT-OB-MATE1438,31598
(defmenu TEST-SEARCHLISTSTEST-SEARCHLISTS1445,31762
(defmenuitem TEST-EASIER-IF-HIGHTEST-EASIER-IF-HIGH1451,31879
(defmenuitem TEST-EASIER-IF-LOWTEST-EASIER-IF-LOW1458,32044
(defmenuitem TEST-EASIER-IF-NILTEST-EASIER-IF-NIL1465,32206
(defmenuitem TEST-EASIER-IF-TTEST-EASIER-IF-T1472,32368
(defmenuitem TEST-FASTER-IF-HIGHTEST-FASTER-IF-HIGH1479,32524
(defmenuitem TEST-FASTER-IF-LOWTEST-FASTER-IF-LOW1486,32689
(defmenuitem TEST-FASTER-IF-NILTEST-FASTER-IF-NIL1493,32851
(defmenuitem TEST-FASTER-IF-TTEST-FASTER-IF-T1500,33013
(defmenuitem TEST-FIX-UNIF-DEPTHSTEST-FIX-UNIF-DEPTHS1507,33169
(defmenuitem TEST-INCREASE-TIMETEST-INCREASE-TIME1514,33338
(defmenuitem TEST-INITIAL-TIME-LIMITTEST-INITIAL-TIME-LIMIT1521,33501
(defmenuitem TEST-MAX-SEARCH-VALUESTEST-MAX-SEARCH-VALUES1528,33679
(defmenuitem TEST-NEXT-SEARCH-FNTEST-NEXT-SEARCH-FN1535,33854
(defmenuitem TEST-REDUCE-TIMETEST-REDUCE-TIME1542,34020
(defmenuitem TEST-VERBOSETEST-VERBOSE1549,34177
(defmenuitem TESTWIN-HEIGHTTESTWIN-HEIGHT1556,34322
(defmenuitem TESTWIN-WIDTHTESTWIN-WIDTH1563,34473
(defmenu NATURAL-DEDUCTION-FLAGSNATURAL-DEDUCTION-FLAGS1570,34621
(defmenu RULE-P-FLAGSRULE-P-FLAGS1576,34745
(defmenuitem USE-RULEPUSE-RULEP1582,34865
(defmenuitem RULEP-MAINFNRULEP-MAINFN1589,34996
(defmenuitem RULEP-WFFEQRULEP-WFFEQ1597,35147
(defmenu MANIPULATION-FLAGSMANIPULATION-FLAGS1604,35284
(defmenuitem AUTO-GENERATE-HYPSAUTO-GENERATE-HYPS1610,35416
(defmenuitem CLEANUP-RULECCLEANUP-RULEC1618,35591
(defmenuitem CLEANUP-SAMECLEANUP-SAME1626,35751
(defmenuitem DEFAULT-WFFEQDEFAULT-WFFEQ1634,35908
(defmenuitem PRINT-DOTSPRINT-DOTS1642,36068
(defmenuitem PRINTLINEFLAGPRINTLINEFLAG1650,36219
(defmenuitem SHORT-HELPSHORT-HELP1658,36379
(defmenu SUGGESTION-FLAGSSUGGESTION-FLAGS1666,36530
(defmenuitem GO-INSTRUCTIONSGO-INSTRUCTIONS1672,36658
(defmenuitem QUIETLY-USE-DEFAULTSQUIETLY-USE-DEFAULTS1679,36811
(defmenuitem RESOLVE-CONFLICTRESOLVE-CONFLICT1686,36979
(defmenu ENTERING-FLAGSENTERING-FLAGS1693,37135
(defmenuitem COMPLETION-OPTIONSCOMPLETION-OPTIONS1699,37259
(defmenuitem HISTORY-SIZEHISTORY-SIZE1707,37430
(defmenu RULES-OBJECTRULES-OBJECT1715,37583
(defmenuitem BUILD-MATCHBUILD-MATCH1721,37703
(defmenuitem HLINE-JUSTIFICATIONHLINE-JUSTIFICATION1728,37840
(defmenuitem TREAT-HLINES-AS-DLINESTREAT-HLINES-AS-DLINES1736,38012
(defmenu PROOF-TRANSLATIONSPROOF-TRANSLATIONS1744,38193
(defmenu TACTIC-FLAGSTACTIC-FLAGS1750,38307
(defmenuitem USE-SYMSIMPUSE-SYMSIMP1756,38422
(defmenuitem UI-HERBRAND-LIMITUI-HERBRAND-LIMIT1763,38559
(defmenuitem DEFAULT-TACTICDEFAULT-TACTIC1770,38714
(defmenuitem TACMODETACMODE1777,38860
(defmenuitem TACTIC-VERBOSETACTIC-VERBOSE1784,38985
(defmenuitem TACUSETACUSE1791,39131
(defmenu ETREE-TO-NAT-FLAGSETREE-TO-NAT-FLAGS1798,39253
(defmenuitem ETREE-NAT-VERBOSEETREE-NAT-VERBOSE1804,39380
(defmenuitem REMOVE-LEIBNIZREMOVE-LEIBNIZ1811,39541
(defmenuitem MATINGSTREE-NAMEMATINGSTREE-NAME1818,39693
(defmenuitem MERGE-MINIMIZE-MATINGMERGE-MINIMIZE-MATING1825,39851
(defmenu NAT-TO-ETREE-FLAGSNAT-TO-ETREE-FLAGS1832,40024
(defmenuitem NAT-ETREE-VERSIONNAT-ETREE-VERSION1838,40151
(defmenuitem NATREE-DEBUGNATREE-DEBUG1845,40312
(defmenuitem RENUMBER-LEAVESRENUMBER-LEAVES1852,40458
(defmenu PRINTING-FLAGSPRINTING-FLAGS1859,40613
(defmenuitem INFIX-NOTATIONINFIX-NOTATION1865,40719
(defmenuitem RIGHTMARGINRIGHTMARGIN1873,40878
(defmenuitem SCOPESCOPE1881,41028
(defmenuitem USE-DOTUSE-DOT1889,41160
(defmenuitem PRINT-WEAKPRINT-WEAK1897,41298
(defmenu TEXTEX1905,41445
(defmenuitem LATEX-POSTAMBLELATEX-POSTAMBLE1911,41538
(defmenuitem LATEX-PREAMBLELATEX-PREAMBLE1919,41689
(defmenuitem TEX-1-POSTAMBLETEX-1-POSTAMBLE1927,41837
(defmenuitem TEX-1-PREAMBLETEX-1-PREAMBLE1935,41988
(defmenuitem TEX-LINE-WIDTHTEX-LINE-WIDTH1943,42136
(defmenuitem TEX-POSTAMBLETEX-POSTAMBLE1951,42284
(defmenuitem TEX-PREAMBLETEX-PREAMBLE1959,42429
(defmenuitem TPSTEXTPSTEX1967,42571
(defmenuitem VPDTEXVPDTEX1975,42695
(defmenuitem IN-TEX-MATH-MODEIN-TEX-MATH-MODE1983,42820
(defmenuitem LATEX-EMULATIONLATEX-EMULATION1991,42975
(defmenuitem PAGELENGTHPAGELENGTH1999,43127
(defmenuitem TEX-MIMIC-SCRIBETEX-MIMIC-SCRIBE2007,43264
(defmenu SCRIBESCRIBE2015,43419
(defmenuitem SCRIBE-LINE-WIDTHSCRIBE-LINE-WIDTH2021,43518
(defmenuitem SCRIBE-POSTAMBLESCRIBE-POSTAMBLE2029,43678
(defmenuitem SCRIBE-PREAMBLESCRIBE-PREAMBLE2037,43835
(defmenuitem PRINTEDTFILEPRINTEDTFILE2045,43989
(defmenuitem PRINTEDTFLAGPRINTEDTFLAG2053,44134
(defmenuitem PRINTEDTFLAG-SLIDESPRINTEDTFLAG-SLIDES2061,44279
(defmenuitem PRINTEDTOPSPRINTEDTOPS2069,44445
(defmenuitem PRINTMATEFILEPRINTMATEFILE2077,44587
(defmenuitem PRINTMATEFLAGPRINTMATEFLAG2084,44724
(defmenuitem PRINTMATEFLAG-SLIDESPRINTMATEFLAG-SLIDES2091,44862
(defmenuitem PRINTMATEOPSPRINTMATEOPS2098,45021
(defmenu NATURAL-DEDUCTION-DISPLAYNATURAL-DEDUCTION-DISPLAY2105,45156
(defmenuitem PRINT-COMBINED-EGENSPRINT-COMBINED-EGENS2111,45293
(defmenuitem PRINT-COMBINED-UGENSPRINT-COMBINED-UGENS2119,45481
(defmenuitem PRINT-COMBINED-UISPRINT-COMBINED-UIS2127,45669
(defmenuitem PRINT-UNTIL-UI-OR-EGENPRINT-UNTIL-UI-OR-EGEN2135,45851
(defmenu MISCMISC2143,46045
(defmenuitem PRINT-COMMENTSPRINT-COMMENTS2149,46140
(defmenuitem ALLSCOPEFLAGALLSCOPEFLAG2157,46289
(defmenuitem ATOMVALFLAGATOMVALFLAG2165,46432
(defmenuitem BLANK-LINES-INSERTEDBLANK-LINES-INSERTED2173,46572
(defmenuitem CHARSIZECHARSIZE2181,46739
(defmenuitem DISPLAYWFFDISPLAYWFF2189,46870
(defmenuitem ELIM-DEFNSELIM-DEFNS2197,47007
(defmenuitem FILLINEFLAGFILLINEFLAG2205,47144
(defmenuitem FIRST-PLACEMENT-PRINT-MODEFIRST-PLACEMENT-PRINT-MODE2213,47284
(defmenuitem FLUSHLEFTFLAGFLUSHLEFTFLAG2220,47459
(defmenuitem LEFTMARGINLEFTMARGIN2228,47606
(defmenuitem LOCALLEFTFLAGLOCALLEFTFLAG2236,47744
(defmenuitem PPWFFLAGPPWFFLAG2244,47891
(defmenuitem PRINTDEPTHPRINTDEPTH2252,48023
(defmenuitem PRINTTYPESPRINTTYPES2260,48161
(defmenuitem PRINTTYPES-ALLPRINTTYPES-ALL2268,48299
(defmenuitem RETAIN-INITIAL-TYPERETAIN-INITIAL-TYPE2276,48449
(defmenuitem SLIDES-TURNSTILE-INDENTSLIDES-TURNSTILE-INDENT2284,48614
(defmenuitem SLIDES-TURNSTYLE-INDENTSLIDES-TURNSTYLE-INDENT2292,48791
(defmenuitem SLIDES-PREAMBLESLIDES-PREAMBLE2300,48968
(defmenuitem SUPPORT-NUMBERSSUPPORT-NUMBERS2308,49121
(defmenuitem TURNSTILE-INDENTTURNSTILE-INDENT2316,49274
(defmenuitem TURNSTILE-INDENT-AUTOTURNSTILE-INDENT-AUTO2324,49430
(defmenuitem TURNSTYLE-INDENTTURNSTYLE-INDENT2332,49601
(defmenuitem TURNSTYLE-INDENT-AUTOTURNSTYLE-INDENT-AUTO2340,49757
(defmenuitem USE-INTERNAL-PRINT-MODEUSE-INTERNAL-PRINT-MODE2348,49928
(defmenu PROOF-WINDOWSPROOF-WINDOWS2356,50105
(defmenuitem PROOFW-ACTIVEPROOFW-ACTIVE2362,50209
(defmenuitem PROOFW-ACTIVE+NOSPROOFW-ACTIVE+NOS2370,50364
(defmenuitem PROOFW-ACTIVE+NOS-HEIGHTPROOFW-ACTIVE+NOS-HEIGHT2378,50531
(defmenuitem PROOFW-ACTIVE+NOS-WIDTHPROOFW-ACTIVE+NOS-WIDTH2386,50719
(defmenuitem PROOFW-ACTIVE-HEIGHTPROOFW-ACTIVE-HEIGHT2394,50904
(defmenuitem PROOFW-ACTIVE-WIDTHPROOFW-ACTIVE-WIDTH2402,51080
(defmenuitem PROOFW-ALLPROOFW-ALL2410,51253
(defmenuitem PROOFW-ALL-HEIGHTPROOFW-ALL-HEIGHT2418,51399
(defmenuitem PROOFW-ALL-WIDTHPROOFW-ALL-WIDTH2426,51566
(defmenu MISC-FLAGSMISC-FLAGS2434,51731
(defmenuitem SUPPRESS-FLAGSSUPPRESS-FLAGS2440,51829
(defmenuitem SUPPRESS-FLAGS-LISTSUPPRESS-FLAGS-LIST2448,51984
(defmenuitem LAST-MODE-NAMELAST-MODE-NAME2456,52154
(defmenuitem ALPHA-LOWER-FLAGALPHA-LOWER-FLAG2464,52309
(defmenuitem SHOW-ALL-PACKAGESSHOW-ALL-PACKAGES2472,52470
(defmenu NAMINGNAMING2480,52634
(defmenuitem TRUE-NAMETRUE-NAME2486,52729
(defmenuitem REWRITE-NAMEREWRITE-NAME2493,52854
(defmenuitem NEG-NAMENEG-NAME2500,52988
(defmenuitem LEAF-NAMELEAF-NAME2507,53110
(defmenuitem MATING-NAMEMATING-NAME2514,53235
(defmenuitem FALSE-NAMEFALSE-NAME2521,53366
(defmenuitem IMP-NAMEIMP-NAME2528,53494
(defmenuitem ECONJ-NAMEECONJ-NAME2535,53616
(defmenuitem EDISJ-NAMEEDISJ-NAME2542,53744
(defmenuitem EMPTY-DUP-INFO-NAMEEMPTY-DUP-INFO-NAME2549,53873
(defmenuitem EPROOF-NAMEEPROOF-NAME2556,54029
(defmenuitem EXPANSION-NAMEEXPANSION-NAME2563,54161
(defmenuitem SELECTION-NAMESELECTION-NAME2570,54302
(defmenuitem SKOLEM-SELECTION-NAMESKOLEM-SELECTION-NAME2577,54443
(defmenuitem NAME-SKOLEM-FNNAME-SKOLEM-FN2584,54605
(defmenuitem META-LABEL-NAMEMETA-LABEL-NAME2591,54746
(defmenuitem LIT-NAMELIT-NAME2599,54901
(defmenuitem VPD-LIT-NAMEVPD-LIT-NAME2606,55024
(defmenu SAVING-FLAGSSAVING-FLAGS2613,55159
(defmenuitem SAVE-INTERVALSAVE-INTERVAL2619,55260
(defmenuitem SAVE-WORK-ON-START-UPSAVE-WORK-ON-START-UP2627,55408
(defmenuitem SAVE-WORK-PSAVE-WORK-P2636,55600
(defmenu MAINTMAINT2644,55742
(defmenuitem COMPILED-EXTENSIONCOMPILED-EXTENSION2650,55835
(defmenuitem EXPERTFLAGEXPERTFLAG2658,55997
(defmenuitem INIT-DIALOGUEINIT-DIALOGUE2666,56135
(defmenuitem INIT-DIALOGUE-FNINIT-DIALOGUE-FN2674,56282
(defmenuitem LISP-IMPLEMENTATION-TYPELISP-IMPLEMENTATION-TYPE2682,56438
(defmenuitem LOAD-WARN-PLOAD-WARN-P2690,56618
(defmenuitem MACHINE-INSTANCEMACHINE-INSTANCE2698,56759
(defmenuitem MACHINE-TYPEMACHINE-TYPE2706,56915
(defmenuitem NEWS-DIRNEWS-DIR2714,57059
(defmenuitem READ-LLOAD-SOURCES-PREAD-LLOAD-SOURCES-P2722,57192
(defmenuitem SAVE-FILESAVE-FILE2729,57350
(defmenuitem SHORT-SITE-NAMESHORT-SITE-NAME2737,57486
(defmenuitem SOURCE-EXTENSIONSOURCE-EXTENSION2745,57640
(defmenuitem SOURCE-PATHSOURCE-PATH2753,57797
(defmenuitem TEST-MODIFYTEST-MODIFY2761,57939
(defmenuitem TEST-THEOREMSTEST-THEOREMS2768,58070
(defmenu EVENTSEVENTS2775,58207
(defmenuitem ADVICE-ASKED-ENABLED0ADVICE-ASKED-ENABLED02781,58302
(defmenuitem ADVICE-FILEADVICE-FILE2789,58472
(defmenuitem COMMAND-ENABLED0COMMAND-ENABLED02797,58614
(defmenuitem COMMAND-FILECOMMAND-FILE2805,58769
(defmenuitem DONE-EXC-ENABLED0DONE-EXC-ENABLED02813,58914
(defmenuitem ERROR-ENABLED0ERROR-ENABLED02821,59072
(defmenuitem ERROR-FILEERROR-FILE2829,59221
(defmenuitem EVENT-CYCLEEVENT-CYCLE2837,59360
(defmenuitem EVENTS-ENABLED0EVENTS-ENABLED02845,59502
(defmenuitem INPUT-ERROR-ENABLED0INPUT-ERROR-ENABLED02853,59655
(defmenuitem INPUT-ERROR-FILEINPUT-ERROR-FILE2861,59823
(defmenuitem PROOF-ACTION-ENABLED0PROOF-ACTION-ENABLED02869,59981
(defmenuitem PROOF-FILEPROOF-FILE2877,60152
(defmenuitem QUIET-EVENTSQUIET-EVENTS2885,60292
(defmenuitem RULE-ERROR-ENABLED0RULE-ERROR-ENABLED02893,60438
(defmenuitem RULE-ERROR-FILERULE-ERROR-FILE2901,60603
(defmenuitem SCORE-FILESCORE-FILE2909,60758
(defmenu PARSINGPARSING2917,60898
(defmenuitem BASE-TYPEBASE-TYPE2923,60995
(defmenuitem FIRST-PLACEMENT-MODE-PARSEFIRST-PLACEMENT-MODE-PARSE2931,61132
(defmenuitem LOWERCASERAISELOWERCASERAISE2938,61309
(defmenuitem TYPE-IOTA-MODETYPE-IOTA-MODE2946,61461
(defmenuitem UNTYPED-LAMBDA-CALCULUSUNTYPED-LAMBDA-CALCULUS2954,61613
(defmenuitem MAKE-WFFOPS-LABELSMAKE-WFFOPS-LABELS2962,61792
(defmenuitem PRINT-METAPRINT-META2970,61956
(defmenu VARSVARS2978,62096
(defmenuitem META-BDVAR-NAMEMETA-BDVAR-NAME2984,62187
(defmenuitem META-VAR-NAMEMETA-VAR-NAME2992,62339
(defmenuitem REN-VAR-FNREN-VAR-FN3000,62485
(defmenuitem RENAME-ALL-BD-VARSRENAME-ALL-BD-VARS3008,62622
(defmenu EDITOR-FLAGSEDITOR-FLAGS3016,62783
(defmenuitem EDPPWFFLAGEDPPWFFLAG3022,62890
(defmenuitem EDPRINTDEPTHEDPRINTDEPTH3030,63035
(defmenuitem EDWIN-CURRENTEDWIN-CURRENT3038,63186
(defmenuitem EDWIN-CURRENT-HEIGHTEDWIN-CURRENT-HEIGHT3046,63340
(defmenuitem EDWIN-CURRENT-WIDTHEDWIN-CURRENT-WIDTH3054,63515
(defmenuitem EDWIN-TOPEDWIN-TOP3062,63687
(defmenuitem EDWIN-TOP-HEIGHTEDWIN-TOP-HEIGHT3070,63829
(defmenuitem EDWIN-TOP-WIDTHEDWIN-TOP-WIDTH3078,63992
(defmenuitem EDWIN-VPFORMEDWIN-VPFORM3086,64152
(defmenuitem EDWIN-VPFORM-HEIGHTEDWIN-VPFORM-HEIGHT3094,64304
(defmenuitem EDWIN-VPFORM-WIDTHEDWIN-VPFORM-WIDTH3102,64477
(defmenuitem SAMESAME3110,64647
(defmenu PROPOSITIONALPROPOSITIONAL3118,64767
(defmenuitem RULE-PRULE-P3124,64871
(defmenu INDIRECT-RULESINDIRECT-RULES3132,65003
(defmenuitem INDIRECTINDIRECT3138,65111
(defmenuitem INDIRECT1INDIRECT13146,65252
(defmenuitem INDIRECT2INDIRECT23154,65396
(defmenu NEGATIONNEGATION3162,65540
(defmenuitem ENEGENEG3168,65642
(defmenuitem INEGINEG3176,65765
(defmenuitem NNFNNF3184,65888
(defmenuitem NNF-EXPANDNNF-EXPAND3192,66008
(defmenuitem PULLNEGPULLNEG3200,66149
(defmenuitem PUSHNEGPUSHNEG3208,66281
(defmenu DISJUNCTIONDISJUNCTION3216,66413
(defmenuitem CASESCASES3222,66521
(defmenuitem CASES3CASES33230,66650
(defmenuitem CASES4CASES43238,66782
(defmenuitem IDISJ-LEFTIDISJ-LEFT3246,66914
(defmenuitem IDISJ-RIGHTIDISJ-RIGHT3254,67058
(defmenuitem IMP-DISJIMP-DISJ3262,67205
(defmenuitem IMP-DISJ-LIMP-DISJ-L3270,67343
(defmenuitem IMP-DISJ-RIMP-DISJ-R3278,67487
(defmenu CONJUNCTIONCONJUNCTION3286,67631
(defmenuitem ECONJECONJ3292,67739
(defmenuitem ICONJICONJ3300,67868
(defmenu IMPLICATIONIMPLICATION3308,67997
(defmenuitem DEDUCTDEDUCT3314,68105
(defmenuitem MPMP3322,68237
(defmenuitem DISJ-IMPDISJ-IMP3330,68357
(defmenuitem DISJ-IMP-LDISJ-IMP-L3338,68495
(defmenuitem DISJ-IMP-RDISJ-IMP-R3346,68639
(defmenu EQUIVALENCEEQUIVALENCE3354,68783
(defmenuitem EQUIV-IMPLICSEQUIV-IMPLICS3360,68891
(defmenuitem IMPLICS-EQUIVIMPLICS-EQUIV3368,69044
(defmenuitem SUBST-EQUIVSUBST-EQUIV3376,69197
(defmenuitem ABSURDABSURD3384,69344
(defmenuitem ITRUTHITRUTH3392,69478
(defmenuitem ASSOC-LEFTASSOC-LEFT3400,69612
(defmenu QUANTIFIERSQUANTIFIERS3408,69758
(defmenuitem AB*AB*3414,69858
(defmenuitem ABEABE3422,69981
(defmenuitem ABUABU3430,70104
(defmenuitem UGENUGEN3438,70227
(defmenuitem UIUI3446,70353
(defmenuitem EGENEGEN3454,70473
(defmenuitem RULECRULEC3462,70599
(defmenuitem RULEC1RULEC13470,70728
(defmenuitem LETLET3478,70860
(defmenu LAMBDALAMBDA3486,70984
(defmenuitem BETA*BETA*3492,71074
(defmenuitem ETA*ETA*3500,71198
(defmenuitem LAMBDA*LAMBDA*3508,71319
(defmenuitem LCONTR*LCONTR*3516,71449
(defmenuitem LCONTR*-BETALCONTR*-BETA3524,71579
(defmenuitem LCONTR*-ETALCONTR*-ETA3532,71724
(defmenuitem LEXPD*LEXPD*3540,71866
(defmenuitem LEXPD*-BETALEXPD*-BETA3548,71993
(defmenuitem LEXPD*-ETALEXPD*-ETA3556,72135
(defmenu DEFINITIONSDEFINITIONS3564,72275
(defmenuitem EQUIV-WFFSEQUIV-WFFS3570,72375
(defmenuitem IDEFIDEF3578,72519
(defmenuitem EDEFEDEF3586,72645
(defmenuitem EQUIV-EQEQUIV-EQ3594,72771
(defmenuitem EQUIV-EQ-CONTREQUIV-EQ-CONTR3602,72909
(defmenuitem EQUIV-EQ-CONTR*EQUIV-EQ-CONTR*3610,73065
(defmenuitem EQUIV-EQ-EXPDEQUIV-EQ-EXPD3618,73224
(defmenuitem EQUIV-EQ-EXPD*EQUIV-EQ-EXPD*3626,73377
(defmenuitem EXT=EXT=3634,73533
(defmenuitem EXT=0EXT=03642,73660
(defmenu SUBSTITIONSSUBSTITIONS3650,73790
(defmenuitem SUBSTITUTESUBSTITUTE3656,73890
(defmenuitem TYPESUBSTTYPESUBST3664,74034
(defmenu EQUATIONSEQUATIONS3672,74175
(defmenuitem SUBST=SUBST=3678,74271
(defmenuitem SUBST=LSUBST=L3686,74401
(defmenuitem SUBST=RSUBST=R3694,74534
(defmenuitem SYM=SYM=3702,74667
(defmenu REWRITE-RULESREWRITE-RULES3710,74791
(defmenuitem ACTIVATE-RULESACTIVATE-RULES3716,74899
(defmenuitem DEACTIVATE-RULESDEACTIVATE-RULES3723,75046
(defmenuitem DELETE-RRULEDELETE-RRULE3730,75199
(defmenuitem LIST-RRULESLIST-RRULES3737,75340
(defmenuitem MAKE-ABBREV-RRULEMAKE-ABBREV-RRULE3744,75478
(defmenuitem MAKE-INVERSE-RRULEMAKE-INVERSE-RRULE3751,75634
(defmenuitem MAKE-THEORYMAKE-THEORY3758,75793
(defmenuitem PERMUTE-RRULESPERMUTE-RRULES3765,75931
(defmenuitem REWRITE-SUPP*REWRITE-SUPP*3772,76078
(defmenuitem REWRITE-SUPP1REWRITE-SUPP13779,76223
(defmenuitem SIMPLIFY-PLANSIMPLIFY-PLAN3786,76368
(defmenuitem SIMPLIFY-PLAN*SIMPLIFY-PLAN*3793,76513
(defmenuitem SIMPLIFY-SUPPSIMPLIFY-SUPP3800,76661
(defmenuitem SIMPLIFY-SUPP*SIMPLIFY-SUPP*3807,76806
(defmenuitem UNREWRITE-PLAN*UNREWRITE-PLAN*3814,76954
(defmenuitem UNREWRITE-PLAN1UNREWRITE-PLAN13821,77105
(defmenuitem USE-RRULESUSE-RRULES3828,77256
(defmenuitem USE-THEORYUSE-THEORY3835,77392
(defmenu MODIFYMODIFY3842,77528
(defmenuitem ASSERTASSERT3848,77618
(defmenuitem HYPHYP3856,77745
(defmenuitem LEMMALEMMA3864,77863
(defmenuitem ADD-HYPSADD-HYPS3872,77987
(defmenuitem DELETEDELETE3880,78120
(defmenuitem DELETE*DELETE*3888,78247
(defmenuitem DELETE-HYPSDELETE-HYPS3896,78377
(defmenuitem INTRODUCE-GAPINTRODUCE-GAP3904,78519
(defmenuitem MAKE-ASSERT-A-HYPMAKE-ASSERT-A-HYP3912,78667
(defmenuitem ELIMINATE-ALL-RULEP-APPSELIMINATE-ALL-RULEP-APPS3920,78828
(defmenuitem ELIMINATE-CONJ*-RULEP-APPSELIMINATE-CONJ*-RULEP-APPS3927,78999
(defmenuitem ELIMINATE-RULEP-LINEELIMINATE-RULEP-LINE3934,79176
(defmenuitem LOCK-LINELOCK-LINE3941,79335
(defmenuitem MODIFY-GAPSMODIFY-GAPS3949,79472
(defmenuitem MOVEMOVE3957,79615
(defmenuitem MOVE*MOVE*3965,79737
(defmenuitem PLANPLAN3973,79862
(defmenuitem RENUMBERALLRENUMBERALL3981,79984
(defmenuitem SQUEEZESQUEEZE3989,80127
(defmenuitem UNLOCK-LINEUNLOCK-LINE3997,80258
(defmenuitem DE-ASSERT-LEMMASDE-ASSERT-LEMMAS4005,80401
(defmenuitem NORMALIZE-PROOFNORMALIZE-PROOF4012,80546
(defmenu STATUSSTATUS4019,80690
(defmenuitem ARE-WE-USINGARE-WE-USING4025,80780
(defmenuitem COUNT-LINESCOUNT-LINES4033,80925
(defmenuitem PSTATUSPSTATUS4041,81067
(defmenuitem SPONSORSPONSOR4049,81197
(defmenuitem SUBPROOFSUBPROOF4057,81327
(defmenuitem UNSPONSORUNSPONSOR4065,81460
(defmenu SUGGESTIONSSUGGESTIONS4073,81596
(defmenuitem ADVICEADVICE4079,81696
(defmenuitem CHECK-STRUCTURECHECK-STRUCTURE4087,81828
(defmenuitem GOGO4095,81987
(defmenuitem GO2GO24102,82096
(defmenuitem MONSTROMONSTRO4109,82208
(defmenuitem SUGGESTSUGGEST4116,82332
(defmenu PRINTINGPRINTING4123,82456
(defmenuitem BUILD-PROOF-HIERARCHYBUILD-PROOF-HIERARCHY4129,82550
(defmenuitem DEPTHDEPTH4137,82724
(defmenuitem EXPLAINEXPLAIN4145,82850
(defmenuitem FIND-LINEFIND-LINE4153,82982
(defmenuitem PALL1PALL14161,83120
(defmenuitem PBRIEFPBRIEF4169,83260
(defmenuitem PLPL4177,83389
(defmenuitem PL*PL*4185,83506
(defmenuitem PLINEPLINE4193,83626
(defmenuitem PPLANPPLAN4201,83753
(defmenuitem PRINT-PROOF-STRUCTUREPRINT-PROOF-STRUCTURE4209,83880
(defmenuitem PRWPRW4217,84055
(defmenuitem PWPW4225,84176
(defmenuitem PWSCOPEPWSCOPE4233,84294
(defmenuitem PWTYPESPWTYPES4241,84427
(defmenuitem SHOWNOTYPESSHOWNOTYPES4249,84560
(defmenuitem SHOWTYPESSHOWTYPES4257,84705
(defmenuitem TABLEAUTABLEAU4265,84844
(defmenuitem ^P^P4273,84977
(defmenuitem ^PN^PN4281,85095
(defmenu ENTERINGENTERING4289,85216
(defmenuitem CLEANUPCLEANUP4295,85310
(defmenuitem DONEDONE4303,85442
(defmenuitem NEWSNEWS4311,85565
(defmenuitem RECONSIDERRECONSIDER4319,85688
(defmenuitem REMARKREMARK4327,85829
(defmenuitem SUMMARYSUMMARY4335,85958
(defmenuitem ALIASALIAS4343,86090
(defmenuitem UNALIASUNALIAS4351,86216
(defmenu TACTICSTACTICS4359,86349
(defmenuitem ECHOECHO4365,86441
(defmenuitem USE-TACTICUSE-TACTIC4372,86552
(defmenu ETREE-TO-NATETREE-TO-NAT4379,86681
(defmenuitem ETREE-NATETREE-NAT4385,86783
(defmenuitem TIDY-PROOFTIDY-PROOF4392,86914
(defmenu NAT-TO-ETREENAT-TO-ETREE4399,87048
(defmenuitem NAT-ETREENAT-ETREE4405,87150
(defmenuitem PFNATPFNAT4412,87281
(defmenuitem PNTRPNTR4419,87400
(defmenu PROOF-OUTLINESPROOF-OUTLINES4426,87516
(defmenuitem CREATE-SUBPROOFCREATE-SUBPROOF4432,87622
(defmenuitem LINE-COMMENTLINE-COMMENT4440,87784
(defmenuitem MERGE-PROOFSMERGE-PROOFS4448,87937
(defmenuitem PROOF-COMMENTPROOF-COMMENT4456,88090
(defmenuitem PROOFLISTPROOFLIST4464,88246
(defmenuitem TRANSFER-LINESTRANSFER-LINES4472,88390
(defmenu FILESFILES4480,88549
(defmenuitem PRINTPROOFPRINTPROOF4486,88637
(defmenuitem SCRIBEPROOFSCRIBEPROOF4495,88795
(defmenuitem SETUP-SLIDE-STYLESETUP-SLIDE-STYLE4504,88956
(defmenuitem SLIDEPROOFSLIDEPROOF4512,89115
(defmenuitem TEXPROOFTEXPROOF4521,89273
(defmenu RULE-RUNRULE-RUN4530,89425
(defmenuitem ASSEMBLE-FILEASSEMBLE-FILE4536,89519
(defmenuitem ASSEMBLE-MODASSEMBLE-MOD4543,89658
(defmenuitem BUILDBUILD4550,89794
(defmenuitem WRITE-RULEWRITE-RULE4557,89909
(defmenu LISP-PACKAGESLISP-PACKAGES4564,90039
(defmenuitem PACK-STATPACK-STAT4570,90151
(defmenuitem UNUSEUNUSE4577,90283
(defmenuitem USEUSE4585,90414
(defmenu TPS-MODULESTPS-MODULES4592,90528
(defmenuitem LOADED-MODSLOADED-MODS4598,90636
(defmenuitem MODULESMODULES4605,90772
(defmenuitem UNLOADED-MODSUNLOADED-MODS4612,90896
(defmenu TPS-MAINTENANCETPS-MAINTENANCE4619,91038
(defmenuitem CLOADCLOAD4625,91154
(defmenuitem CLOAD-MODULESCLOAD-MODULES4633,91287
(defmenuitem COMPILE-LISTCOMPILE-LIST4641,91444
(defmenuitem COMPLCOMPL4648,91587
(defmenuitem FILETYPEFILETYPE4655,91709
(defmenuitem LEDITLEDIT4663,91851
(defmenuitem LOAD-SLOWLOAD-SLOW4670,91973
(defmenuitem ORGANIZEORGANIZE4677,92107
(defmenuitem QLOADQLOAD4684,92238
(defmenuitem SYS-LOADSYS-LOAD4692,92372
(defmenuitem TEST-INITTEST-INIT4700,92515
(defmenuitem TLISTTLIST4708,92670
(defmenuitem TLOADTLOAD4715,92793
(defmenuitem TPS-TESTTPS-TEST4723,92927
(defmenuitem TPS-TEST2TPS-TEST24731,93079
(defmenuitem TPS3-SAVETPS3-SAVE4739,93234
(defmenuitem DISPLAY-TIMEDISPLAY-TIME4748,93400
(defmenuitem DISABLE-EVENTSDISABLE-EVENTS4755,93541
(defmenuitem LEAST-SEARCH-DEPTHLEAST-SEARCH-DEPTH4763,93699
(defmenu MS91MS914770,93858
(defmenuitem SEARCH-PLACEMENTSEARCH-PLACEMENT4776,93952
(defmenu MATING-SEARCH-COMMANDSMATING-SEARCH-COMMANDS4783,94096
(defmenuitem CLOSE-TESTWINCLOSE-TESTWIN4789,94226
(defmenuitem DIYDIY4796,94379
(defmenuitem DIY-LDIY-L4803,94502
(defmenuitem EPROOFLISTEPROOFLIST4810,94631
(defmenuitem MONITORMONITOR4817,94775
(defmenuitem MONITORLISTMONITORLIST4824,94910
(defmenuitem NOMONITORNOMONITOR4831,95057
(defmenuitem SET-EPROOFSET-EPROOF4838,95198
(defmenu SEARCH-SUGGESTIONSSEARCH-SUGGESTIONS4845,95342
(defmenuitem AUTO-SUGGESTAUTO-SUGGEST4851,95464
(defmenuitem SET-BACKGROUND-EPROOFSET-BACKGROUND-EPROOF4858,95610
(defmenuitem ETR-AUTO-SUGGESTETR-AUTO-SUGGEST4865,95783
(defmenu SEQUENT-CALCULUSSEQUENT-CALCULUS4872,95941
(defmenuitem PSEQPSEQ4878,96059
(defmenuitem PSEQLPSEQL4885,96179
(defmenuitem SEQ-TO-NATSEQ-TO-NAT4892,96302
(defmenuitem SEQLISTSEQLIST4899,96440
(defmenu SAVINGSAVING4906,96569
(defmenuitem APPEND-WFFAPPEND-WFF4912,96665
(defmenuitem APPEND-WFFSAPPEND-WFFS4920,96804
(defmenuitem EXECUTE-FILEEXECUTE-FILE4928,96946
(defmenuitem FINDPROOFFINDPROOF4936,97091
(defmenuitem FINISH-SAVEFINISH-SAVE4944,97227
(defmenuitem PAUSEPAUSE4953,97389
(defmenuitem RESTORE-WORKRESTORE-WORK4961,97513
(defmenuitem RESUME-SAVERESUME-SAVE4969,97658
(defmenuitem SAVE-FLAGS-AND-WORKSAVE-FLAGS-AND-WORK4978,97821
(defmenuitem SAVE-SUBPROOFSAVE-SUBPROOF4987,98008
(defmenuitem SAVE-WORKSAVE-WORK4996,98177
(defmenuitem SAVEPROOFSAVEPROOF5005,98334
(defmenuitem SCRIPTSCRIPT5014,98491
(defmenuitem STOP-SAVESTOP-SAVE5023,98639
(defmenuitem UNSCRIPTUNSCRIPT5032,98796
(defmenu COLL-HELPCOLL-HELP5061,99357
(defmenuitem CHARDOCCHARDOC5067,99461
(defmenuitem COLLECT-HELPCOLLECT-HELP5074,99583
(defmenuitem HELP-LISTHELP-LIST5081,99720
(defmenu AUTO-GENAUTO-GEN5088,99848
(defmenuitem HTML-DOCHTML-DOC5095,99993
(defmenuitem GENERATE-JAVA-MENUSGENERATE-JAVA-MENUS5103,100137
(defmenuitem QUICK-REFQUICK-REF5112,100325
(defmenuitem SCRIBE-DOCSCRIBE-DOC5119,100453
(defmenu HELP-OBJHELP-OBJ5126,100584
(defmenuitem ??5132,100686
(defmenuitem ????5140,100800
(defmenuitem ABBREVIATIONSABBREVIATIONS5148,100917
(defmenuitem ENVIRONMENTENVIRONMENT5156,101067
(defmenuitem HELP2HELP25164,101211
(defmenuitem HELP*HELP*5172,101335
(defmenuitem HELP-GROUPHELP-GROUP5180,101461
(defmenuitem LIST-RULESLIST-RULES5188,101602
(defmenuitem LIST-RULES*LIST-RULES*5196,101743
(defmenuitem OOPSOOPS5204,101888
(defmenuitem PROBLEMSPROBLEMS5212,102012
(defmenuitem SEARCHSEARCH5220,102148
(defmenu LIBRARY-TOP-LEVELSLIBRARY-TOP-LEVELS5228,102278
(defmenuitem LIBRARY0LIBRARY05234,102397
(defmenuitem BEGIN-PRFWBEGIN-PRFW5242,102536
(defmenuitem END-PRFWEND-PRFW5250,102681
(defmenuitem PUSH-TO-TOPPUSH-TO-TOP5258,102820
(defmenuitem POP-FROM-TOPPOP-FROM-TOP5266,102954
(defmexpr generate-java-menusgenerate-java-menus5274,103087
(defun generate-java-menus generate-java-menus5288,103544
(defun hide-menus-in-etps hide-menus-in-etps5408,108711
(defun hide-menus-in-etps-1 hide-menus-in-etps-15413,108883
(defun hide-menus-in-etps-2 hide-menus-in-etps-25418,109107
(defun generate-java-menus-1 generate-java-menus-15431,109503

meta-label.lisp,515
(deffile meta-labelmeta-label24,782
(defflag print-metaprint-meta29,927
(defflag meta-label-namemeta-label-name36,1103
(defflavor metameta42,1256
(defun generate-wffop-label generate-wffop-label99,3588
(defmacro copy-props copy-props108,3996
(defun rename-wffop-label rename-wffop-label115,4238
(defwffop nthargntharg123,4460
(defun ntharg ntharg132,4806
(defwffrec nth-prefix-argnth-prefix-arg146,5225
(defun nth-prefix-arg nth-prefix-arg149,5279
(defun nth-infix-arg nth-infix-arg160,5685

meta-var.lisp,733
(deffile meta-varmeta-var21,749
(defflag meta-var-namemeta-var-name28,907
(defflag meta-bdvar-namemeta-bdvar-name34,1047
(defflavor meta-varmeta-var40,1195
(defflavor meta-bdmeta-bd64,2241
(defwffop make-wffschemamake-wffschema86,3174
(defun make-wffschema make-wffschema96,3437
(defun meta-ize-gwff meta-ize-gwff102,3594
(defwffrec make-wffschema1 make-wffschema1105,3648
(defun make-wffschema1 make-wffschema1107,3693
(defun make-meta-label-wffschema make-meta-label-wffschema120,4086
(defun make-wffschema-if-wff make-wffschema-if-wff138,4839
(defun make-bdwffschema make-bdwffschema143,4993
(defun create-meta-var-name create-meta-var-name156,5488
(defun generate-meta-var generate-meta-var165,5787

mhelp.lisp,1647
(deffile mhelpmhelp13,608
(defvar *doing-html* *doing-html*20,755
(defflag show-all-packagesshow-all-packages25,895
(defmexpr ??33,1092
(defmexpr ????38,1203
(defmexpr help*help*44,1352
(defun mhelp* mhelp*56,1699
(defmexpr help-grouphelp-group62,1808
(defun mhelp-group mhelp-group80,2512
(defun right-context right-context112,4280
(defmexpr helphelp117,4430
(defun mhelp mhelp138,5015
(defun mhelp-for-cat mhelp-for-cat231,9142
(defun cat-hack cat-hack234,9243
(defun cat-help-fn cat-help-fn245,9622
(defun categ-mhelp categ-mhelp262,10436
(defun princ-mhelp princ-mhelp273,10859
(defun princ-short-mhelp princ-short-mhelp280,11150
(defun category-mhelp category-mhelp287,11440
(defun category-mhelp-list category-mhelp-list291,11540
(defun command-mhelp command-mhelp296,11683
(defun operation-mhelp operation-mhelp307,12057
(defun edop-mhelp edop-mhelp317,12466
(defun mateop-mhelp mateop-mhelp332,13077
(defun mtreeop-mhelp mtreeop-mhelp361,14324
(defun princ-arghelps princ-arghelps381,15175
(defmacro symbol-length symbol-length396,15806
(defun print-tps-format print-tps-format400,15872
(defun print-tps-format* print-tps-format*453,17969
(defun category-short-help category-short-help501,19783
(defun category-help category-help506,19980
(defun category-items-short-help category-items-short-help510,20102
(defun category-items-help category-items-help553,21881
(defun top-help top-help581,22900
(defun feat-help feat-help592,23267
(defun feat-help1 feat-help1598,23461
(defun help-help help-help616,23980
(defmexpr oopsoops681,26875
(defun oops oops694,27414

min-quant-etree.lisp,1461
(deffile min-quant-etreemin-quant-etree13,606
(defun elim-extra-exp-terms elim-extra-exp-terms22,1001
(defun cleanup-all-inactive-nodes cleanup-all-inactive-nodes31,1370
(defun min-quant-etree min-quant-etree38,1669
(defun modular-over-rew modular-over-rew53,2345
(defun rep-of-sons rep-of-sons58,2488
(defun merge-of-components merge-of-components61,2550
(defun exchange-position exchange-position84,3492
(defun setf-etree-components setf-etree-components96,3953
(defun one-step-mqe-bd one-step-mqe-bd108,4481
(defun create-new-skfn create-new-skfn252,10582
(defun rpla-head-in-skterm rpla-head-in-skterm261,11037
(defun replace-old-with-new-skterm replace-old-with-new-skterm279,11617
(defun mqe-delete-negation mqe-delete-negation283,11769
(defun one-step-mqe-infix one-step-mqe-infix295,12192
(defun make-new-expansion make-new-expansion349,14381
(defun make-new-skolem make-new-skolem360,14807
(defun make-new-rewrite make-new-rewrite369,15119
(defflag min-quant-etreemin-quant-etree378,15457
(defun min-quant-etree-app min-quant-etree-app396,16289
(defun mqe-app mqe-app412,16914
(defmacro lambda-rew lambda-rew432,17623
(defun elim-lambda-rew elim-lambda-rew437,17792
(defun add-lambda-rew add-lambda-rew460,18804
(defun funvar funvar502,20536
(defun add-ruleq-rew add-ruleq-rew509,20682
(defun elim-lambda-rew-app elim-lambda-rew-app528,21309
(defun add-lambda-rew-app add-lambda-rew-app533,21463

ml1-abbrev.lisp,69
(deffile ml1-abbrevml1-abbrev21,719
(def-abbrev equivequiv28,853

ml1-const.lisp,317
(deffile ml1-constml1-const23,823
(def-typeconst oo30,951
(def-typeconst ii33,1008
(def-logconst andand36,1064
(def-logconst oror43,1181
(def-logconst impliesimplies50,1296
(def-logconst notnot56,1398
(def-binder lambdalambda66,1646
(def-binder forallforall77,1892
(def-binder existsexists86,2066

ml1-logic0.lisp,1633
(defrulefile ml1-logic0ml1-logic021,780
(defmexpr samesame35,943
(defrulewffs samesame47,1413
(defsrule samesame55,1557
(defun same-build same-build64,1676
(defun same-enter same-enter99,3366
(defun same-defaults same-defaults107,3621
(defun same-hyp-defaults same-hyp-defaults153,5783
(defun same-match same-match202,8107
(defun same-match1 same-match1253,10576
(defun same-short same-short268,11179
(defun same-legal same-legal277,11406
(defun same-legal-hyps same-legal-hyps288,11723
(defun same-legal-wffs same-legal-wffs323,13247
(defmexpr lemmalemma359,14845
(defrulewffs lemmalemma371,15332
(defsrule lemmalemma379,15479
(defun lemma-build lemma-build388,15602
(defun lemma-enter lemma-enter420,17181
(defun lemma-defaults lemma-defaults429,17473
(defun lemma-hyp-defaults lemma-hyp-defaults478,19894
(defun lemma-match lemma-match528,22259
(defun lemma-match1 lemma-match1555,23495
(defun lemma-short lemma-short567,23873
(defun lemma-legal lemma-legal576,24142
(defun lemma-legal-hyps lemma-legal-hyps587,24468
(defun lemma-legal-wffs lemma-legal-wffs623,26031
(defmexpr hyphyp659,27645
(defrulewffs hyphyp671,28173
(defsrule hyphyp679,28314
(defun hyp-build hyp-build688,28429
(defun hyp-enter hyp-enter723,30122
(defun hyp-defaults hyp-defaults732,30401
(defun hyp-hyp-defaults hyp-hyp-defaults778,32615
(defun hyp-match hyp-match828,34942
(defun hyp-match1 hyp-match1855,36174
(defun hyp-short hyp-short867,36548
(defun hyp-legal hyp-legal876,36813
(defun hyp-legal-hyps hyp-legal-hyps887,37133
(defun hyp-legal-wffs hyp-legal-wffs923,38717

ml1-logic1.lisp,4173
(deffile ml1-logic1ml1-logic123,835
(defrulefile ml1-logic1ml1-logic128,977
(defmexpr deductdeduct42,1187
(defrulewffs deductdeduct57,1755
(defsrule deductdeduct66,1942
(defun deduct-build deduct-build72,2016
(defun deduct-enter deduct-enter105,3422
(defun deduct-defaults deduct-defaults111,3633
(defun deduct-hyp-defaults deduct-hyp-defaults151,5433
(defun deduct-match deduct-match196,7451
(defun deduct-legal deduct-legal218,8257
(defun deduct-legal-hyps deduct-legal-hyps228,8588
(defun deduct-legal-wffs deduct-legal-wffs255,9731
(defmexpr mpmp284,10850
(defrulewffs mpmp299,11420
(defsrule mpmp308,11591
(defun mp-build mp-build314,11657
(defun mp-enter mp-enter345,12950
(defun mp-defaults mp-defaults352,13177
(defun mp-hyp-defaults mp-hyp-defaults392,14993
(defun mp-match mp-match437,16995
(defun mp-legal mp-legal467,18139
(defun mp-legal-hyps mp-legal-hyps477,18458
(defun mp-legal-wffs mp-legal-wffs504,19595
(defmexpr econjeconj532,20687
(defrulewffs econjeconj547,21262
(defsrule econjeconj556,21441
(defun econj-build econj-build562,21513
(defun econj-enter econj-enter595,22915
(defun econj-defaults econj-defaults601,23133
(defun econj-hyp-defaults econj-hyp-defaults642,24953
(defun econj-match econj-match687,26941
(defun econj-legal econj-legal717,28091
(defun econj-legal-hyps econj-legal-hyps727,28419
(defun econj-legal-wffs econj-legal-wffs754,29542
(defmexpr iconjiconj783,30658
(defrulewffs iconjiconj798,31233
(defsrule iconjiconj807,31412
(defun iconj-build iconj-build813,31484
(defun iconj-enter iconj-enter844,32795
(defun iconj-defaults iconj-defaults850,33011
(defun iconj-hyp-defaults iconj-hyp-defaults890,34814
(defun iconj-match iconj-match935,36819
(defun iconj-legal iconj-legal957,37623
(defun iconj-legal-hyps iconj-legal-hyps967,37951
(defun iconj-legal-wffs iconj-legal-wffs994,39091
(defmexpr casescases1023,40207
(defrulewffs casescases1042,41044
(defsrule casescases1054,41291
(defun cases-build cases-build1060,41363
(defun cases-enter cases-enter1100,43095
(defun cases-defaults cases-defaults1107,43384
(defun cases-hyp-defaults cases-hyp-defaults1152,45522
(defun cases-match cases-match1213,48388
(defun cases-legal cases-legal1249,49794
(defun cases-legal-hyps cases-legal-hyps1261,50237
(defun cases-legal-wffs cases-legal-wffs1292,51634
(defmexpr idisj-rightidisj-right1323,52879
(defrulewffs idisj-rightidisj-right1337,53400
(defsrule idisj-rightidisj-right1345,53573
(defun idisj-right-build idisj-right-build1351,53657
(defun idisj-right-enter idisj-right-enter1382,54936
(defun idisj-right-defaults idisj-right-defaults1388,55130
(defun idisj-right-hyp-defaults idisj-right-hyp-defaults1427,56855
(defun idisj-right-match idisj-right-match1466,58596
(defun idisj-right-legal idisj-right-legal1488,59412
(defun idisj-right-legal-hyps idisj-right-legal-hyps1498,59725
(defun idisj-right-legal-wffs idisj-right-legal-wffs1523,60785
(defmexpr idisj-leftidisj-left1553,61910
(defrulewffs idisj-leftidisj-left1567,62428
(defsrule idisj-leftidisj-left1575,62598
(defun idisj-left-build idisj-left-build1581,62680
(defun idisj-left-enter idisj-left-enter1612,63954
(defun idisj-left-defaults idisj-left-defaults1618,64147
(defun idisj-left-hyp-defaults idisj-left-hyp-defaults1657,65864
(defun idisj-left-match idisj-left-match1696,67604
(defun idisj-left-legal idisj-left-legal1718,68418
(defun idisj-left-legal-hyps idisj-left-legal-hyps1728,68728
(defun idisj-left-legal-wffs idisj-left-legal-wffs1753,69787
(defmexpr indirectindirect1783,70905
(defrulewffs indirectindirect1801,71671
(defsrule indirectindirect1811,71883
(defun indirect-build indirect-build1817,71961
(defun indirect-enter indirect-enter1852,73467
(defun indirect-defaults indirect-defaults1859,73714
(defun indirect-hyp-defaults indirect-hyp-defaults1901,75656
(defun indirect-match indirect-match1951,77939
(defun indirect-legal indirect-legal1973,78749
(defun indirect-legal-hyps indirect-legal-hyps1983,79119
(defun indirect-legal-wffs indirect-legal-wffs2012,80354

ml1-logic2.lisp,2150
(defrulefile ml1-logic2ml1-logic221,784
(defmexpr egenegen35,952
(defrulewffs egenegen47,1581
(defsrule egenegen57,1846
(defun egen-build egen-build66,1965
(defun egen-enter egen-enter101,3716
(defun egen-defaults egen-defaults108,3920
(defun egen-hyp-defaults egen-hyp-defaults151,6153
(defun egen-match egen-match194,8365
(defun egen-match1 egen-match1219,9572
(defun egen-short egen-short239,10358
(defun egen-legal egen-legal248,10649
(defun egen-legal-hyps egen-legal-hyps258,10958
(defun egen-legal-wffs egen-legal-wffs288,12395
(defmexpr rulecrulec320,13926
(defrulewffs rulecrulec332,14699
(defsrule rulecrulec345,15039
(defun rulec-build rulec-build354,15162
(defun rulec-enter rulec-enter392,17145
(defun rulec-defaults rulec-defaults399,17386
(defun rulec-hyp-defaultsrulec-hyp-defaults443,19767
(defun rulec-match rulec-match499,22640
(defun rulec-match1 rulec-match1545,24980
(defun rulec-short rulec-short572,26204
(defun rulec-legal rulec-legal581,26493
(defun rulec-legal-hyps rulec-legal-hyps591,26859
(defun rulec-legal-wffs rulec-legal-wffs624,28498
(defmexpr uiui658,30112
(defrulewffs uiui670,30689
(defsrule uiui680,30944
(defun ui-build ui-build689,31055
(defun ui-enter ui-enter724,32788
(defun ui-defaults ui-defaults732,33016
(defun ui-hyp-defaults ui-hyp-defaults774,35209
(defun ui-match ui-match817,37419
(defun ui-match1 ui-match1855,39294
(defun ui-short ui-short875,40086
(defun ui-legal ui-legal884,40373
(defun ui-legal-hyps ui-legal-hyps894,40676
(defun ui-legal-wffs ui-legal-wffs924,42111
(defmexpr ugenugen956,43621
(defrulewffs ugenugen968,44154
(defsrule ugenugen978,44395
(defun ugen-build ugen-build987,44514
(defun ugen-enter ugen-enter1022,46229
(defun ugen-defaults ugen-defaults1029,46421
(defun ugen-hyp-defaults ugen-hyp-defaults1071,48531
(defun ugen-match ugen-match1114,50731
(defun ugen-match1 ugen-match11139,51938
(defun ugen-short ugen-short1159,52724
(defun ugen-legal ugen-legal1167,52927
(defun ugen-legal-hyps ugen-legal-hyps1177,53218
(defun ugen-legal-wffs ugen-legal-wffs1207,54643

ml1-logic3a.lisp,2466
(defrulefile ml1-logic3aml1-logic3a21,798
(defmexpr nnf-expandnnf-expand35,983
(defrulewffs nnf-expandnnf-expand47,1520
(defsrule nnf-expandnnf-expand56,1740
(defun nnf-expand-build nnf-expand-build65,1883
(defun nnf-expand-enter nnf-expand-enter100,3642
(defun nnf-expand-defaults nnf-expand-defaults109,3935
(defun nnf-expand-hyp-defaults nnf-expand-hyp-defaults156,6253
(defun nnf-expand-match nnf-expand-match205,8601
(defun nnf-expand-match1 nnf-expand-match1234,9941
(defun nnf-expand-short nnf-expand-short252,10620
(defun nnf-expand-legal nnf-expand-legal260,10835
(defun nnf-expand-legal-hyps nnf-expand-legal-hyps271,11197
(defun nnf-expand-legal-wffs nnf-expand-legal-wffs306,12745
(defmexpr nnfnnf343,14443
(defrulewffs nnfnnf355,14940
(defsrule nnfnnf364,15146
(defun nnf-build nnf-build373,15261
(defun nnf-enter nnf-enter408,16978
(defun nnf-defaults nnf-defaults418,17280
(defun nnf-hyp-defaults nnf-hyp-defaults467,19650
(defun nnf-match nnf-match516,21991
(defun nnf-match1 nnf-match1560,24085
(defun nnf-short nnf-short576,24677
(defun nnf-legal nnf-legal584,24878
(defun nnf-legal-hyps nnf-legal-hyps595,25219
(defun nnf-legal-wffs nnf-legal-wffs630,26760
(defmexpr pullnegpullneg666,28397
(defrulewffs pullnegpullneg678,28917
(defsrule pullnegpullneg687,29134
(defun pullneg-build pullneg-build696,29265
(defun pullneg-enter pullneg-enter732,31029
(defun pullneg-defaults pullneg-defaults741,31326
(defun pullneg-hyp-defaults pullneg-hyp-defaults788,33670
(defun pullneg-match pullneg-match838,36036
(defun pullneg-match1 pullneg-match1865,37289
(defun pullneg-short pullneg-short883,37959
(defun pullneg-legal pullneg-legal891,38168
(defun pullneg-legal-hyps pullneg-legal-hyps902,38536
(defun pullneg-legal-wffs pullneg-legal-wffs937,40091
(defmexpr pushnegpushneg973,41766
(defrulewffs pushnegpushneg985,42285
(defsrule pushnegpushneg994,42516
(defun pushneg-build pushneg-build1003,42647
(defun pushneg-enter pushneg-enter1039,44411
(defun pushneg-defaults pushneg-defaults1049,44731
(defun pushneg-hyp-defaults pushneg-hyp-defaults1099,47206
(defun pushneg-match pushneg-match1149,49572
(defun pushneg-match1 pushneg-match11195,51764
(defun pushneg-short pushneg-short1213,52448
(defun pushneg-legal pushneg-legal1221,52657
(defun pushneg-legal-hyps pushneg-legal-hyps1232,53025
(defun pushneg-legal-wffs pushneg-legal-wffs1267,54580

ml1-logic3b.lisp,1684
(defrulefile ml1-logic3bml1-logic3b21,784
(defmexpr absurdabsurd35,951
(defrulewffs absurdabsurd47,1404
(defsrule absurdabsurd55,1559
(defun absurd-build absurd-build64,1686
(defun absurd-enter absurd-enter99,3383
(defun absurd-defaults absurd-defaults107,3646
(defun absurd-hyp-defaults absurd-hyp-defaults152,5801
(defun absurd-match absurd-match201,8127
(defun absurd-match1 absurd-match1228,9365
(defun absurd-short absurd-short240,9745
(defun absurd-legal absurd-legal248,9942
(defun absurd-legal-hyps absurd-legal-hyps259,10265
(defun absurd-legal-wffs absurd-legal-wffs294,11791
(defmexpr enegeneg330,13396
(defrulewffs enegeneg342,13898
(defsrule enegeneg351,14070
(defun eneg-build eneg-build360,14189
(defun eneg-enter eneg-enter395,15939
(defun eneg-defaults eneg-defaults405,16242
(defun eneg-hyp-defaults eneg-hyp-defaults452,18537
(defun eneg-match eneg-match508,21216
(defun eneg-match1 eneg-match1559,23685
(defun eneg-short eneg-short574,24288
(defun eneg-legal eneg-legal583,24535
(defun eneg-legal-hyps eneg-legal-hyps594,24885
(defun eneg-legal-wffs eneg-legal-wffs631,26521
(defmexpr inegineg668,28159
(defrulewffs inegineg680,28690
(defsrule inegineg689,28862
(defun ineg-build ineg-build698,28981
(defun ineg-enter ineg-enter735,30837
(defun ineg-defaults ineg-defaults745,31140
(defun ineg-hyp-defaults ineg-hyp-defaults792,33451
(defun ineg-match ineg-match848,36142
(defun ineg-match1 ineg-match1875,37376
(defun ineg-short ineg-short887,37752
(defun ineg-legal ineg-legal895,37965
(defun ineg-legal-hyps ineg-legal-hyps906,38315
(defun ineg-legal-wffs ineg-legal-wffs942,39936

ml1-logic4.lisp,5355
(defrulefile ml1-logic4ml1-logic421,854
(defmexpr subst-wffsubst-wff35,1069
(defrulewffs subst-wffsubst-wff47,1696
(defsrule subst-wffsubst-wff57,1979
(defun subst-wff-build subst-wff-build66,2118
(defun subst-wff-enter subst-wff-enter107,3794
(defun subst-wff-defaults subst-wff-defaults115,4083
(defun subst-wff-hyp-defaults subst-wff-hyp-defaults163,6301
(defun subst-wff-match subst-wff-match207,8353
(defun subst-wff-match1 subst-wff-match1241,9796
(defun subst-wff-short subst-wff-short263,10567
(defun subst-wff-legal subst-wff-legal278,11023
(defun subst-wff-legal-hyps subst-wff-legal-hyps289,11373
(defun subst-wff-legal-wffs subst-wff-legal-wffs320,12704
(defmexpr subst-termsubst-term362,14392
(defrulewffs subst-termsubst-term374,15014
(defsrule subst-termsubst-term385,15348
(defun subst-term-build subst-term-build394,15491
(defun subst-term-enter subst-term-enter435,17188
(defun subst-term-defaults subst-term-defaults445,17509
(defun subst-term-hyp-defaults subst-term-hyp-defaults493,19770
(defun subst-term-match subst-term-match537,21831
(defun subst-term-match1 subst-term-match1572,23315
(defun subst-term-short subst-term-short598,24278
(defun subst-term-legal subst-term-legal613,24744
(defun subst-term-legal-hyps subst-term-legal-hyps624,25109
(defun subst-term-legal-wffs subst-term-legal-wffs655,26449
(defmexpr idefidef700,28094
(defrulewffs idefidef712,28630
(defsrule idefidef722,28831
(defun idef-build idef-build731,28950
(defun idef-enter idef-enter771,30548
(defun idef-defaults idef-defaults779,30825
(defun idef-hyp-defaults idef-hyp-defaults824,32896
(defun idef-match idef-match868,34949
(defun idef-match1 idef-match1893,35987
(defun idef-short idef-short911,36484
(defun idef-legal idef-legal924,36782
(defun idef-legal-hyps idef-legal-hyps935,37126
(defun idef-legal-wffs idef-legal-wffs966,38458
(defmexpr edefedef1007,40059
(defrulewffs edefedef1019,40593
(defsrule edefedef1028,40793
(defun edef-build edef-build1037,40912
(defun edef-enter edef-enter1077,42510
(defun edef-defaults edef-defaults1085,42795
(defun edef-hyp-defaults edef-hyp-defaults1130,44890
(defun edef-match edef-match1174,46943
(defun edef-match1 edef-match11208,48458
(defun edef-short edef-short1226,49027
(defun edef-legal edef-legal1239,49325
(defun edef-legal-hyps edef-legal-hyps1250,49669
(defun edef-legal-wffs edef-legal-wffs1281,51001
(defmexpr ab*ab*1324,52626
(defrulewffs ab*ab*1336,53121
(defsrule ab*ab*1345,53305
(defun ab*-build ab*-build1354,53420
(defun ab*-enter ab*-enter1393,54984
(defun ab*-defaults ab*-defaults1401,55253
(defun ab*-hyp-defaults ab*-hyp-defaults1444,57279
(defun ab*-match ab*-match1488,59317
(defun ab*-match1 ab*-match11522,60829
(defun ab*-short ab*-short1540,61395
(defun ab*-legal ab*-legal1553,61736
(defun ab*-legal-hyps ab*-legal-hyps1564,62056
(defun ab*-legal-wffs ab*-legal-wffs1595,63373
(defmexpr abeabe1635,64940
(defrulewffs abeabe1648,65674
(defsrule abeabe1660,66028
(defun abe-build abe-build1669,66143
(defun abe-enter abe-enter1709,67759
(defun abe-defaults abe-defaults1717,68044
(defun abe-hyp-defaults abe-hyp-defaults1762,70168
(defun abe-match abe-match1806,72222
(defun abe-match1 abe-match11841,73682
(defun abe-short abe-short1871,74791
(defun abe-legal abe-legal1886,75194
(defun abe-legal-hyps abe-legal-hyps1897,75538
(defun abe-legal-wffs abe-legal-wffs1928,76871
(defmexpr abuabu1969,78411
(defrulewffs abuabu1982,79109
(defsrule abuabu1994,79463
(defun abu-build abu-build2003,79578
(defun abu-enter abu-enter2043,81194
(defun abu-defaults abu-defaults2051,81471
(defun abu-hyp-defaults abu-hyp-defaults2096,83571
(defun abu-match abu-match2140,85625
(defun abu-match1 abu-match12167,86645
(defun abu-short abu-short2197,87634
(defun abu-legal abu-legal2212,88037
(defun abu-legal-hyps abu-legal-hyps2223,88381
(defun abu-legal-wffs abu-legal-wffs2254,89714
(defmexpr imp-disjimp-disj2297,91283
(defrulewffs imp-disjimp-disj2309,91814
(defsrule imp-disjimp-disj2317,91992
(defun imp-disj-build imp-disj-build2326,92127
(defun imp-disj-enter imp-disj-enter2366,93728
(defun imp-disj-defaults imp-disj-defaults2374,94007
(defun imp-disj-hyp-defaults imp-disj-hyp-defaults2419,96085
(defun imp-disj-match imp-disj-match2463,98128
(defun imp-disj-match1 imp-disj-match12497,99641
(defun imp-disj-short imp-disj-short2511,100036
(defun imp-disj-legal imp-disj-legal2524,100342
(defun imp-disj-legal-hyps imp-disj-legal-hyps2535,100677
(defun imp-disj-legal-wffs imp-disj-legal-wffs2566,101999
(defmexpr disj-impdisj-imp2607,103593
(defrulewffs disj-impdisj-imp2619,104124
(defsrule disj-impdisj-imp2627,104302
(defun disj-imp-build disj-imp-build2636,104437
(defun disj-imp-enter disj-imp-enter2676,106038
(defun disj-imp-defaults disj-imp-defaults2684,106317
(defun disj-imp-hyp-defaults disj-imp-hyp-defaults2729,108395
(defun disj-imp-match disj-imp-match2773,110438
(defun disj-imp-match1 disj-imp-match12807,111951
(defun disj-imp-short disj-imp-short2821,112346
(defun disj-imp-legal disj-imp-legal2834,112652
(defun disj-imp-legal-hyps disj-imp-legal-hyps2845,112987
(defun disj-imp-legal-wffs disj-imp-legal-wffs2876,114309

ml1-prior.lisp,1797
(deffile ml1-priorml1-prior13,614
(defmode math-logic-1-modemath-logic-1-mode18,743
(defmacro defprior defprior29,994
(defmacro defhint defhint32,1072
(defprior SAME SAME35,1137
(defhint SAME SAME36,1155
(defprior CASES CASES38,1219
(defhint CASES CASES39,1238
(defprior ECONJ ECONJ40,1292
(defhint ECONJ ECONJ41,1311
(defprior RULEC RULEC42,1365
(defhint RULEC RULEC43,1384
(defprior ICONJ ICONJ44,1449
(defhint ICONJ ICONJ45,1468
(defprior UGEN UGEN46,1522
(defhint UGEN UGEN47,1540
(defprior PULLNEG PULLNEG48,1602
(defhint PULLNEG PULLNEG49,1623
(defprior PUSHNEG PUSHNEG51,1716
(defhint PUSHNEG PUSHNEG52,1737
(defprior EDEF EDEF55,1830
(defhint EDEF EDEF56,1848
(defprior IDEF IDEF57,1907
(defhint IDEF IDEF58,1925
(defprior DEDUCT DEDUCT60,1985
(defhint DEDUCT DEDUCT61,2005
(defprior EGEN EGEN63,2062
(defhint EGEN EGEN64,2080
(defprior UI UI67,2231
(defhint UI UI68,2247
(defprior ABU ABU72,2390
(defhint ABU ABU73,2407
(defprior ABE ABE76,2564
(defhint ABE ABE77,2581
(defprior BACKCHAIN BACKCHAIN81,2724
(defhint BACKCHAIN BACKCHAIN82,2747
(defprior INDIRECT INDIRECT86,2966
(defhint INDIRECT INDIRECT87,2988
(defprior IDISJ-RIGHT IDISJ-RIGHT89,3116
(defhint IDISJ-RIGHT IDISJ-RIGHT90,3141
(defprior IDISJ-LEFT IDISJ-LEFT92,3280
(defhint IDISJ-LEFT IDISJ-LEFT93,3304
(defprior IMP-DISJ IMP-DISJ96,3444
(defhint IMP-DISJ IMP-DISJ97,3466
(defprior DISJ-IMP DISJ-IMP101,3611
(defhint DISJ-IMP DISJ-IMP102,3633
(defprior LEMMA LEMMA106,3792
(defhint LEMMA LEMMA107,3811
(defprior HYP HYP110,3968
(defhint HYP HYP111,3986
(defprior MP MP118,4295
(defprior AB* AB*120,4314
(defprior SUBST-TERM SUBST-TERM121,4333
(defprior SUBST-WFF SUBST-WFF122,4359
(defmexpr assertassert146,4875

ml1-scribe.lisp,366
(deffile ml1-scribeml1-scribe15,636
(defscribefont andand22,778
(defscribefont assertassert25,815
(defscribefont equivequiv28,858
(defscribefont impliesimplies31,899
(defscribefont negneg34,944
(defscribefont notnot37,981
(defscribefont forallforall40,1018
(defscribefont existsexists43,1061
(defscribefont oror46,1104
(defscribefont !!49,1139

ml1-theorems.lisp,1652
(deffile ml1-theoremsml1-theorems13,618
(deftheorem X2106X210652,1837
(deftheorem X2107X210763,2066
(deftheorem X2108X210874,2336
(deftheorem X2109X210984,2512
(deftheorem X2110X211094,2700
(deftheorem x2111x2111106,2981
(deftheorem x2112x2112117,3231
(deftheorem x2113x2113128,3505
(deftheorem x2114x2114139,3735
(deftheorem x2115x2115150,3968
(deftheorem x2116x2116162,4290
(deftheorem x2117x2117174,4586
(deftheorem x2118x2118185,4855
(deftheorem x2119x2119195,5075
(deftheorem x2120x2120205,5253
(deftheorem x2121x2121215,5472
(deftheorem x2122x2122225,5685
(deftheorem x2123x2123235,5913
(deftheorem x2124x2124245,6115
(deftheorem x2125x2125255,6324
(deftheorem x2126x2126265,6539
(deftheorem x2127x2127275,6754
(deftheorem x2128x2128285,6968
(deftheorem x2129x2129295,7184
(deftheorem x2130x2130307,7482
(deftheorem x2131x2131317,7689
(deftheorem x2132x2132328,7926
(deftheorem x2133x2133339,8154
(deftheorem x2134x2134350,8438
(deftheorem x2135x2135360,8665
(deftheorem x2136x2136370,8859
(deftheorem x2137x2137380,9053
(deftheorem x2138x2138390,9239
(defsavedwff x2200x2200405,9667
(defsavedwff x2201x2201408,9770
(defsavedwff x2202x2202411,9888
(defsavedwff x2203x2203414,9958
(defsavedwff x2204x2204417,10081
(defsavedwff x2205x2205420,10200
(defsavedwff x2206x2206423,10310
(defsavedwff x2207 x2207426,10435
(defsavedwff x2208 x2208429,10554
(defsavedwff x2209 x2209432,10674
(defsavedwff x2210x2210435,10806
(defsavedwff x2211 x2211438,10933
(defsavedwff x2212x2212441,11044
(defsavedwff x2213 x2213444,11163
(defsavedwff x2214x2214447,11294

ml2-abbrev2.lisp,579
(deffile ml2-abbrev2ml2-abbrev213,613
(def-abbrev sigma1sigma118,730
(def-binder exists1exists125,890
(def-binder that that37,1133
(def-abbrev condcond50,1429
(def-abbrev eqpeqp59,1633
(def-abbrev ncnc66,1883
(def-abbrev zerozero72,2032
(def-abbrev succsucc77,2133
(def-abbrev oneone83,2290
(def-abbrev natnat90,2428
(def-binder forallnforalln96,2600
(def-binder existsnexistsn106,2799
(def-abbrev finitefinite116,2994
(def-abbrev <=<=122,3130
(def-abbrev mumu129,3316
(def-binder mu-bindmu-bind135,3477
(def-abbrev recursionrecursion146,3685

ml2-abbrev.lisp,552
(deffile ml2-abbrevml2-abbrev19,796
(def-binder forallforall54,1497
(def-abbrev subsetsubset97,2462
(def-abbrev equivequiv105,2652
(def-binder existsexists112,2764
(def-abbrev %%133,3215
(def-abbrev complementcomplement141,3395
(def-abbrev equivsequivs151,3569
(def-abbrev intersectintersect160,3773
(def-abbrev powersetpowerset168,3962
(def-abbrev setequivsetequiv175,4126
(def-abbrev setintersectsetintersect184,4337
(def-abbrev setunionsetunion191,4525
(def-abbrev unionunion198,4703
(def-abbrev unitsetunitset238,5633

ml2-axioms.lisp,314
(deffile ml2-axiomsml2-axioms15,645
(defmacro defaxiom defaxiom20,766
(defaxiom refl=refl=25,858
(defaxiom sym=sym=29,941
(defaxiom descrdescr37,1134
(defaxiom extext41,1233
(defaxiom ext-leibext-leib45,1354
(defaxiom T5310T531049,1569
(defaxiom T5310AT5310A57,1705
(defaxiom T5302T530264,1842

ml2-const.lisp,413
(deffile ml2-constml2-const17,688
(def-typeconst oo24,816
(def-typeconst ii27,873
(def-typeabbrev ss30,929
(def-binder lambdalambda34,1012
(def-pmpropsym ==48,1279
(def-pmpropsym iotaiota55,1383
(def-logconst andand65,1637
(def-logconst oror73,1788
(def-logconst impliesimplies81,1949
(def-logconst notnot88,2085
(def-logconst falsehoodfalsehood100,2310
(def-logconst truthtruth106,2425

ml2-hacks.lisp,7510
(defrulefile ml2-hacksml2-hacks21,874
(defmexpr subst-equivsubst-equiv35,1139
(defrulewffs subst-equivsubst-equiv48,1937
(defsrule subst-equivsubst-equiv58,2219
(defun subst-equiv-build subst-equiv-build67,2366
(defun subst-equiv-enter subst-equiv-enter107,4309
(defun subst-equiv-defaultssubst-equiv-defaults117,4666
(defun subst-equiv-hyp-defaultssubst-equiv-hyp-defaults178,7669
(defun subst-equiv-match subst-equiv-match235,10379
(defun subst-equiv-match1 subst-equiv-match1281,12583
(defun subst-equiv-short subst-equiv-short299,13279
(defun subst-equiv-legal subst-equiv-legal310,13683
(defun subst-equiv-legal-hypssubst-equiv-legal-hyps323,14094
(defun subst-equiv-legal-wffssubst-equiv-legal-wffs361,15761
(defmexpr idisj-rightidisj-right402,17579
(defrulewffs idisj-rightidisj-right414,18103
(defsrule idisj-rightidisj-right422,18276
(defun idisj-right-build idisj-right-build431,18423
(defun idisj-right-enter idisj-right-enter467,20179
(defun idisj-right-defaults idisj-right-defaults476,20460
(defun idisj-right-hyp-defaults idisj-right-hyp-defaults525,22763
(defun idisj-right-match idisj-right-match574,25098
(defun idisj-right-match1 idisj-right-match1603,26424
(defun idisj-right-short idisj-right-short617,26894
(defun idisj-right-legal idisj-right-legal625,27111
(defun idisj-right-legal-hyps idisj-right-legal-hyps636,27455
(defun idisj-right-legal-wffs idisj-right-legal-wffs671,28990
(defmexpr idisj-leftidisj-left709,30673
(defrulewffs idisj-leftidisj-left721,31192
(defsrule idisj-leftidisj-left729,31362
(defun idisj-left-build idisj-left-build738,31505
(defun idisj-left-enter idisj-left-enter773,33240
(defun idisj-left-defaults idisj-left-defaults782,33519
(defun idisj-left-hyp-defaults idisj-left-hyp-defaults829,35782
(defun idisj-left-match idisj-left-match878,38116
(defun idisj-left-match1 idisj-left-match1907,39440
(defun idisj-left-short idisj-left-short921,39908
(defun idisj-left-legal idisj-left-legal929,40123
(defun idisj-left-legal-hyps idisj-left-legal-hyps940,40464
(defun idisj-left-legal-wffs idisj-left-legal-wffs975,41998
(defmexpr rulec1rulec11014,43681
(defrulewffs rulec1rulec11027,44543
(defsrule rulec1rulec11040,44891
(defun rulec1-buildrulec1-build1049,45018
(defun rulec1-enterrulec1-enter1092,47078
(defun rulec1-defaultsrulec1-defaults1103,47426
(defun rulec1-hyp-defaultsrulec1-hyp-defaults1157,50015
(defun rulec1-match rulec1-match1222,53094
(defun rulec1-match1 rulec1-match11277,55779
(defun rulec1-short rulec1-short1304,57009
(defun rulec1-legalrulec1-legal1314,57319
(defun rulec1-legal-hypsrulec1-legal-hyps1328,57740
(defun rulec1-legal-wffsrulec1-legal-wffs1368,59507
(defmexpr assoc-leftassoc-left1411,61343
(defrulewffs assoc-leftassoc-left1424,61931
(defsrule assoc-leftassoc-left1432,62105
(defun assoc-left-build assoc-left-build1441,62248
(defun assoc-left-enter assoc-left-enter1476,63999
(defun assoc-left-defaults assoc-left-defaults1486,64313
(defun assoc-left-hyp-defaults assoc-left-hyp-defaults1536,66756
(defun assoc-left-match assoc-left-match1585,69102
(defun assoc-left-match1 assoc-left-match11629,71203
(defun assoc-left-short assoc-left-short1643,71685
(defun assoc-left-legal assoc-left-legal1651,71900
(defun assoc-left-legal-hyps assoc-left-legal-hyps1662,72259
(defun assoc-left-legal-wffs assoc-left-legal-wffs1697,73805
(defmexpr cases4cases41734,75488
(defrulewffs cases4cases41746,76635
(defsrule cases4cases41762,77002
(defun cases4-buildcases4-build1771,77129
(defun cases4-entercases4-enter1831,80116
(defun cases4-defaultscases4-defaults1846,80687
(defun cases4-hyp-defaultscases4-hyp-defaults1918,84325
(defun cases4-match cases4-match2021,89419
(defun cases4-match1 cases4-match12072,91895
(defun cases4-short cases4-short2089,92585
(defun cases4-legalcases4-legal2101,93075
(defun cases4-legal-hypscases4-legal-hyps2118,93721
(defun cases4-legal-wffscases4-legal-wffs2170,96162
(defmexpr cases3cases32215,98204
(defrulewffs cases3cases32227,99229
(defsrule cases3cases32241,99539
(defun cases3-buildcases3-build2250,99666
(defun cases3-entercases3-enter2305,102343
(defun cases3-defaultscases3-defaults2318,102813
(defun cases3-hyp-defaultscases3-hyp-defaults2382,106022
(defun cases3-match cases3-match2473,110443
(defun cases3-match1 cases3-match12524,112918
(defun cases3-short cases3-short2539,113527
(defun cases3-legalcases3-legal2550,113946
(defun cases3-legal-hypscases3-legal-hyps2565,114504
(defun cases3-legal-wffscases3-legal-wffs2613,116711
(defmexpr imp-disj-rimp-disj-r2656,118640
(defrulewffs imp-disj-rimp-disj-r2668,119181
(defsrule imp-disj-rimp-disj-r2676,119365
(defun imp-disj-r-build imp-disj-r-build2685,119508
(defun imp-disj-r-enter imp-disj-r-enter2720,121246
(defun imp-disj-r-defaults imp-disj-r-defaults2730,121548
(defun imp-disj-r-hyp-defaults imp-disj-r-hyp-defaults2780,123942
(defun imp-disj-r-match imp-disj-r-match2829,126276
(defun imp-disj-r-match1 imp-disj-r-match12873,128377
(defun imp-disj-r-short imp-disj-r-short2887,128859
(defun imp-disj-r-legal imp-disj-r-legal2895,129074
(defun imp-disj-r-legal-hyps imp-disj-r-legal-hyps2906,129415
(defun imp-disj-r-legal-wffs imp-disj-r-legal-wffs2941,130949
(defmexpr imp-disj-limp-disj-l2978,132611
(defrulewffs imp-disj-limp-disj-l2990,133152
(defsrule imp-disj-limp-disj-l2998,133336
(defun imp-disj-l-build imp-disj-l-build3007,133479
(defun imp-disj-l-enter imp-disj-l-enter3042,135217
(defun imp-disj-l-defaults imp-disj-l-defaults3052,135519
(defun imp-disj-l-hyp-defaults imp-disj-l-hyp-defaults3102,137913
(defun imp-disj-l-match imp-disj-l-match3151,140247
(defun imp-disj-l-match1 imp-disj-l-match13195,142348
(defun imp-disj-l-short imp-disj-l-short3209,142830
(defun imp-disj-l-legal imp-disj-l-legal3217,143045
(defun imp-disj-l-legal-hyps imp-disj-l-legal-hyps3228,143386
(defun imp-disj-l-legal-wffs imp-disj-l-legal-wffs3263,144920
(defmexpr disj-imp-rdisj-imp-r3300,146582
(defrulewffs disj-imp-rdisj-imp-r3312,147123
(defsrule disj-imp-rdisj-imp-r3320,147307
(defun disj-imp-r-build disj-imp-r-build3329,147450
(defun disj-imp-r-enter disj-imp-r-enter3364,149188
(defun disj-imp-r-defaults disj-imp-r-defaults3374,149490
(defun disj-imp-r-hyp-defaults disj-imp-r-hyp-defaults3424,151884
(defun disj-imp-r-match disj-imp-r-match3473,154218
(defun disj-imp-r-match1 disj-imp-r-match13517,156319
(defun disj-imp-r-short disj-imp-r-short3531,156801
(defun disj-imp-r-legal disj-imp-r-legal3539,157016
(defun disj-imp-r-legal-hyps disj-imp-r-legal-hyps3550,157357
(defun disj-imp-r-legal-wffs disj-imp-r-legal-wffs3585,158891
(defmexpr disj-imp-ldisj-imp-l3622,160553
(defrulewffs disj-imp-ldisj-imp-l3634,161094
(defsrule disj-imp-ldisj-imp-l3642,161278
(defun disj-imp-l-build disj-imp-l-build3651,161421
(defun disj-imp-l-enter disj-imp-l-enter3686,163159
(defun disj-imp-l-defaults disj-imp-l-defaults3696,163461
(defun disj-imp-l-hyp-defaults disj-imp-l-hyp-defaults3746,165855
(defun disj-imp-l-match disj-imp-l-match3795,168189
(defun disj-imp-l-match1 disj-imp-l-match13839,170290
(defun disj-imp-l-short disj-imp-l-short3853,170772
(defun disj-imp-l-legal disj-imp-l-legal3861,170987
(defun disj-imp-l-legal-hyps disj-imp-l-legal-hyps3872,171328
(defun disj-imp-l-legal-wffs disj-imp-l-legal-wffs3907,172862

ml2-logic1a.lisp,2827
(defrulefile ml2-logic1aml2-logic1a21,796
(defmexpr itruthitruth35,976
(defrulewffs itruthitruth47,1315
(defsrule itruthitruth54,1442
(defun itruth-build itruth-build63,1569
(defun itruth-enter itruth-enter97,3173
(defun itruth-defaults itruth-defaults105,3403
(defun itruth-hyp-defaults itruth-hyp-defaults149,5416
(defun itruth-match itruth-match193,7441
(defun itruth-match1 itruth-match1220,8679
(defun itruth-short itruth-short232,9059
(defun itruth-legal itruth-legal239,9207
(defun itruth-legal-hyps itruth-legal-hyps250,9491
(defun itruth-legal-wffs itruth-legal-wffs283,10901
(defmexpr iconjiconj319,12464
(defrulewffs iconjiconj331,13032
(defsrule iconjiconj340,13211
(defun iconj-build iconj-build349,13334
(defun iconj-enter iconj-enter384,15102
(defun iconj-defaults iconj-defaults394,15417
(defun iconj-hyp-defaults iconj-hyp-defaults441,17780
(defun iconj-match iconj-match497,20464
(defun iconj-match1 iconj-match1524,21700
(defun iconj-short iconj-short536,22078
(defun iconj-legal iconj-legal545,22322
(defun iconj-legal-hyps iconj-legal-hyps556,22681
(defun iconj-legal-wffs iconj-legal-wffs593,24322
(defmexpr econjeconj630,25980
(defrulewffs econjeconj642,26548
(defsrule econjeconj651,26727
(defun econj-build econj-build660,26850
(defun econj-enter econj-enter697,28727
(defun econj-defaults econj-defaults707,29044
(defun econj-hyp-defaults econj-hyp-defaults756,31483
(defun econj-match econj-match811,34131
(defun econj-match1 econj-match1855,36222
(defun econj-short econj-short867,36614
(defun econj-legal econj-legal876,36858
(defun econj-legal-hyps econj-legal-hyps887,37217
(defun econj-legal-wffs econj-legal-wffs923,38824
(defmexpr mpmp960,40479
(defrulewffs mpmp972,41042
(defsrule mpmp981,41213
(defun mp-build mp-build990,41324
(defun mp-enter mp-enter1026,43089
(defun mp-defaults mp-defaults1036,43409
(defun mp-hyp-defaults mp-hyp-defaults1086,45921
(defun mp-match mp-match1142,48602
(defun mp-match1 mp-match11184,50601
(defun mp-short mp-short1196,50987
(defun mp-legal mp-legal1204,51206
(defun mp-legal-hyps mp-legal-hyps1215,51556
(defun mp-legal-wffs mp-legal-wffs1252,53194
(defmexpr deductdeduct1289,54835
(defrulewffs deductdeduct1301,55396
(defsrule deductdeduct1310,55583
(defun deduct-build deduct-build1319,55710
(defun deduct-enter deduct-enter1356,57591
(defun deduct-defaults deduct-defaults1366,57902
(defun deduct-hyp-defaults deduct-hyp-defaults1414,60279
(defun deduct-match deduct-match1470,62976
(defun deduct-match1 deduct-match11497,64214
(defun deduct-short deduct-short1509,64594
(defun deduct-legal deduct-legal1518,64840
(defun deduct-legal-hyps deduct-legal-hyps1529,65202
(defun deduct-legal-wffs deduct-legal-wffs1565,66829

ml2-logic1b.lisp,1250
(defrulefile ml2-logic1bml2-logic1b21,783
(defmexpr indirect1indirect135,953
(defrulewffs indirect1indirect147,1617
(defsrule indirect1indirect156,1814
(defun indirect1-build indirect1-build65,1953
(defun indirect1-enter indirect1-enter103,3882
(defun indirect1-defaults indirect1-defaults113,4199
(defun indirect1-hyp-defaults indirect1-hyp-defaults161,6584
(defun indirect1-match indirect1-match217,9284
(defun indirect1-match1 indirect1-match1246,10606
(defun indirect1-short indirect1-short260,11072
(defun indirect1-legal indirect1-legal270,11388
(defun indirect1-legal-hyps indirect1-legal-hyps281,11759
(defun indirect1-legal-wffs indirect1-legal-wffs317,13389
(defmexpr casescases355,15087
(defrulewffs casescases367,15906
(defsrule casescases379,16153
(defun cases-buildcases-build388,16276
(defun cases-entercases-enter436,18587
(defun cases-defaultscases-defaults449,19007
(defun cases-hyp-defaultscases-hyp-defaults510,21952
(defun cases-match cases-match588,25700
(defun cases-match1 cases-match1639,28172
(defun cases-short cases-short654,28778
(defun cases-legalcases-legal664,29126
(defun cases-legal-hypscases-legal-hyps679,29643
(defun cases-legal-wffscases-legal-wffs723,31619

ml2-logic1c.lisp,1328
(defrulefile ml2-logic1cml2-logic1c21,786
(defmexpr indirectindirect35,958
(defrulewffs indirectindirect47,1530
(defsrule indirectindirect56,1718
(defun indirect-build indirect-build65,1853
(defun indirect-enter indirect-enter103,3757
(defun indirect-defaults indirect-defaults113,4068
(defun indirect-hyp-defaults indirect-hyp-defaults161,6406
(defun indirect-match indirect-match217,9101
(defun indirect-match1 indirect-match1246,10421
(defun indirect-short indirect-short260,10885
(defun indirect-legal indirect-legal268,11106
(defun indirect-legal-hyps indirect-legal-hyps279,11468
(defun indirect-legal-wffs indirect-legal-wffs315,13093
(defmexpr indirect2indirect2353,14772
(defrulewffs indirect2indirect2365,15557
(defsrule indirect2indirect2375,15772
(defun indirect2-buildindirect2-build384,15911
(defun indirect2-enterindirect2-enter426,17953
(defun indirect2-defaultsindirect2-defaults437,18308
(defun indirect2-hyp-defaultsindirect2-hyp-defaults489,20951
(defun indirect2-match indirect2-match554,24031
(defun indirect2-match1 indirect2-match1583,25353
(defun indirect2-short indirect2-short597,25819
(defun indirect2-legalindirect2-legal607,26155
(defun indirect2-legal-hypsindirect2-legal-hyps621,26615
(defun indirect2-legal-wffsindirect2-legal-wffs661,28380

ml2-logic2a.lisp,1049
(defrulefile ml2-logic2aml2-logic2a21,775
(defmexpr uiui35,931
(defrulewffs uiui47,1517
(defsrule uiui56,1737
(defun ui-build ui-build65,1848
(defun ui-enter ui-enter101,3608
(defun ui-defaults ui-defaults111,3923
(defun ui-hyp-defaults ui-hyp-defaults161,6388
(defun ui-match ui-match211,8751
(defun ui-match1 ui-match1255,10842
(defun ui-short ui-short271,11431
(defun ui-legal ui-legal283,11820
(defun ui-legal-hyps ui-legal-hyps294,12176
(defun ui-legal-wffs ui-legal-wffs329,13728
(defmexpr ugenugen365,15381
(defrulewffs ugenugen377,15918
(defsrule ugenugen387,16159
(defun ugen-build ugen-build396,16278
(defun ugen-enter ugen-enter431,17993
(defun ugen-defaults ugen-defaults440,18264
(defun ugen-hyp-defaults ugen-hyp-defaults486,20493
(defun ugen-match ugen-match535,22825
(defun ugen-match1 ugen-match1562,24081
(defun ugen-short ugen-short582,24867
(defun ugen-legal ugen-legal590,25070
(defun ugen-legal-hyps ugen-legal-hyps601,25399
(defun ugen-legal-wffs ugen-legal-wffs636,26931

ml2-logic2b.lisp,1120
(defrulefile ml2-logic2bml2-logic2b21,778
(defmexpr egenegen35,939
(defrulewffs egenegen47,1578
(defsrule egenegen56,1806
(defun egen-build egen-build65,1925
(defun egen-enter egen-enter102,3719
(defun egen-defaults egen-defaults111,4012
(defun egen-hyp-defaults egen-hyp-defaults160,6400
(defun egen-match egen-match210,8765
(defun egen-match1 egen-match1237,10009
(defun egen-short egen-short253,10590
(defun egen-legal egen-legal265,10983
(defun egen-legal-hyps egen-legal-hyps276,11345
(defun egen-legal-wffs egen-legal-wffs311,12899
(defmexpr rulecrulec348,14587
(defrulewffs rulecrulec360,15425
(defsrule rulecrulec374,15857
(defun rulec-buildrulec-build383,15980
(defun rulec-enterrulec-enter426,18084
(defun rulec-defaultsrulec-defaults438,18469
(defun rulec-hyp-defaultsrulec-hyp-defaults494,21234
(defun rulec-match rulec-match560,24345
(defun rulec-match1 rulec-match1616,27080
(defun rulec-short rulec-short647,28510
(defun rulec-legalrulec-legal661,29008
(defun rulec-legal-hypsrulec-legal-hyps675,29493
(defun rulec-legal-wffsrulec-legal-wffs716,31292

ml2-logic4a.lisp,1818
(defrulefile ml2-logic4aml2-logic4a21,789
(defmexpr abuabu35,960
(defrulewffs abuabu48,1663
(defsrule abuabu60,2020
(defun abu-build abu-build69,2135
(defun abu-enter abu-enter105,3892
(defun abu-defaults abu-defaults114,4173
(defun abu-hyp-defaults abu-hyp-defaults162,6499
(defun abu-match abu-match211,8842
(defun abu-match1 abu-match1239,10138
(defun abu-short abu-short267,11328
(defun abu-legal abu-legal279,11719
(defun abu-legal-hyps abu-legal-hyps290,12063
(defun abu-legal-wffs abu-legal-wffs325,13606
(defmexpr imp-disjimp-disj365,15351
(defrulewffs imp-disjimp-disj377,15882
(defsrule imp-disjimp-disj385,16060
(defun imp-disj-build imp-disj-build394,16195
(defun imp-disj-enter imp-disj-enter429,17921
(defun imp-disj-defaults imp-disj-defaults439,18219
(defun imp-disj-hyp-defaults imp-disj-hyp-defaults488,20582
(defun imp-disj-match imp-disj-match537,22914
(defun imp-disj-match1 imp-disj-match1581,25011
(defun imp-disj-short imp-disj-short595,25489
(defun imp-disj-legal imp-disj-legal603,25700
(defun imp-disj-legal-hyps imp-disj-legal-hyps614,26035
(defun imp-disj-legal-wffs imp-disj-legal-wffs649,27567
(defmexpr disj-impdisj-imp685,29201
(defrulewffs disj-impdisj-imp697,29732
(defsrule disj-impdisj-imp705,29910
(defun disj-imp-build disj-imp-build714,30045
(defun disj-imp-enter disj-imp-enter749,31771
(defun disj-imp-defaults disj-imp-defaults759,32069
(defun disj-imp-hyp-defaults disj-imp-hyp-defaults808,34432
(defun disj-imp-match disj-imp-match857,36764
(defun disj-imp-match1 disj-imp-match1901,38861
(defun disj-imp-short disj-imp-short915,39339
(defun disj-imp-legal disj-imp-legal923,39550
(defun disj-imp-legal-hyps disj-imp-legal-hyps934,39885
(defun disj-imp-legal-wffs disj-imp-legal-wffs969,41417

ml2-logic4b.lisp,1584
(defrulefile ml2-logic4bml2-logic4b21,780
(defmexpr edefedef35,942
(defrulewffs edefedef47,1477
(defsrule edefedef56,1676
(defun edef-build edef-build65,1795
(defun edef-enter edef-enter100,3518
(defun edef-defaults edef-defaults110,3822
(defun edef-hyp-defaults edef-hyp-defaults159,6219
(defun edef-match edef-match208,8561
(defun edef-match1 edef-match1254,10744
(defun edef-short edef-short270,11339
(defun edef-legal edef-legal278,11542
(defun edef-legal-hyps edef-legal-hyps289,11886
(defun edef-legal-wffs edef-legal-wffs324,13428
(defmexpr ab*ab*362,15093
(defrulewffs ab*ab*374,15588
(defsrule ab*ab*383,15772
(defun ab*-build ab*-build392,15887
(defun ab*-enter ab*-enter427,17582
(defun ab*-defaults ab*-defaults436,17866
(defun ab*-hyp-defaults ab*-hyp-defaults484,20162
(defun ab*-match ab*-match533,22489
(defun ab*-match1 ab*-match1577,24583
(defun ab*-short ab*-short593,25175
(defun ab*-legal ab*-legal602,25440
(defun ab*-legal-hyps ab*-legal-hyps613,25760
(defun ab*-legal-wffs ab*-legal-wffs648,27287
(defmexpr abeabe684,28900
(defrulewffs abeabe697,29639
(defsrule abeabe709,29996
(defun abe-build abe-build718,30111
(defun abe-enter abe-enter754,31868
(defun abe-defaults abe-defaults764,32172
(defun abe-hyp-defaults abe-hyp-defaults815,34629
(defun abe-match abe-match864,36972
(defun abe-match1 abe-match1911,39228
(defun abe-short abe-short939,40432
(defun abe-legal abe-legal951,40823
(defun abe-legal-hyps abe-legal-hyps962,41167
(defun abe-legal-wffs abe-legal-wffs997,42710

ml2-logic4c.lisp,1257
(defrulefile ml2-logic4cml2-logic4c21,783
(defmexpr substitutesubstitute35,955
(defrulewffs substitutesubstitute47,1569
(defsrule substitutesubstitute58,1903
(defun substitute-build substitute-build67,2046
(defun substitute-enter substitute-enter106,3948
(defun substitute-defaults substitute-defaults116,4269
(defun substitute-hyp-defaults substitute-hyp-defaults170,6856
(defun substitute-match substitute-match219,9206
(defun substitute-match1 substitute-match1267,11529
(defun substitute-short substitute-short293,12644
(defun substitute-legal substitute-legal309,13219
(defun substitute-legal-hyps substitute-legal-hyps320,13584
(defun substitute-legal-wffs substitute-legal-wffs355,15134
(defmexpr idefidef398,16991
(defrulewffs idefidef410,17507
(defsrule idefidef419,17706
(defun idef-build idef-build428,17825
(defun idef-enter idef-enter463,19548
(defun idef-defaults idef-defaults472,19829
(defun idef-hyp-defaults idef-hyp-defaults518,22095
(defun idef-match idef-match567,24437
(defun idef-match1 idef-match1594,25681
(defun idef-short idef-short610,26262
(defun idef-legal idef-legal618,26465
(defun idef-legal-hyps idef-legal-hyps629,26809
(defun idef-legal-wffs idef-legal-wffs664,28351

ml2-logic5a.lisp,1491
(defrulefile ml2-logic5aml2-logic5a21,792
(defmexpr equiv-wffsequiv-wffs35,972
(defrulewffs equiv-wffsequiv-wffs47,1483
(defsrule equiv-wffsequiv-wffs56,1696
(defun equiv-wffs-build equiv-wffs-build65,1839
(defun equiv-wffs-enter equiv-wffs-enter100,3576
(defun equiv-wffs-defaults equiv-wffs-defaults110,3878
(defun equiv-wffs-hyp-defaults equiv-wffs-hyp-defaults160,6273
(defun equiv-wffs-match equiv-wffs-match209,8607
(defun equiv-wffs-match1 equiv-wffs-match1255,10808
(defun equiv-wffs-short equiv-wffs-short273,11501
(defun equiv-wffs-legal equiv-wffs-legal282,11780
(defun equiv-wffs-legal-hyps equiv-wffs-legal-hyps293,12121
(defun equiv-wffs-legal-wffs equiv-wffs-legal-wffs328,13655
(defmexpr implics-equivimplics-equiv367,15360
(defrulewffs implics-equivimplics-equiv379,15924
(defsrule implics-equivimplics-equiv387,16143
(defun implics-equiv-build implics-equiv-build396,16298
(defun implics-equiv-enter implics-equiv-enter433,18081
(defun implics-equiv-defaults implics-equiv-defaults442,18366
(defun implics-equiv-hyp-defaults implics-equiv-hyp-defaults491,20686
(defun implics-equiv-match implics-equiv-match540,23023
(defun implics-equiv-match1 implics-equiv-match1569,24353
(defun implics-equiv-short implics-equiv-short583,24827
(defun implics-equiv-legal implics-equiv-legal591,25048
(defun implics-equiv-legal-hyps implics-equiv-legal-hyps602,25398
(defun implics-equiv-legal-wffs implics-equiv-legal-wffs637,26935

ml2-logic5b.lisp,4920
(defrulefile ml2-logic5bml2-logic5b21,844
(defmexpr equiv-implicsequiv-implics35,1079
(defrulewffs equiv-implicsequiv-implics47,1643
(defsrule equiv-implicsequiv-implics55,1862
(defun equiv-implics-build equiv-implics-build64,2017
(defun equiv-implics-enter equiv-implics-enter101,3800
(defun equiv-implics-defaults equiv-implics-defaults111,4108
(defun equiv-implics-hyp-defaults equiv-implics-hyp-defaults163,6559
(defun equiv-implics-match equiv-implics-match212,8896
(defun equiv-implics-match1 equiv-implics-match1256,11003
(defun equiv-implics-short equiv-implics-short270,11491
(defun equiv-implics-legal equiv-implics-legal278,11712
(defun equiv-implics-legal-hyps equiv-implics-legal-hyps289,12062
(defun equiv-implics-legal-wffs equiv-implics-legal-wffs324,13599
(defmexpr lexpd*-etalexpd*-eta364,15318
(defrulewffs lexpd*-etalexpd*-eta376,15852
(defsrule lexpd*-etalexpd*-eta384,16028
(defun lexpd*-eta-build lexpd*-eta-build393,16171
(defun lexpd*-eta-enter lexpd*-eta-enter428,17931
(defun lexpd*-eta-defaults lexpd*-eta-defaults437,18226
(defun lexpd*-eta-hyp-defaults lexpd*-eta-hyp-defaults484,20551
(defun lexpd*-eta-match lexpd*-eta-match533,22901
(defun lexpd*-eta-match1 lexpd*-eta-match1562,24225
(defun lexpd*-eta-short lexpd*-eta-short576,24693
(defun lexpd*-eta-legal lexpd*-eta-legal584,24908
(defun lexpd*-eta-legal-hyps lexpd*-eta-legal-hyps595,25273
(defun lexpd*-eta-legal-wffs lexpd*-eta-legal-wffs630,26823
(defmexpr lcontr*-etalcontr*-eta667,28515
(defrulewffs lcontr*-etalcontr*-eta679,29056
(defsrule lcontr*-etalcontr*-eta687,29235
(defun lcontr*-eta-build lcontr*-eta-build696,29382
(defun lcontr*-eta-enter lcontr*-eta-enter732,31163
(defun lcontr*-eta-defaults lcontr*-eta-defaults742,31483
(defun lcontr*-eta-hyp-defaults lcontr*-eta-hyp-defaults794,33980
(defun lcontr*-eta-match lcontr*-eta-match843,36331
(defun lcontr*-eta-match1 lcontr*-eta-match1887,38434
(defun lcontr*-eta-short lcontr*-eta-short901,38918
(defun lcontr*-eta-legal lcontr*-eta-legal909,39135
(defun lcontr*-eta-legal-hyps lcontr*-eta-legal-hyps920,39503
(defun lcontr*-eta-legal-wffs lcontr*-eta-legal-wffs955,41054
(defmexpr lexpd*-betalexpd*-beta993,42768
(defrulewffs lexpd*-betalexpd*-beta1005,43312
(defsrule lexpd*-betalexpd*-beta1013,43492
(defun lexpd*-beta-build lexpd*-beta-build1022,43639
(defun lexpd*-beta-enter lexpd*-beta-enter1059,45436
(defun lexpd*-beta-defaults lexpd*-beta-defaults1068,45735
(defun lexpd*-beta-hyp-defaults lexpd*-beta-hyp-defaults1117,48107
(defun lexpd*-beta-match lexpd*-beta-match1166,50460
(defun lexpd*-beta-match1 lexpd*-beta-match11195,51786
(defun lexpd*-beta-short lexpd*-beta-short1209,52256
(defun lexpd*-beta-legal lexpd*-beta-legal1217,52473
(defun lexpd*-beta-legal-hyps lexpd*-beta-legal-hyps1228,52844
(defun lexpd*-beta-legal-wffs lexpd*-beta-legal-wffs1263,54397
(defmexpr lcontr*-betalcontr*-beta1301,56114
(defrulewffs lcontr*-betalcontr*-beta1313,56665
(defsrule lcontr*-betalcontr*-beta1321,56848
(defun lcontr*-beta-build lcontr*-beta-build1330,56999
(defun lcontr*-beta-enter lcontr*-beta-enter1367,58801
(defun lcontr*-beta-defaults lcontr*-beta-defaults1377,59125
(defun lcontr*-beta-hyp-defaults lcontr*-beta-hyp-defaults1429,61637
(defun lcontr*-beta-match lcontr*-beta-match1478,63991
(defun lcontr*-beta-match1 lcontr*-beta-match11522,66096
(defun lcontr*-beta-short lcontr*-beta-short1536,66582
(defun lcontr*-beta-legal lcontr*-beta-legal1544,66801
(defun lcontr*-beta-legal-hyps lcontr*-beta-legal-hyps1555,67175
(defun lcontr*-beta-legal-wffs lcontr*-beta-legal-wffs1590,68729
(defmexpr lexpd*lexpd*1628,70446
(defrulewffs lexpd*lexpd*1641,71029
(defsrule lexpd*lexpd*1649,71189
(defun lexpd*-build lexpd*-build1658,71316
(defun lexpd*-enter lexpd*-enter1693,73042
(defun lexpd*-defaults lexpd*-defaults1702,73321
(defun lexpd*-hyp-defaults lexpd*-hyp-defaults1748,75589
(defun lexpd*-match lexpd*-match1797,77927
(defun lexpd*-match1 lexpd*-match11824,79165
(defun lexpd*-short lexpd*-short1836,79545
(defun lexpd*-legal lexpd*-legal1844,79752
(defun lexpd*-legal-hyps lexpd*-legal-hyps1855,80093
(defun lexpd*-legal-wffs lexpd*-legal-wffs1890,81631
(defmexpr lcontr*lcontr*1926,83271
(defrulewffs lcontr*lcontr*1939,83861
(defsrule lcontr*lcontr*1947,84024
(defun lcontr*-build lcontr*-build1956,84155
(defun lcontr*-enter lcontr*-enter1991,85886
(defun lcontr*-defaults lcontr*-defaults2001,86190
(defun lcontr*-hyp-defaults lcontr*-hyp-defaults2050,88599
(defun lcontr*-match lcontr*-match2099,90938
(defun lcontr*-match1 lcontr*-match12143,93033
(defun lcontr*-short lcontr*-short2157,93509
(defun lcontr*-legal lcontr*-legal2165,93718
(defun lcontr*-legal-hyps lcontr*-legal-hyps2176,94062
(defun lcontr*-legal-wffs lcontr*-legal-wffs2211,95601

ml2-logic7a.lisp,5664
(defrulefile ml2-logic7aml2-logic7a21,857
(defmexpr subst=rsubst=r35,1103
(defrulewffs subst=rsubst=r48,1878
(defsrule subst=rsubst=r58,2134
(defun subst=r-build subst=r-build67,2265
(defun subst=r-enter subst=r-enter106,4156
(defun subst=r-defaults subst=r-defaults116,4505
(defun subst=r-hyp-defaultssubst=r-hyp-defaults175,7486
(defun subst=r-match subst=r-match232,10192
(defun subst=r-match1 subst=r-match1278,12384
(defun subst=r-short subst=r-short296,13068
(defun subst=r-legal subst=r-legal307,13464
(defun subst=r-legal-hypssubst=r-legal-hyps318,13853
(defun subst=r-legal-wffssubst=r-legal-wffs356,15516
(defmexpr subst=lsubst=l396,17277
(defrulewffs subst=lsubst=l409,18052
(defsrule subst=lsubst=l419,18308
(defun subst=l-build subst=l-build428,18439
(defun subst=l-enter subst=l-enter467,20330
(defun subst=l-defaults subst=l-defaults477,20679
(defun subst=l-hyp-defaultssubst=l-hyp-defaults536,23660
(defun subst=l-match subst=l-match593,26366
(defun subst=l-match1 subst=l-match1639,28558
(defun subst=l-short subst=l-short657,29242
(defun subst=l-legal subst=l-legal668,29638
(defun subst=l-legal-hypssubst=l-legal-hyps679,30027
(defun subst=l-legal-wffssubst=l-legal-wffs717,31690
(defmexpr equiv-eq-contr*equiv-eq-contr*757,33459
(defrulewffs equiv-eq-contr*equiv-eq-contr*770,34073
(defsrule equiv-eq-contr*equiv-eq-contr*778,34277
(defun equiv-eq-contr*-buildequiv-eq-contr*-build787,34440
(defun equiv-eq-contr*-enterequiv-eq-contr*-enter826,36312
(defun equiv-eq-contr*-defaultsequiv-eq-contr*-defaults837,36652
(defun equiv-eq-contr*-hyp-defaultsequiv-eq-contr*-hyp-defaults889,39179
(defun equiv-eq-contr*-match equiv-eq-contr*-match940,41575
(defun equiv-eq-contr*-match1 equiv-eq-contr*-match1969,42909
(defun equiv-eq-contr*-short equiv-eq-contr*-short983,43387
(defun equiv-eq-contr*-legalequiv-eq-contr*-legal991,43612
(defun equiv-eq-contr*-legal-hypsequiv-eq-contr*-legal-hyps1005,44045
(defun equiv-eq-contr*-legal-wffsequiv-eq-contr*-legal-wffs1042,45641
(defmexpr equiv-eq-expd*equiv-eq-expd*1081,47412
(defrulewffs equiv-eq-expd*equiv-eq-expd*1093,47978
(defsrule equiv-eq-expd*equiv-eq-expd*1101,48179
(defun equiv-eq-expd*-buildequiv-eq-expd*-build1110,48338
(defun equiv-eq-expd*-enterequiv-eq-expd*-enter1149,50205
(defun equiv-eq-expd*-defaultsequiv-eq-expd*-defaults1161,50566
(defun equiv-eq-expd*-hyp-defaultsequiv-eq-expd*-hyp-defaults1216,53215
(defun equiv-eq-expd*-match equiv-eq-expd*-match1267,55610
(defun equiv-eq-expd*-match1 equiv-eq-expd*-match11311,57719
(defun equiv-eq-expd*-short equiv-eq-expd*-short1325,58209
(defun equiv-eq-expd*-legalequiv-eq-expd*-legal1333,58432
(defun equiv-eq-expd*-legal-hypsequiv-eq-expd*-legal-hyps1347,58862
(defun equiv-eq-expd*-legal-wffsequiv-eq-expd*-legal-wffs1384,60457
(defmexpr equiv-eq-contrequiv-eq-contr1423,62222
(defrulewffs equiv-eq-contrequiv-eq-contr1436,62842
(defsrule equiv-eq-contrequiv-eq-contr1444,63045
(defun equiv-eq-contr-buildequiv-eq-contr-build1453,63204
(defun equiv-eq-contr-enterequiv-eq-contr-enter1492,65077
(defun equiv-eq-contr-defaultsequiv-eq-contr-defaults1503,65440
(defun equiv-eq-contr-hyp-defaultsequiv-eq-contr-hyp-defaults1555,67971
(defun equiv-eq-contr-match equiv-eq-contr-match1606,70370
(defun equiv-eq-contr-match1 equiv-eq-contr-match11635,71702
(defun equiv-eq-contr-short equiv-eq-contr-short1649,72178
(defun equiv-eq-contr-legalequiv-eq-contr-legal1657,72401
(defun equiv-eq-contr-legal-hypsequiv-eq-contr-legal-hyps1671,72839
(defun equiv-eq-contr-legal-wffsequiv-eq-contr-legal-wffs1708,74438
(defmexpr equiv-eq-expdequiv-eq-expd1747,76206
(defrulewffs equiv-eq-expdequiv-eq-expd1759,76777
(defsrule equiv-eq-expdequiv-eq-expd1767,76977
(defun equiv-eq-expd-buildequiv-eq-expd-build1776,77132
(defun equiv-eq-expd-enterequiv-eq-expd-enter1815,79000
(defun equiv-eq-expd-defaultsequiv-eq-expd-defaults1827,79383
(defun equiv-eq-expd-hyp-defaultsequiv-eq-expd-hyp-defaults1882,82036
(defun equiv-eq-expd-match equiv-eq-expd-match1933,84434
(defun equiv-eq-expd-match1 equiv-eq-expd-match11977,86541
(defun equiv-eq-expd-short equiv-eq-expd-short1991,87029
(defun equiv-eq-expd-legalequiv-eq-expd-legal1999,87250
(defun equiv-eq-expd-legal-hypsequiv-eq-expd-legal-hyps2013,87685
(defun equiv-eq-expd-legal-wffsequiv-eq-expd-legal-wffs2050,89283
(defmexpr equiv-eqequiv-eq2089,91040
(defrulewffs equiv-eqequiv-eq2104,91744
(defsrule equiv-eqequiv-eq2113,91951
(defun equiv-eq-build equiv-eq-build2122,92086
(defun equiv-eq-enter equiv-eq-enter2157,93812
(defun equiv-eq-defaults equiv-eq-defaults2167,94110
(defun equiv-eq-hyp-defaults equiv-eq-hyp-defaults2216,96473
(defun equiv-eq-match equiv-eq-match2265,98805
(defun equiv-eq-match1 equiv-eq-match12311,101000
(defun equiv-eq-short equiv-eq-short2329,101687
(defun equiv-eq-legal equiv-eq-legal2338,101962
(defun equiv-eq-legal-hyps equiv-eq-legal-hyps2349,102297
(defun equiv-eq-legal-wffs equiv-eq-legal-wffs2384,103829
(defmexpr ext=ext=2420,105473
(defrulewffs ext=ext=2432,106045
(defsrule ext=ext=2443,106381
(defun ext=-build ext=-build2452,106500
(defun ext=-enter ext=-enter2487,108235
(defun ext=-defaults ext=-defaults2496,108518
(defun ext=-hyp-defaults ext=-hyp-defaults2542,110801
(defun ext=-match ext=-match2591,113145
(defun ext=-match1 ext=-match12619,114435
(defun ext=-short ext=-short2643,115426
(defun ext=-legal ext=-legal2655,115809
(defun ext=-legal-hyps ext=-legal-hyps2666,116156
(defun ext=-legal-wffs ext=-legal-wffs2701,117700

ml2-logic7b.lisp,1713
(defrulefile ml2-logic7bml2-logic7b21,785
(defmexpr subst=subst=35,958
(defrulewffs subst=subst=48,1714
(defsrule subst=subst=58,1972
(defun subst=-build subst=-build67,2099
(defun subst=-enter subst=-enter105,3964
(defun subst=-defaults subst=-defaults115,4311
(defun subst=-hyp-defaultssubst=-hyp-defaults173,7231
(defun subst=-match subst=-match230,9936
(defun subst=-match1 subst=-match1276,12125
(defun subst=-short subst=-short292,12726
(defun subst=-legal subst=-legal303,13120
(defun subst=-legal-hyps subst=-legal-hyps314,13506
(defun subst=-legal-wffs subst=-legal-wffs351,15164
(defmexpr sym=sym=390,16909
(defrulewffs sym=sym=402,17400
(defsrule sym=sym=410,17568
(defun sym=-build sym=-build419,17687
(defun sym=-enter sym=-enter454,19389
(defun sym=-defaults sym=-defaults462,19652
(defun sym=-hyp-defaults sym=-hyp-defaults507,21825
(defun sym=-match sym=-match556,24153
(defun sym=-match1 sym=-match1583,25387
(defun sym=-short sym=-short595,25763
(defun sym=-legal sym=-legal603,25966
(defun sym=-legal-hyps sym=-legal-hyps614,26289
(defun sym=-legal-wffs sym=-legal-wffs649,27817
(defmexpr ext=0ext=0685,29428
(defrulewffs ext=0ext=0697,29930
(defsrule ext=0ext=0705,30100
(defun ext=0-build ext=0-build714,30223
(defun ext=0-enter ext=0-enter749,31930
(defun ext=0-defaults ext=0-defaults757,32195
(defun ext=0-hyp-defaults ext=0-hyp-defaults803,34421
(defun ext=0-match ext=0-match852,36750
(defun ext=0-match1 ext=0-match1879,37986
(defun ext=0-short ext=0-short891,38364
(defun ext=0-legal ext=0-legal899,38569
(defun ext=0-legal-hyps ext=0-legal-hyps910,38895
(defun ext=0-legal-wffs ext=0-legal-wffs945,40424

ml2-logic7c.lisp,2255
(defrulefile ml2-logic7cml2-logic7c21,790
(defmexpr eta*eta*35,964
(defrulewffs eta*eta*48,1537
(defsrule eta*eta*57,1729
(defun eta*-build eta*-build66,1848
(defun eta*-enter eta*-enter101,3554
(defun eta*-defaults eta*-defaults110,3840
(defun eta*-hyp-defaults eta*-hyp-defaults158,6144
(defun eta*-match eta*-match207,8472
(defun eta*-match1 eta*-match1253,10655
(defun eta*-short eta*-short269,11250
(defun eta*-legal eta*-legal278,11517
(defun eta*-legal-hyps eta*-legal-hyps289,11840
(defun eta*-legal-wffs eta*-legal-wffs324,13368
(defmexpr beta*beta*360,14989
(defrulewffs beta*beta*373,15567
(defsrule beta*beta*382,15764
(defun beta*-build beta*-build391,15887
(defun beta*-enter beta*-enter426,17599
(defun beta*-defaults beta*-defaults435,17887
(defun beta*-hyp-defaults beta*-hyp-defaults484,20225
(defun beta*-match beta*-match533,22554
(defun beta*-match1 beta*-match1579,24740
(defun beta*-short beta*-short595,25338
(defun beta*-legal beta*-legal604,25607
(defun beta*-legal-hyps beta*-legal-hyps615,25933
(defun beta*-legal-wffs beta*-legal-wffs650,27462
(defmexpr lambda*lambda*686,29091
(defrulewffs lambda*lambda*699,29674
(defsrule lambda*lambda*708,29881
(defun lambda*-build lambda*-build717,30012
(defun lambda*-enter lambda*-enter752,31732
(defun lambda*-defaults lambda*-defaults762,32028
(defun lambda*-hyp-defaults lambda*-hyp-defaults811,34382
(defun lambda*-match lambda*-match860,36713
(defun lambda*-match1 lambda*-match1906,38905
(defun lambda*-short lambda*-short924,39589
(defun lambda*-legal lambda*-legal933,39862
(defun lambda*-legal-hyps lambda*-legal-hyps944,40194
(defun lambda*-legal-wffs lambda*-legal-wffs979,41725
(defmexpr letlet1017,43390
(defrulewffs letlet1029,44071
(defsrule letlet1043,44452
(defun let-buildlet-build1052,44567
(defun let-enterlet-enter1098,46865
(defun let-defaultslet-defaults1110,47237
(defun let-hyp-defaultslet-hyp-defaults1163,49849
(defun let-match let-match1232,53185
(defun let-match1 let-match11260,54470
(defun let-short let-short1284,55456
(defun let-legallet-legal1299,55999
(defun let-legal-hypslet-legal-hyps1313,56444
(defun let-legal-wffslet-legal-wffs1353,58252

ml2-prior.lisp,2657
(deffile ml2-priorml2-prior13,614
(defmode math-logic-2-modemath-logic-2-mode18,737
(defmacro defprior defprior33,1076
(defmacro defhint defhint36,1154
(defprior same same39,1219
(defhint same same40,1237
(defprior cases cases42,1301
(defhint cases cases43,1320
(defprior econj econj44,1374
(defhint econj econj45,1393
(defprior rulec rulec46,1447
(defhint rulec rulec47,1466
(defprior iconj iconj48,1531
(defhint iconj iconj49,1550
(defprior ugen ugen50,1604
(defhint ugen ugen51,1622
(defprior pullneg pullneg52,1684
(defhint pullneg pullneg53,1705
(defprior pushneg pushneg55,1798
(defhint pushneg pushneg56,1819
(defprior implics-equiv implics-equiv58,1911
(defhint implics-equiv implics-equiv59,1938
(defprior ext=0 ext=061,2065
(defhint ext=0 ext=062,2084
(defprior deduct deduct65,2211
(defhint deduct deduct66,2231
(defprior egen egen68,2288
(defhint egen egen69,2306
(defprior ui ui72,2457
(defhint ui ui73,2473
(defprior ext= ext=76,2615
(defhint ext= ext=80,2762
(defprior subst=l subst=l83,2868
(defhint subst=l subst=l84,2889
(defprior subst=r subst=r86,3029
(defhint subst=r subst=r87,3050
(defprior edef edef89,3190
(defhint edef edef90,3208
(defprior idef idef91,3267
(defhint idef idef92,3285
(defprior mp mp95,3346
(defhint mp mp96,3362
(defprior indirect indirect100,3557
(defhint indirect indirect101,3579
(defprior lemma lemma105,3709
(defhint lemma lemma106,3728
(defprior hyp hyp109,3886
(defhint hyp hyp110,3904
(defprior equiv-implics equiv-implics114,4077
(defhint equiv-implics equiv-implics115,4104
(defprior lcontr* lcontr*118,4232
(defhint lcontr* lcontr*119,4253
(defprior lexpd* lexpd*122,4361
(defhint lexpd* lexpd*123,4381
(defprior equiv-eq-expd equiv-eq-expd126,4488
(defhint equiv-eq-expd equiv-eq-expd127,4515
(defprior equiv-eq-contr equiv-eq-contr130,4618
(defhint equiv-eq-contr equiv-eq-contr131,4646
(defmexpr assertassert138,4843
(defmexpr ruleprulep150,5280
(defun rulep-enter-fn rulep-enter-fn160,5581
(defvar rulep-mainfn-list rulep-mainfn-list166,5787
(deftype% rulep-mainfn-typerulep-mainfn-type168,5844
(defflag rulep-mainfnrulep-mainfn176,6071
(defun rulep-mainfun rulep-mainfun192,6742
(defun setup-rulep setup-rulep197,6964
(defun get-rulep-supp-lines get-rulep-supp-lines202,7171
(defun get-rulep-plan-line get-rulep-plan-line207,7322
(defun get-a-line get-a-line210,7398
(defmexpr typesubsttypesubst247,8641
(defun typesubst-legal typesubst-legal266,9335
(defun typesubst-build typesubst-build291,9977
(defun typesubst-defaults typesubst-defaults345,11785

ml2-replace.lisp,225
(deffile ml2-replaceml2-replace13,614
(defwffop rpinrpin25,976
(defun rpin rpin35,1250
(defrepsymbol andand48,1731
(defrepsymbol oror54,1905
(defrepsymbol impliesimplies60,2075
(defrepsymbol subsetsubset66,2247

ml2-rewrite.lisp,7116
(defrulefile ml2-rewriteml2-rewrite21,917
(defmexpr use-rrulesuse-rrules35,1198
(defrulewffs use-rrulesuse-rrules48,1803
(defsrule use-rrulesuse-rrules57,2028
(defun use-rrules-build use-rrules-build66,2171
(defun use-rrules-enter use-rrules-enter106,3781
(defun use-rrules-defaults use-rrules-defaults114,4056
(defun use-rrules-hyp-defaults use-rrules-hyp-defaults159,6126
(defun use-rrules-match use-rrules-match203,8171
(defun use-rrules-match1 use-rrules-match1228,9227
(defun use-rrules-short use-rrules-short247,9765
(defun use-rrules-legal use-rrules-legal260,10120
(defun use-rrules-legal-hyps use-rrules-legal-hyps271,10461
(defun use-rrules-legal-wffs use-rrules-legal-wffs302,11785
(defmexpr simplify-plansimplify-plan343,13410
(defrulewffs simplify-plansimplify-plan356,14018
(defsrule simplify-plansimplify-plan365,14206
(defun simplify-plan-build simplify-plan-build374,14361
(defun simplify-plan-enter simplify-plan-enter414,16016
(defun simplify-plan-defaults simplify-plan-defaults423,16321
(defun simplify-plan-hyp-defaults simplify-plan-hyp-defaults469,18517
(defun simplify-plan-match simplify-plan-match513,20585
(defun simplify-plan-match1 simplify-plan-match1538,21631
(defun simplify-plan-short simplify-plan-short553,22003
(defun simplify-plan-legal simplify-plan-legal566,22319
(defun simplify-plan-legal-hyps simplify-plan-legal-hyps577,22699
(defun simplify-plan-legal-wffs simplify-plan-legal-wffs608,24046
(defmexpr simplify-suppsimplify-supp649,25706
(defrulewffs simplify-suppsimplify-supp662,26319
(defsrule simplify-suppsimplify-supp670,26508
(defun simplify-supp-build simplify-supp-build679,26663
(defun simplify-supp-enter simplify-supp-enter719,28324
(defun simplify-supp-defaults simplify-supp-defaults728,28641
(defun simplify-supp-hyp-defaults simplify-supp-hyp-defaults774,30873
(defun simplify-supp-match simplify-supp-match818,32945
(defun simplify-supp-match1 simplify-supp-match1852,34468
(defun simplify-supp-short simplify-supp-short866,34873
(defun simplify-supp-legal simplify-supp-legal879,35189
(defun simplify-supp-legal-hyps simplify-supp-legal-hyps890,35575
(defun simplify-supp-legal-wffs simplify-supp-legal-wffs921,36926
(defmexpr simplify-plan*simplify-plan*962,38591
(defrulewffs simplify-plan*simplify-plan*975,39205
(defsrule simplify-plan*simplify-plan*983,39396
(defun simplify-plan*-build simplify-plan*-build992,39555
(defun simplify-plan*-enter simplify-plan*-enter1032,41218
(defun simplify-plan*-defaults simplify-plan*-defaults1041,41527
(defun simplify-plan*-hyp-defaults simplify-plan*-hyp-defaults1087,43738
(defun simplify-plan*-match simplify-plan*-match1131,45809
(defun simplify-plan*-match1 simplify-plan*-match11156,46857
(defun simplify-plan*-short simplify-plan*-short1171,47231
(defun simplify-plan*-legal simplify-plan*-legal1184,47549
(defun simplify-plan*-legal-hyps simplify-plan*-legal-hyps1195,47935
(defun simplify-plan*-legal-wffs simplify-plan*-legal-wffs1226,49285
(defmexpr simplify-supp*simplify-supp*1267,50954
(defrulewffs simplify-supp*simplify-supp*1280,51573
(defsrule simplify-supp*simplify-supp*1288,51766
(defun simplify-supp*-build simplify-supp*-build1297,51925
(defun simplify-supp*-enter simplify-supp*-enter1337,53594
(defun simplify-supp*-defaults simplify-supp*-defaults1346,53915
(defun simplify-supp*-hyp-defaults simplify-supp*-hyp-defaults1392,56162
(defun simplify-supp*-match simplify-supp*-match1436,58237
(defun simplify-supp*-match1 simplify-supp*-match11470,59762
(defun simplify-supp*-short simplify-supp*-short1484,60169
(defun simplify-supp*-legal simplify-supp*-legal1497,60487
(defun simplify-supp*-legal-hyps simplify-supp*-legal-hyps1508,60879
(defun simplify-supp*-legal-wffs simplify-supp*-legal-wffs1539,62233
(defmexpr unrewrite-plan*unrewrite-plan*1580,63907
(defrulewffs unrewrite-plan*unrewrite-plan*1592,64522
(defsrule unrewrite-plan*unrewrite-plan*1600,64722
(defun unrewrite-plan*-build unrewrite-plan*-build1609,64885
(defun unrewrite-plan*-enter unrewrite-plan*-enter1650,66584
(defun unrewrite-plan*-defaults unrewrite-plan*-defaults1659,66907
(defun unrewrite-plan*-hyp-defaultsunrewrite-plan*-hyp-defaults1705,69163
(defun unrewrite-plan*-match unrewrite-plan*-match1750,71254
(defun unrewrite-plan*-match1 unrewrite-plan*-match11775,72304
(defun unrewrite-plan*-short unrewrite-plan*-short1790,72680
(defun unrewrite-plan*-legal unrewrite-plan*-legal1803,73000
(defun unrewrite-plan*-legal-hyps unrewrite-plan*-legal-hyps1814,73407
(defun unrewrite-plan*-legal-wffs unrewrite-plan*-legal-wffs1845,74770
(defmexpr rewrite-supp*rewrite-supp*1886,76456
(defrulewffs rewrite-supp*rewrite-supp*1899,77063
(defsrule rewrite-supp*rewrite-supp*1907,77255
(defun rewrite-supp*-build rewrite-supp*-build1916,77410
(defun rewrite-supp*-enter rewrite-supp*-enter1956,79081
(defun rewrite-supp*-defaults rewrite-supp*-defaults1965,79404
(defun rewrite-supp*-hyp-defaults rewrite-supp*-hyp-defaults2011,81654
(defun rewrite-supp*-match rewrite-supp*-match2055,83732
(defun rewrite-supp*-match1 rewrite-supp*-match12089,85255
(defun rewrite-supp*-short rewrite-supp*-short2103,85660
(defun rewrite-supp*-legal rewrite-supp*-legal2116,85976
(defun rewrite-supp*-legal-hyps rewrite-supp*-legal-hyps2127,86371
(defun rewrite-supp*-legal-wffs rewrite-supp*-legal-wffs2158,87728
(defmexpr unrewrite-plan1unrewrite-plan12199,89400
(defrulewffs unrewrite-plan1unrewrite-plan12212,90024
(defsrule unrewrite-plan1unrewrite-plan12220,90223
(defun unrewrite-plan1-build unrewrite-plan1-build2229,90386
(defun unrewrite-plan1-enter unrewrite-plan1-enter2269,92069
(defun unrewrite-plan1-defaults unrewrite-plan1-defaults2278,92390
(defun unrewrite-plan1-hyp-defaults unrewrite-plan1-hyp-defaults2324,94640
(defun unrewrite-plan1-match unrewrite-plan1-match2368,96722
(defun unrewrite-plan1-match1 unrewrite-plan1-match12393,97772
(defun unrewrite-plan1-short unrewrite-plan1-short2408,98148
(defun unrewrite-plan1-legal unrewrite-plan1-legal2421,98468
(defun unrewrite-plan1-legal-hyps unrewrite-plan1-legal-hyps2432,98872
(defun unrewrite-plan1-legal-wffs unrewrite-plan1-legal-wffs2463,100233
(defmexpr rewrite-supp1rewrite-supp12504,101917
(defrulewffs rewrite-supp1rewrite-supp12517,102532
(defsrule rewrite-supp1rewrite-supp12525,102723
(defun rewrite-supp1-build rewrite-supp1-build2534,102878
(defun rewrite-supp1-enter rewrite-supp1-enter2574,104545
(defun rewrite-supp1-defaults rewrite-supp1-defaults2583,104866
(defun rewrite-supp1-hyp-defaults rewrite-supp1-hyp-defaults2629,107110
(defun rewrite-supp1-match rewrite-supp1-match2673,109186
(defun rewrite-supp1-match1 rewrite-supp1-match12707,110709
(defun rewrite-supp1-short rewrite-supp1-short2721,111114
(defun rewrite-supp1-legal rewrite-supp1-legal2734,111430
(defun rewrite-supp1-legal-hyps rewrite-supp1-legal-hyps2745,111822
(defun rewrite-supp1-legal-wffs rewrite-supp1-legal-wffs2776,113177

ml2-theorems.lisp,893
(deffile ml2-theoremsml2-theorems13,618
(deftheorem X5200X520035,1147
(deftheorem X5201X520144,1328
(deftheorem X5202X520254,1520
(deftheorem X5203X520363,1692
(deftheorem X5204X520472,1877
(deftheorem X5205X520581,2048
(deftheorem X5206X520690,2234
(deftheorem x5207x5207115,3040
(deftheorem X5208X5208140,3894
(deftheorem X5209X5209150,4134
(deftheorem X5210X5210159,4328
(deftheorem X5211X5211168,4511
(deftheorem X5212X5212177,4700
(deftheorem X5303X5303186,4879
(deftheorem X5304X5304195,5090
(deftheorem X5305X5305204,5269
(deftheorem X5308X5308214,5480
(deftheorem X5309X5309224,5747
(deftheorem X5310X5310233,5940
(deftheorem X5500X5500242,6240
(deftheorem X6004X6004253,6546
(deftheorem X6101X6101262,6694
(deftheorem X6104X6104271,6833
(deftheorem x6105x6105281,7101
(deftheorem x6106x6106294,7448
(deftheorem X6201X6201305,7674

ml-etr-tactics-book.lisp,975
(deffile ml-etr-tactics-bookml-etr-tactics-book14,633
(defun chain-of-negs chain-of-negs22,963
(defun same-match2 same-match231,1330
(deftactic same-tacsame-tac44,1916
(defun same-tac-etree-nat-fn same-tac-etree-nat-fn51,2117
(defun mated-to-node-or-a-neg mated-to-node-or-a-neg70,2788
(defun nnf-match2 nnf-match288,3438
(deftactic nnf-tacnnf-tac100,3935
(defun nnf-tac-etree-nat-fn nnf-tac-etree-nat-fn106,4138
(deftactic unsponsor-tacunsponsor-tac133,5225
(defun connections-to-lits connections-to-lits139,5402
(defun lines-to-rulep-jform lines-to-rulep-jform145,5665
(defun lines-to-jform lines-to-jform159,6390
(defun sufficient-lines-p sufficient-lines-p179,7428
(defun unsponsor-tac-etree-nat-fn unsponsor-tac-etree-nat-fn184,7618
(defun unnec-exp-match unnec-exp-match218,8657
(deftactic unnec-exp-tacunnec-exp-tac224,8826
(defun unnec-exp-tac-etree-nat-fn unnec-exp-tac-etree-nat-fn231,9015
(deftactic book-tacbook-tac289,10896

ml-etr-tactics-eq.lisp,858
(deffile ml-etr-tactics-eqml-etr-tactics-eq17,657
(defun refl=-match2 refl=-match227,896
(deftactic refl=-tac refl=-tac31,1049
(defun refl=-tac-etree-nat-fn refl=-tac-etree-nat-fn38,1299
(defun etree-name-2 etree-name-259,1988
(defun subst=l-match2 subst=l-match262,2050
(defun subst=-tac-etree-nat-fn subst=-tac-etree-nat-fn95,3518
(defun subst=l-tac-etree-nat-fn subst=l-tac-etree-nat-fn104,3878
(deftactic subst=-tacsubst=-tac221,9824
(deftactic subst=l-tacsubst=l-tac227,9982
(defun subst=r-match2 subst=r-match2239,10328
(defun subst=r-tac-etree-nat-fn subst=r-tac-etree-nat-fn270,11704
(deftactic subst=r-tacsubst=r-tac492,20473
(defun neg-equal-match2 neg-equal-match2503,20816
(deftactic neg-equal-sline-tacneg-equal-sline-tac512,21119
(defun neg-equal-sline-tac-etree-nat-fn neg-equal-sline-tac-etree-nat-fn519,21367

ml-etr-tactics-main.lisp,1013
(deffile ml-etr-tactics-mainml-etr-tactics-main15,629
(deftactic rewrite-pline-tacrewrite-pline-tac23,829
(deftactic rewrite-sline-tacrewrite-sline-tac33,1253
(deftactic pullneg-tacpullneg-tac43,1588
(deftactic pushneg-tacpushneg-tac51,1888
(deftactic complete-transform-taccomplete-transform-tac62,2231
(deftactic complete-transform*-taccomplete-transform*-tac104,3286
(deftactic pfenning*-tacpfenning*-tac153,4407
(deftactic pfenning-tacpfenning-tac196,5427
(deftactic basic-prop*-tacbasic-prop*-tac208,5838
(deftactic basic-prop-tacbasic-prop-tac235,6630
(deftactic rulep-tacrulep-tac240,6816
(defun remove-conns-unless-eqab remove-conns-unless-eqab246,6941
(defun rulep-match2 rulep-match2266,7560
(defun rulep-tac-etree-nat-fn rulep-tac-etree-nat-fn280,8063
(deftactic truthp-rewrite-plan-tactruthp-rewrite-plan-tac293,8484
(defun truthp-rewrite-match2 truthp-rewrite-match2302,8778
(defun truthp-rewrite-plan-tac-etree-nat-fn truthp-rewrite-plan-tac-etree-nat-fn308,8948

ml-etr-tactics-neg.lisp,1921
(deffile ml-etr-tactics-negml-etr-tactics-neg17,657
(deftactic eneg-taceneg-tac26,891
(deftactic neg-atom-elim-tacneg-atom-elim-tac36,1162
(defun neg-atom-elim-match2 neg-atom-elim-match245,1418
(defun neg-atom-elim-tac-etree-nat-fn neg-atom-elim-tac-etree-nat-fn59,1987
(deftactic neg-neg-elim-tacneg-neg-elim-tac93,3325
(defun neg-neg-elim-tac-etree-nat-fn neg-neg-elim-tac-etree-nat-fn102,3559
(deftactic neg-and-elim-tacneg-and-elim-tac141,5038
(defun neg-and-elim-tac-etree-nat-fn neg-and-elim-tac-etree-nat-fn148,5276
(deftactic neg-imp-elim-tacneg-imp-elim-tac186,6754
(defun neg-imp-elim-tac-etree-nat-fn neg-imp-elim-tac-etree-nat-fn193,6992
(deftactic neg-univ-elim-tacneg-univ-elim-tac231,8465
(defun neg-univ-elim-tac-etree-nat-fn neg-univ-elim-tac-etree-nat-fn238,8724
(deftactic neg-exists-elim-simple-tacneg-exists-elim-simple-tac277,10208
(defun neg-exists-simple-match2 neg-exists-simple-match2285,10524
(defun neg-exists-elim-simple-tac-etree-nat-fn neg-exists-elim-simple-tac-etree-nat-fn302,11144
(deftactic neg-exists-elim-dup-tacneg-exists-elim-dup-tac339,12520
(defun neg-exists-elim-dup-match2 neg-exists-elim-dup-match2348,12905
(defun neg-exists-elim-dup-tac-etree-nat-fn neg-exists-elim-dup-tac-etree-nat-fn368,13572
(deftactic neg-or-elim-simple-tacneg-or-elim-simple-tac442,16445
(defun neg-or-elim-simple-match2 neg-or-elim-simple-match2450,16748
(defun neg-or-elim-simple-tac-etree-nat-fn neg-or-elim-simple-tac-etree-nat-fn472,17654
(deftactic neg-or-elim-dup-tacneg-or-elim-dup-tac513,19049
(defun neg-or-elim-dup-match2 neg-or-elim-dup-match2522,19386
(defun neg-or-elim-dup-tac-etree-nat-fn neg-or-elim-dup-tac-etree-nat-fn538,20153
(defun neg-equal-elim-match2 neg-equal-elim-match2632,24648
(deftactic neg-equal-elim-tacneg-equal-elim-tac644,25185
(defun neg-equal-elim-tac-etree-nat-fn neg-equal-elim-tac-etree-nat-fn652,25422

ml-etr-tactics-pline.lisp,5069
(deffile ml-etr-tactics-plineml-etr-tactics-pline17,657
(defun mated-line mated-line23,867
(deftactic deduct-tacdeduct-tac32,1105
(defun deduct-match2 deduct-match239,1310
(defun deduct-tac-etree-nat-fn deduct-tac-etree-nat-fn44,1487
(deftactic iconj-taciconj-tac80,2723
(defun iconj-match2 iconj-match287,2918
(defun iconj-tac-etree-nat-fn iconj-tac-etree-nat-fn92,3077
(deftactic iconj*-taciconj*-tac132,4486
(defun iconj*-match2 iconj*-match2140,4723
(defun iconj*-tac-etree-nat-fn iconj*-tac-etree-nat-fn145,4883
(defun find-all-conjunct-nodes find-all-conjunct-nodes200,6818
(deftactic iness-pline-taciness-pline-tac213,7133
(defun iness-pline-match2 iness-pline-match2221,7352
(defun iness-pline-etree-nat-fn iness-pline-etree-nat-fn229,7662
(deftactic class-disj-tacclass-disj-tac261,8715
(defun class-disj-match2 class-disj-match2268,8962
(defun class-disj-etree-nat-fn class-disj-etree-nat-fn280,9570
(deftactic idisj-left-tacidisj-left-tac324,11077
(defun idisj-left-match2 idisj-left-match2332,11358
(defun idisj-left-tac-etree-nat-fn idisj-left-tac-etree-nat-fn342,11753
(deftactic idisj-right-tacidisj-right-tac388,13353
(defun idisj-right-match2 idisj-right-match2396,13639
(defun idisj-right-tac-etree-nat-fn idisj-right-tac-etree-nat-fn405,14037
(deftactic ugen-tacugen-tac451,15642
(defun ugen-match2 ugen-match2459,15835
(defun ugen-tac-etree-nat-fn ugen-tac-etree-nat-fn464,16024
(deftactic egen-tacegen-tac528,18222
(defun egen-match2 egen-match2537,18474
(defun egen-tac-etree-nat-fn egen-tac-etree-nat-fn546,18829
(deftactic implics-equiv-tacimplics-equiv-tac579,19931
(defun implics-equiv-match2 implics-equiv-match2586,20157
(defun implics-equiv-tac-etree-nat-fn implics-equiv-tac-etree-nat-fn595,20433
(defun disj-equiv-match2 disj-equiv-match2624,21445
(deftactic disj-equiv-tacdisj-equiv-tac631,21663
(deftactic lexpd*-beta-taclexpd*-beta-tac669,23075
(deftactic lexpd*-taclexpd*-tac676,23286
(deftactic lexpd*-eta-taclexpd*-eta-tac683,23484
(defun lambda-match2 lambda-match2690,23691
(defun lambda-match-eta2 lambda-match-eta2697,23911
(defun lambda-match-beta2 lambda-match-beta2703,24125
(defun lexpd*-beta-tac-etree-nat-fn lexpd*-beta-tac-etree-nat-fn709,24341
(defun lexpd*-eta-tac-etree-nat-fn lexpd*-eta-tac-etree-nat-fn747,25663
(defun lexpd*-tac-etree-nat-fn lexpd*-tac-etree-nat-fn785,26978
(deftactic ab-plan-tacab-plan-tac826,28291
(defun ab-match2 ab-match2833,28488
(defun ab-plan-tac-etree-nat-fn ab-plan-tac-etree-nat-fn840,28706
(deftactic equiv-wffs-plan-tacequiv-wffs-plan-tac882,30089
(defun equiv-wffs-match2 equiv-wffs-match2889,30339
(defun equiv-wffs-plan-tac-etree-nat-fn equiv-wffs-plan-tac-etree-nat-fn896,30580
(deftactic ruleq-plan-tacruleq-plan-tac939,32024
(defun ruleq-match2 ruleq-match2947,32327
(defun ruleq-plan-tac-etree-nat-fn ruleq-plan-tac-etree-nat-fn953,32567
(deftactic equality-plan-tacequality-plan-tac998,34087
(defun leibniz=-match2 leibniz=-match21005,34363
(defun ext=-match2 ext=-match21013,34596
(deftactic leibniz=-plan-tacleibniz=-plan-tac1021,34821
(defun leibniz=-plan-tac-etree-nat-fn leibniz=-plan-tac-etree-nat-fn1030,35146
(deftactic ext=-plan-tacext=-plan-tac1068,36479
(defun ext=-plan-tac-etree-nat-fn ext=-plan-tac-etree-nat-fn1077,36788
(deftactic truth-tactruth-tac1118,38102
(defun truth-match2 truth-match21125,38246
(defun truth-tac-etree-nat-fn truth-tac-etree-nat-fn1129,38360
(deftactic ineg-tacineg-tac1150,38999
(defun ineg-match2 ineg-match21156,39139
(defun ineg-tac-etree-nat-fn ineg-tac-etree-nat-fn1168,39512
(deftactic indirect-tacindirect-tac1209,40803
(defun indirect-match2 indirect-match21218,41143
(defun indirect-tac-etree-nat-fn indirect-tac-etree-nat-fn1228,41460
(deftactic neg-neg-plan-tacneg-neg-plan-tac1266,42794
(defun neg-neg-plan-tac-etree-nat-fn neg-neg-plan-tac-etree-nat-fn1273,42970
(deftactic neg-or-plan-tacneg-or-plan-tac1305,44036
(defun neg-or-plan-tac-etree-nat-fn neg-or-plan-tac-etree-nat-fn1311,44210
(deftactic neg-and-plan-tacneg-and-plan-tac1364,46075
(defun neg-and-plan-tac-etree-nat-fn neg-and-plan-tac-etree-nat-fn1371,46311
(deftactic neg-imp-plan-tacneg-imp-plan-tac1412,47804
(defun neg-imp-plan-tac-etree-nat-fn neg-imp-plan-tac-etree-nat-fn1418,47975
(deftactic neg-sel-plan-tacneg-sel-plan-tac1467,49660
(defun neg-sel-plan-tac-etree-nat-fn neg-sel-plan-tac-etree-nat-fn1473,49829
(deftactic neg-exp-plan-tacneg-exp-plan-tac1520,51440
(defun neg-exp-plan-tac-etree-nat-fn neg-exp-plan-tac-etree-nat-fn1527,51648
(deftactic neg-rew-plan-tacneg-rew-plan-tac1621,54981
(defun neg-rew-match2 neg-rew-match21628,55181
(defun neg-rew-plan-tac-etree-nat-fn neg-rew-plan-tac-etree-nat-fn1634,55410
(deftactic idisj-tacidisj-tac1696,58067
(deftactic pline-tacpline-tac1701,58174
(deftactic rewrite-pline-p-tacrewrite-pline-p-tac1707,58412
(deftactic neg-pline-p-tacneg-pline-p-tac1716,58736
(deftactic restrict-mating-tacrestrict-mating-tac1724,59036

ml-etr-tactics-sline.lisp,4645
(deffile ml-etr-tactics-slineml-etr-tactics-sline16,656
(deftactic econj-taceconj-tac24,890
(defun econj-match2 econj-match232,1169
(defun econj-tac-etree-nat-fn econj-tac-etree-nat-fn36,1282
(deftactic econj*-taceconj*-tac78,2704
(defun econj*-match2 econj*-match286,2938
(defun econj*-tac-etree-nat-fn econj*-tac-etree-nat-fn90,3052
(defun find-room-after find-room-after144,4983
(defun find-room-before find-room-before148,5140
(defun cases-match2 cases-match2155,5394
(deftactic cases-taccases-tac173,5978
(defun cases-tac-etree-nat-fn cases-tac-etree-nat-fn180,6159
(deftactic absurd-tacabsurd-tac240,8192
(defun absurd-match2 absurd-match2247,8344
(defun absurd-etree-nat-fn absurd-etree-nat-fn251,8470
(defun ui-match2 ui-match2279,9288
(defun ui-match2 ui-match2302,10007
(deftactic ui-tacui-tac329,11015
(defun ui-tac-etree-nat-fn ui-tac-etree-nat-fn343,11710
(deftactic rulec-tacrulec-tac469,16290
(defun rulec-match2 rulec-match2477,16488
(defun rulec-tac-etree-nat-fn rulec-tac-etree-nat-fn483,16727
(defun mp-match2 mp-match2522,18225
(deftactic mp-tacmp-tac540,18862
(defun mp-tac-etree-nat-fn mp-tac-etree-nat-fn548,19117
(defun indirect2-match2 indirect2-match2610,21319
(deftactic indirect2-tacindirect2-tac624,21884
(defun indirect2-tac-etree-nat-fn indirect2-tac-etree-nat-fn631,22129
(defun neg-neg-match2 neg-neg-match2679,23857
(deftactic neg-neg-sline-tacneg-neg-sline-tac691,24278
(defun neg-neg-sline-tac-etree-nat-fn neg-neg-sline-tac-etree-nat-fn697,24455
(defun neg-or-match2 neg-or-match2732,25824
(deftactic neg-or-sline-tacneg-or-sline-tac738,25990
(defun neg-or-sline-tac-etree-nat-fn neg-or-sline-tac-etree-nat-fn745,26199
(defun neg-and-match2 neg-and-match2799,28190
(deftactic neg-and-sline-tacneg-and-sline-tac805,28357
(defun neg-imp-match2 neg-imp-match2854,30098
(deftactic neg-imp-sline-tacneg-imp-sline-tac859,30263
(defun neg-imp-sline-tac-etree-nat-fn neg-imp-sline-tac-etree-nat-fn866,30473
(defun neg-sel-match2 neg-sel-match2917,32286
(deftactic neg-sel-sline-tacneg-sel-sline-tac924,32514
(defun neg-sel-sline-tac-etree-nat-fn neg-sel-sline-tac-etree-nat-fn931,32719
(defun neg-exp-match2 neg-exp-match2979,34515
(defun strip-away-a-negation strip-away-a-negation986,34844
(deftactic neg-exp-sline-tacneg-exp-sline-tac1002,35500
(defun neg-exp-sline-tac-etree-nat-fn neg-exp-sline-tac-etree-nat-fn1009,35701
(defun equiv-implics-match2 equiv-implics-match21069,38233
(deftactic equiv-implics-tacequiv-implics-tac1077,38478
(defun equiv-implics-tac-etree-nat-fn equiv-implics-tac-etree-nat-fn1084,38697
(defun equiv-disj-match2 equiv-disj-match21116,40117
(deftactic equiv-disj-tacequiv-disj-tac1122,40292
(defun equiv-disj-tac-etree-nat-fn equiv-disj-tac-etree-nat-fn1129,40499
(deftactic lcontr*-beta-taclcontr*-beta-tac1175,42172
(defun lcontr*-beta-tac-etree-nat-fn lcontr*-beta-tac-etree-nat-fn1182,42366
(deftactic lcontr*-eta-taclcontr*-eta-tac1226,44020
(defun lcontr*-eta-tac-etree-nat-fn lcontr*-eta-tac-etree-nat-fn1233,44210
(deftactic lcontr*-taclcontr*-tac1276,45857
(defun lcontr*-tac-etree-nat-fn lcontr*-tac-etree-nat-fn1283,46038
(deftactic ab-sline-tacab-sline-tac1327,47679
(defun ab-sline-tac-etree-nat-fn ab-sline-tac-etree-nat-fn1334,47858
(deftactic equiv-wffs-sline-tacequiv-wffs-sline-tac1371,49138
(defun equiv-wffs-sline-tac-etree-nat-fn equiv-wffs-sline-tac-etree-nat-fn1378,49377
(deftactic ruleq-sline-tacruleq-sline-tac1415,50707
(defun ruleq-sline-tac-etree-nat-fn ruleq-sline-tac-etree-nat-fn1422,50894
(deftactic equality-sline-tacequality-sline-tac1468,52557
(deftactic leibniz=-sline-tacleibniz=-sline-tac1474,52750
(defun leibniz=-sline-tac-etree-nat-fn leibniz=-sline-tac-etree-nat-fn1482,53074
(deftactic ext=-sline-tacext=-sline-tac1521,54466
(defun ext=-sline-tac-etree-nat-fn ext=-sline-tac-etree-nat-fn1530,54775
(deftactic neg-rew-sline-tacneg-rew-sline-tac1612,57629
(defun neg-rew-sline-tac-etree-nat-fn neg-rew-sline-tac-etree-nat-fn1620,57840
(deftactic neg-equiv-sline-tacneg-equiv-sline-tac1689,60813
(defun neg-equiv-sline-tac-etree-nat-fn neg-equiv-sline-tac-etree-nat-fn1697,61121
(deftactic sline-tacsline-tac1754,63201
(deftactic rewrite-sline-p-tacrewrite-sline-p-tac1765,63576
(deftactic neg-sline-p-tacneg-sline-p-tac1775,64015
(defun mated-line-or-neg mated-line-or-neg1789,64664
(defun neg-mated-line neg-mated-line1809,65649
(deftactic duplicate-support-tacduplicate-support-tac1819,66075
(defun duplicate-support-tac-etree-nat-fn duplicate-support-tac-etree-nat-fn1829,66479

ml-etr-tactics-symsimp2.lisp,445
(deffile ml-etr-tactics-symsimp2ml-etr-tactics-symsimp213,610
(deftactic backchain-lemma-tacbackchain-lemma-tac18,749
(defun backchain-lemma-tac-etree-nat-fn backchain-lemma-tac-etree-nat-fn29,1052
(defun make-backchain-lemma-nodes make-backchain-lemma-nodes99,3733
(deftactic subst=-backchain-lemma-tacsubst=-backchain-lemma-tac124,4844
(defun subst=-backchain-lemma-tac-etree-nat-fn subst=-backchain-lemma-tac-etree-nat-fn135,5197

ml-etr-tactics-symsimp.lisp,1129
(deffile ml-etr-tactics-symsimpml-etr-tactics-symsimp13,610
(deftactic symsimp-tacsymsimp-tac20,779
(deftactic exists-lemma-tacexists-lemma-tac25,911
(defun exists-lemma-match2 exists-lemma-match232,1047
(defun exists-lemma-tac-etree-nat-fn exists-lemma-tac-etree-nat-fn43,1430
(defun copy-support-line copy-support-line118,4169
(defun find-best-child find-best-child125,4493
(defun make-exists-lemma-nodes make-exists-lemma-nodes151,5324
(defun dup-etree dup-etree192,6993
(defun dup-etree-neg dup-etree-neg276,10034
(deftactic or-lemma-left-tacor-lemma-left-tac376,13865
(defun or-lemma-left-tac-etree-nat-fn or-lemma-left-tac-etree-nat-fn383,14003
(deftactic or-lemma-right-tacor-lemma-right-tac458,16705
(defun or-lemma-right-tac-etree-nat-fn or-lemma-right-tac-etree-nat-fn465,16845
(defun make-or-right-lemma-nodes make-or-right-lemma-nodes544,19515
(defun make-or-left-lemma-nodes make-or-left-lemma-nodes547,19616
(defun make-or-lemma-nodes make-or-lemma-nodes558,19985
(deftactic or-lemma-tacor-lemma-tac578,20713
(defun or-lemma-tac-etree-nat-fn or-lemma-tac-etree-nat-fn584,20887

ml-mode.lisp,54
(deffile ml-modeml-mode17,630
(defmode mlml22,751

ml-nat-etr1.lisp,600
(deffile ml-nat-etr1ml-nat-etr115,629
(defun justified-by-intro justified-by-intro30,1321
(defun justified-by-elim justified-by-elim63,2713
(defun same-ify same-ify93,3942
(defun same-ify2 same-ify2121,4882
(defun same-ify3 same-ify3162,6546
(defun make-same-line make-same-line180,7210
(defun nat-xlate nat-xlate189,7517
(defun use-of-indirect2-p use-of-indirect2-p285,11649
(defun use-of-indirect1-p use-of-indirect1-p290,11781
(defun negelim-ify negelim-ify295,11973
(defun negelim-indirect2 negelim-indirect2304,12225
(defun negelim-indirect1 negelim-indirect1329,12915

ml-nat-etr2.lisp,973
(deffile ml-nat-etr2ml-nat-etr215,629
(defun xlate-same xlate-same22,788
(defun complementary-p complementary-p34,1224
(defun get-root-and-negs get-root-and-negs51,1755
(defun xlate-deduct xlate-deduct89,3149
(defun xlate-cases xlate-cases112,3996
(defun xlate-case xlate-case127,4450
(defun xlate-econj xlate-econj149,5220
(defun xlate-iconj xlate-iconj173,6033
(defun xlate-egen xlate-egen191,6732
(defun xlate-ugen xlate-ugen217,7668
(defun xlate-ui xlate-ui235,8374
(defun xlate-rulec xlate-rulec261,9285
(defun xlate-mp xlate-mp343,12389
(defun xlate-rewrite xlate-rewrite369,13274
(defun xlate-pullneg xlate-pullneg409,14585
(defun xlate-pushneg xlate-pushneg428,15201
(defun xlate-subst xlate-subst443,15772
(defun xlate-indirect2 xlate-indirect2461,16344
(defun xlate-ineg xlate-ineg478,17003
(defun xlate-indirect xlate-indirect494,17531
(defun xlate-absurd xlate-absurd512,18070
(defun xlate-eneg xlate-eneg522,18457

ml-tactics-aux.lisp,98
(deffile ml-tactics-auxml-tactics-aux13,608
(deftactic universal-goal-puniversal-goal-p20,761

ml-tactics-prop.lisp,1430
(deffile ml-tactics-propml-tactics-prop14,631
(deftactic same-tacsame-tac19,762
(deftactic deduct-tacdeduct-tac48,1435
(deftactic mp-tacmp-tac74,2280
(deftactic econj-taceconj-tac120,3670
(deftactic econj*-taceconj*-tac149,4618
(defun econj*-tac-nat-ded-fn econj*-tac-nat-ded-fn158,4849
(deftactic iconj-taciconj-tac208,6531
(deftactic iconj*-taciconj*-tac234,7356
(defun iconj*-tac-nat-ded-fn iconj*-tac-nat-ded-fn243,7590
(defun find-all-conjuncts find-all-conjuncts291,9281
(deftactic cases-taccases-tac300,9444
(deftactic indirect-tacindirect-tac330,10438
(deftactic pushneg-tacpushneg-tac360,11334
(deftactic pullneg-tacpullneg-tac392,12418
(deftactic ineg-tacineg-tac421,13380
(deftactic disj-imp-tacdisj-imp-tac449,14207
(deftactic imp-disj-tacimp-disj-tac478,15177
(deftactic implics-equiv-tacimplics-equiv-tac507,16150
(deftactic equiv-implics-tacequiv-implics-tac534,17037
(deftactic absurd-tacabsurd-tac564,18064
(defun absurd-match3 absurd-match3570,18211
(defun absurd-nat-ded-fn absurd-nat-ded-fn574,18291
(deftactic truth-tactruth-tac592,18754
(defun truth-match3 truth-match3599,18893
(defun truth-tac-nat-ded-fn truth-tac-nat-ded-fn603,18964
(deftactic indirect2-tacindirect2-tac623,19574
(deftactic prop-primprop-prim672,21084
(deftactic propositionalpropositional681,21395
(deftactic rulep-tacrulep-tac693,21721
(deftactic eneg-taceneg-tac724,22763

ml-tactics-quant.lisp,1679
(deffile ml-tactics-quantml-tactics-quant15,633
(deftactic ugen-tacugen-tac20,753
(defun get-wff get-wff52,1689
(deftactic ui-tacui-tac61,2014
(deftactic rulec-tacrulec-tac95,3215
(deftactic egen-tacegen-tac142,5066
(deftactic abu-tacabu-tac175,6163
(deftactic quantificationalquantificational214,7404
(deftactic idef-tacidef-tac220,7509
(deftactic edef-tacedef-tac251,8440
(deftactic subst=l-tacsubst=l-tac287,9567
(deftactic subst=r-tacsubst=r-tac327,10791
(deftactic refl=-tacrefl=-tac367,12015
(deftactic sym=-tacsym=-tac386,12593
(defun lexpd*-matches lexpd*-matches416,13502
(defun lcontr*-matches lcontr*-matches419,13601
(defun lexpd*-beta-matches lexpd*-beta-matches422,13701
(defun lcontr*-beta-matches lcontr*-beta-matches425,13810
(defun lexpd*-eta-matches lexpd*-eta-matches428,13920
(defun lcontr*-eta-matches lcontr*-eta-matches431,14027
(deftactic lexpd*-vary-taclexpd*-vary-tac434,14135
(deftactic lcontr*-vary-taclcontr*-vary-tac451,14713
(deftactic beta-eta-together-tacbeta-eta-together-tac468,15304
(deftactic beta-eta-separate-tacbeta-eta-separate-tac482,15855
(deftactic beta-only-tacbeta-only-tac496,16414
(deftactic lexpd*-taclexpd*-tac511,16878
(deftactic lcontr*-taclcontr*-tac535,17719
(deftactic lexpd*-beta-taclexpd*-beta-tac560,18627
(deftactic lcontr*-beta-taclcontr*-beta-tac584,19503
(deftactic lexpd*-eta-taclexpd*-eta-tac609,20446
(deftactic lcontr*-eta-taclcontr*-eta-tac633,21315
(deftactic ext=-tac ext=-tac658,22251
(deftactic ext=0-tac ext=0-tac688,23382
(deftactic equiv-eq-contr-tac equiv-eq-contr-tac747,25705
(deftactic equiv-eq-expd-tacequiv-eq-expd-tac775,26778

modsav.lisp,230
(deffile modsavmodsav24,947
(defreview define-modedefine-mode31,1089
(defun define-mode define-mode46,1716
(defun write-mode write-mode51,1961
(defreview save-flagssave-flags77,2850
(defun save-flags save-flags94,3528

monitor.lisp,1812
(deffile monitormonitor17,635
(defmonitor monitor-checkmonitor-check26,787
(defun monitor-chk monitor-chk34,1030
(defun monitor-check monitor-check39,1186
(defmonitor focus-matingfocus-mating45,1337
(defun focus-mating-fn focus-mating-fn60,2153
(defun check-mpairlist check-mpairlist66,2436
(defun figure-out-mating figure-out-mating76,3060
(defun shuffle-flaglists shuffle-flaglists85,3453
(defun focus-mating focus-mating93,3940
(defun process-pfd-mating process-pfd-mating106,4591
(defun focus-print focus-print112,4803
(defun alist-msg alist-msg120,5186
(defun mating-equal mating-equal125,5363
(defun filter-alist filter-alist137,6032
(defmonitor focus-mating*focus-mating*145,6414
(defun focus-mating*-fn focus-mating*-fn163,7458
(defun read-flagvals read-flagvals170,7781
(defvar focus-storage focus-storage175,7933
(defun focus-mating* focus-mating*177,7961
(defmonitor focus-osetfocus-oset202,9118
(defun focus-oset-fn focus-oset-fn214,9649
(defun focus-oset-print focus-oset-print222,10098
(defmonitor focus-oset*focus-oset*230,10484
(defun focus-oset-fn* focus-oset-fn*245,11188
(defun check-oset check-oset254,11682
(defun focus-oset focus-oset265,12200
(defun focus-oset* focus-oset*272,12527
(defmonitor focus-otreefocus-otree287,13121
(defun focus-otree-fn focus-otree-fn299,13656
(defun focus-otree-print focus-otree-print307,14110
(defmonitor focus-otree*focus-otree*315,14498
(defun focus-otree-fn* focus-otree-fn*330,15207
(defun check-otree check-otree339,15706
(defun focus-otree focus-otree350,16213
(defun focus-otree* focus-otree*357,16543
(defmonitor push-matingpush-mating371,17126
(defun push-mating-fn push-mating-fn388,17978
(defun push-print push-print394,18185
(defun push-mating push-mating399,18348

monitor-macros.lisp,550
(deffile monitor-macrosmonitor-macros17,635
(defvar *current-monitorfn* *current-monitorfn*75,4236
(defvar *current-monitorfn-params* *current-monitorfn-params*76,4269
(defvar *monitorfn-params-print* *monitorfn-params-print*77,4309
(defflag monitorflagmonitorflag80,4381
(defmexpr monitormonitor88,4665
(defun monitor monitor96,5072
(defmexpr nomonitornomonitor105,5441
(defun nomonitor nomonitor112,5762
(defmexpr monitorlistmonitorlist120,6135
(defun monitorlist monitorlist123,6199
(defcategory monitorfnmonitorfn132,6561

ms90-3-data.lisp,233
(deffile ms90-3-datams90-3-data13,606
(defvar conn-debug conn-debug21,933
(defstruct (conn conn23,958
(defmacro car-conn car-conn45,2062
(defmacro cdr-conn cdr-conn48,2111
(defmacro path-to-subpath path-to-subpath52,2162

ms90-3-expand-etree.lisp,1398
(deffile ms90-3-expand-etreems90-3-expand-etree13,606
(defmateop expand-etreeexpand-etree27,1077
(defvar *exp-etree-jform-to-etree-subst-list* *exp-etree-jform-to-etree-subst-list*32,1252
(defvar ms90-3-mating)ms90-3-mating33,1303
(defvar *changed-parents*)*changed-parents*38,1498
(defvar *instantiate-fiddle* *instantiate-fiddle*40,1526
(defun expand-etree expand-etree42,1561
(defun skolemize-free-vars-in-subst-list skolemize-free-vars-in-subst-list127,4894
(defun rm-unused-exps rm-unused-exps156,5967
(defun exp-etree-jform-to-etree exp-etree-jform-to-etree171,6479
(defun make-new-subst make-new-subst216,8280
(defun subst-eta-reduction subst-eta-reduction223,8549
(defun get-subst-from-univ-node get-subst-from-univ-node237,9142
(defun generic-constant generic-constant257,9806
(defun find-outer-univ-parents find-outer-univ-parents268,10241
(defun find-outer-exp-nodes find-outer-exp-nodes284,10791
(defun divvy-up-univ-nodes divvy-up-univ-nodes290,10995
(defun make-exp-etree-jform make-exp-etree-jform316,11808
(defun qvar-to-exp-node qvar-to-exp-node387,14305
(defun finish-conj-node finish-conj-node400,14791
(defun construct-ms88-mating construct-ms88-mating460,16575
(defun generate-new-mating generate-new-mating506,18688
(defun represents-expansion-node represents-expansion-node567,21126
(defun ms88-patch-up ms88-patch-up577,21611

ms90-3-exp-jform.lisp,737
(deffile ms90-3-exp-jformms90-3-exp-jform12,589
(defun find-all-dups find-all-dups17,712
(defun locate-exp-var locate-exp-var38,1633
(defun add-exp-node-jform add-exp-node-jform55,2293
(defun exp-jform exp-jform89,3999
(defun subst-in-lits subst-in-lits145,6938
(defun subst-in-literal subst-in-literal160,7435
(defun find-exp-terms find-exp-terms173,7768
(defun expand-subst expand-subst192,8371
(defun ho-unif-lnorm-1 ho-unif-lnorm-1204,8733
(defun ho-unif-lnorm-1-rec ho-unif-lnorm-1-rec210,8972
(defun rename-lits rename-lits253,10875
(defun collapse-jform-barrier collapse-jform-barrier262,11307
(defun cnvrt-prop-jform cnvrt-prop-jform295,12587
(defun duplicate-jform-ren duplicate-jform-ren303,12916

ms90-3-node.lisp,1213
(deffile ms90-3-nodems90-3-node13,606
(defstruct (unode unode18,795
(defun print-unode print-unode26,929
(defflag num-of-dupsnum-of-dups36,1320
(defconstant default-env-stack default-env-stack44,1606
(defconstant bkup-disj bkup-disj45,1652
(defconstant pre-conn pre-conn46,1679
(defflag show-timeshow-time51,1725
(defflag num-frpairsnum-frpairs57,1909
(defmateop ms90-3ms90-366,2247
(defmateop prop-msearchprop-msearch73,2590
(defun mate-prop-msearch mate-prop-msearch78,2773
(defun mate-prop-msearch-silent mate-prop-msearch-silent98,3518
(defun prop-msearch-silent prop-msearch-silent117,4185
(defun ms90-3-real ms90-3-real134,4857
(defvar dup-record dup-record138,4942
(defvar ms90-3-jform ms90-3-jform139,4966
(defvar unif-prob unif-prob140,4992
(defun ms90-3-controller ms90-3-controller142,5016
(defun remove-sk-labels remove-sk-labels168,6018
(defun remove-sk-labels-wff remove-sk-labels-wff176,6402
(defflag ms90-3-dup-strategyms90-3-dup-strategy184,6667
(defvar neg-h-var-list neg-h-var-list192,6998
(defvar imitation-h-var-list imitation-h-var-list194,7088
(defflag print-mating-counterprint-mating-counter197,7175
(defflag max-matesmax-mates205,7457

ms90-3-path-bkup.lisp,145
(deffile ms90-3-path-bkupms90-3-path-bkup14,607
(defun find-alt-conn find-alt-conn19,753
(defun find-alt-conn-rec find-alt-conn-rec41,1910

ms90-3-path-enum.lisp,991
(deffile ms90-3-path-enumms90-3-path-enum14,607
(defmacro empty-conjunction empty-conjunction26,977
(defmacro empty-disjunction empty-disjunction29,1087
(defun car-not-empty car-not-empty33,1199
(defun pair-in-mating-p pair-in-mating-p37,1315
(defun find-cheapest-path find-cheapest-path46,1662
(defun find-alt-path-top find-alt-path-top85,3297
(defun find-alt-path find-alt-path98,3881
(defun complete-alt-path complete-alt-path150,6439
(defun complete-alt-path-and complete-alt-path-and169,7245
(defun check-conn check-conn185,8016
(defun initialize-conn initialize-conn224,10106
(defun check-conn-path check-conn-path237,10629
(defflag ms90-3-quickms90-3-quick257,11785
(defun ho-banned-conn-p ho-banned-conn-p264,11986
(defun quick-forbid quick-forbid282,12787
(defun conn-unif-p conn-unif-p297,13424
(defun same-lit-occ-p same-lit-occ-p361,16107
(defun order-contained-p order-contained-p373,16543
(defun lit-in-mating-p lit-in-mating-p378,16685

ms90-3-prop.lisp,384
(deffile ms90-3-propms90-3-prop13,590
(defvar *cgraph*)*cgraph*18,690
(defvar *cgraph2*)*cgraph2*19,708
(defun prop-setup-cgraph prop-setup-cgraph26,913
(defun prop-find-cheapest-path prop-find-cheapest-path61,2595
(defun prop-complete-alt-path prop-complete-alt-path78,3352
(defun prop-find-alt-path prop-find-alt-path91,3890
(defun prop-msearch prop-msearch124,5244

ms90-3-top.lisp,1608
(deffile ms90-3-topms90-3-top13,606
(defvar *ms90-3-cgraph* *ms90-3-cgraph*52,2695
(defvar dup-record)dup-record53,2752
(defun msearch msearch55,2773
(defun msearch-real msearch-real60,2954
(defun check-duplication check-duplication239,10839
(defun duplicate-jform duplicate-jform267,12164
(defun rename-using rename-using308,14252
(defflag max-dup-pathsmax-dup-paths314,14460
(defun find-outmost-univ find-outmost-univ321,14745
(defun find-inner-univ find-inner-univ327,14926
(defun find-next-dupfind-next-dup343,15597
(defflag total-num-of-dupstotal-num-of-dups353,16022
(defvar *temp-num-of-dups* *temp-num-of-dups*366,16582
(defun count-dups-in count-dups-in368,16615
(defun find-next-dup-outerfind-next-dup-outer374,16846
(defun find-next-dup-innerfind-next-dup-inner428,19292
(defun backtrack-top backtrack-top499,22755
(defun backtrack backtrack522,24044
(defun no-backtrack-handler no-backtrack-handler610,28358
(defun restore-unif-prob restore-unif-prob628,29435
(defun find-path-elts find-path-elts643,30081
(defun locate-exp-add locate-exp-add667,31063
(defun mark-ext-exp-nodes mark-ext-exp-nodes677,31425
(defun sort-ms90-3-jform sort-ms90-3-jform692,32052
(defun set-max-mates set-max-mates708,32720
(defun transform-mating transform-mating717,33179
(defun transform-dup-record transform-dup-record724,33423
(defun ms90-3-print-mating ms90-3-print-mating731,33700
(defun increase-paths-below increase-paths-below736,33852
(defun decrease-paths-below decrease-paths-below741,34039
(defun find-paths-below find-paths-below746,34226

ms90-3-unif-fo.lisp,524
(deffile ms90-3-unif-foms90-3-unif-fo14,607
(defun pfd-occurs-in-term-p pfd-occurs-in-term-p19,756
(defun pfd-fo-unify-conn pfd-fo-unify-conn33,1340
(defun pfd-fo-unify pfd-fo-unify44,1822
(defun pfd-fo-unify-real pfd-fo-unify-real51,2038
(defun pfd-fo-unify-rec pfd-fo-unify-rec62,2472
(defun pfd-fo-unify-rec-real pfd-fo-unify-rec-real69,2740
(defun pfd-fo-unify-rec1 pfd-fo-unify-rec1111,4273
(defun pfd-fo-unify-rec1-real pfd-fo-unify-rec1-real118,4515
(defun simplify-term-p simplify-term-p130,5007

ms90-3-unif-match.lisp,1028
(deffile ms90-3-unif-matchms90-3-unif-match13,606
(defun ho-construct-type ho-construct-type39,1367
(defun ho-construct-term ho-construct-term44,1505
(defun ho-construct-E-i ho-construct-E-i48,1615
(defun ho-construct-E-j ho-construct-E-j53,1833
(defun ho-construct-projection-1 ho-construct-projection-162,2192
(defun projections-ho projections-ho68,2464
(defun projections-ho-count projections-ho-count81,3086
(defun ho-construct-imitation-term ho-construct-imitation-term90,3496
(defun pfd-ho-dneg-imitation-term pfd-ho-dneg-imitation-term101,3990
(defun construct-sk-imitation-term-ho construct-sk-imitation-term-ho108,4287
(defun imitation-ho imitation-ho119,4940
(defun imitation-ho imitation-ho147,6232
(defun imitation-ho-count imitation-ho-count169,7278
(defun ren-var-uni-ho ren-var-uni-ho177,7509
(defun create-new-w-vars create-new-w-vars188,8051
(defun ho-match-top ho-match-top195,8337
(defun find-fhead find-fhead204,8709
(defun ho-match-top-count ho-match-top-count210,8853

ms90-3-unif-simpl.lisp,1598
(deffile ms90-3-unif-simplms90-3-unif-simpl13,606
(defun simpl-head simpl-head18,735
(defun ho-free-in ho-free-in24,899
(defflag rigid-path-ckrigid-path-ck41,1523
(defmacro ho-simpl ho-simpl49,1838
(defun simpl-term-binder simpl-term-binder54,1949
(defun rigid-path-p rigid-path-p63,2285
(defun ho-simpl-rigid ho-simpl-rigid74,2623
(defun ho-simpl-no-rigid ho-simpl-no-rigid131,4889
(defun fo-simpl fo-simpl171,6577
(defun ck-binder ck-binder181,6852
(defun find-rhead find-rhead198,7771
(defun stepa-simpl stepa-simpl202,7897
(defun prefix-l-both prefix-l-both223,8864
(defun ho-construct-term-1 ho-construct-term-1229,9104
(defun flip-negs flip-negs233,9224
(defun ho-simpl-subst-check ho-simpl-subst-check247,9722
(defun ho-check-simpl-count ho-check-simpl-count261,10448
(defun ho-free-vars-of ho-free-vars-of291,11676
(defun make-banned make-banned304,12319
(defun cyclic-selection-terms cyclic-selection-terms311,12698
(defun full-norm-fo full-norm-fo342,14171
(defun expand-subst-fo expand-subst-fo351,14390
(defun get-universals get-universals363,14776
(defun ms88-cyclic-selection-terms ms88-cyclic-selection-terms374,15312
(defvar *vars-checked*)*vars-checked*389,16187
(defun get-real-cycles get-real-cycles391,16212
(defun find-cycle-beginning-at find-cycle-beginning-at402,16873
(defun find-cycle-fn find-cycle-fn413,17506
(defun occurs-in occurs-in418,17710
(defun all-occurs-in all-occurs-in426,17915
(defun ho-unif-lnorm-full ho-unif-lnorm-full434,18166
(defun ho-unif-lnorm-full-rec ho-unif-lnorm-full-rec439,18357

ms90-3-unif-tree.lisp,2275
(deffile ms90-3-unif-treems90-3-unif-tree13,606
(defun ho-bind-vars ho-bind-vars19,743
(defun ho-unif-lnorm ho-unif-lnorm30,1183
(defun ho-unif-lnorm-rec ho-unif-lnorm-rec36,1365
(defun rigidp rigidp90,4094
(defun create-successors create-successors97,4330
(defflag countsubs-firstcountsubs-first110,4644
(defmacro ho-unif-match ho-unif-match122,5095
(defmacro ho-unif-match-substs ho-unif-match-substs127,5225
(defun ho-unif-match-uncount ho-unif-match-uncount132,5376
(defun ho-unif-match-count ho-unif-match-count159,6382
(defun ho-unif-match-count-substs ho-unif-match-count-substs206,8152
(defun ho-unif-match-uncount-substs ho-unif-match-uncount-substs257,10426
(defun ho-check-simpl-count-2 ho-check-simpl-count-2298,12342
(defun ho-unify ho-unify329,13552
(defun ho-unify-df ho-unify-df346,14328
(defun ho-unify-bf ho-unify-bf371,15603
(defun ho-unify-best ho-unify-best400,16869
(defun unode-free-vars unode-free-vars426,17979
(defun ho-free-vars ho-free-vars436,18354
(defun ho-free-vars2 ho-free-vars2439,18430
(defun ho-unify-msv ho-unify-msv451,18971
(defun ho-leibniz-subs-ok ho-leibniz-subs-ok494,20609
(defun ho-free-in-2 ho-free-in-2519,21532
(defun ho-unif-match-count-msq ho-unif-match-count-msq525,21721
(defun create-successors-2 create-successors-2592,24651
(defun ho-unify-rec ho-unify-rec628,26081
(defmexpr least-search-depthleast-search-depth660,27431
(defun least-search-depth least-search-depth665,27664
(defvar *max-substs-depth* *max-substs-depth*728,31362
(defun find-max-substs find-max-substs730,31395
(defun find-success-node find-success-node738,31872
(defun find-success-node-rec find-success-node-rec782,33724
(defun ms90-3-find-subs-flexible-pairs ms90-3-find-subs-flexible-pairs804,34687
(defun ms90-3-head ms90-3-head841,36344
(defun ms90-3-genhash-sub ms90-3-genhash-sub850,36608
(defun ms90-3-unif-hash-fn ms90-3-unif-hash-fn862,37118
(defun ms90-3-subsumption-check ms90-3-subsumption-check875,37730
(defun ms90-3-canonical-form-check ms90-3-canonical-form-check902,38873
(defun inc-numbers inc-numbers913,39570
(defun unif-stats3 unif-stats3946,40972
(defun stats-rec-2 stats-rec-2953,41191
(defun print-unif-stats-2 print-unif-stats-2961,41401

ms90-9.lisp,156
(deffile ms90-9ms90-915,633
(defmateop ms90-9ms90-923,806
(defun ms90-9-real ms90-9-real33,1300
(defun auto-search-ms90-9 auto-search-ms90-937,1385

ms91-basic.lisp,2653
(deffile ms91-basicms91-basic14,605
(defvar *option-list* *option-list*20,849
(defvar *length-of-option-list* *length-of-option-list*23,944
(defvar *option-set-list* *option-set-list*26,1046
(defstruct (option-set option-set28,1078
(defun print-option-set print-option-set37,1504
(defstruct (option option42,1665
(defun print-option print-option47,1849
(defvar *expansion-level* *expansion-level*56,2159
(defvar *absolute-max-weight-d* *absolute-max-weight-d*60,2334
(defvar *expansion-to-option-hash-table* *expansion-to-option-hash-table*65,2525
(defvar *minimal-option-hash-table* *minimal-option-hash-table*71,2793
(defvar *weight-d-hash-table* *weight-d-hash-table*77,3045
(defun init-option-search init-option-search82,3260
(defun options-to-option-set options-to-option-set104,4057
(defun options-to-option-set-2 options-to-option-set-2132,5065
(defun make-new-options make-new-options161,6112
(defun sort-by-name sort-by-name174,6715
(defun expansion-to-options expansion-to-options181,6963
(defun add-option-to-hash-table add-option-to-hash-table184,7048
(defsetf expansion-to-options expansion-to-options187,7157
(defun minimal-option minimal-option190,7215
(defun add-option-to-minimal-option-table add-option-to-minimal-option-table193,7289
(defsetf minimal-option minimal-option197,7404
(defun set-equal set-equal199,7465
(defun make-new-option-set make-new-option-set203,7581
(defun make-new-option-set-2 make-new-option-set-2221,8211
(defun options-to-eproof options-to-eproof240,8904
(defun make-higher-order-options make-higher-order-options247,9108
(defflag ms91-interleavems91-interleave275,10312
(defvar *primsubs-remaining* *primsubs-remaining*306,11788
(defun make-higher-order-expansions** make-higher-order-expansions**308,11823
(defun make-higher-order-expansions* make-higher-order-expansions*330,12532
(defun apply-prim-subs-partial apply-prim-subs-partial348,13235
(defun make-first-order-options make-first-order-options413,15980
(defun add-new-expansions-to-master-tree* add-new-expansions-to-master-tree*421,16275
(defun get-initial-expansions* get-initial-expansions*445,17326
(defun expansion-terms-to-option expansion-terms-to-option461,17841
(defun add-to-option-list add-to-option-list476,18306
(defun reorder-option-set-list reorder-option-set-list481,18424
(defun reorder-option-list reorder-option-list485,18560
(defun reorder-list reorder-list494,18888
(defmode ms91-simplestms91-simplest508,19298
(defmode ms91-originalms91-original523,19786
(defmode ms91-nodupsms91-nodups542,20408
(defmode ms91-deepms91-deep562,21146

ms91-enumerate.lisp,705
(deffile ms91-enumeratems91-enumerate13,604
(defvar *option-search-markers* *option-search-markers*21,894
(defvar *option-set-weight-limit* *option-set-weight-limit*22,931
(defvar *min-weight-d-on-this-round* *min-weight-d-on-this-round*24,969
(defun get-next-option-set get-next-option-set28,1122
(defflag ms91-time-by-vpathsms91-time-by-vpaths37,1425
(defflag ms91-prefer-smallerms91-prefer-smaller50,1994
(defflag ms91-weight-limit-rangems91-weight-limit-range56,2165
(defun get-extended-option-set get-extended-option-set77,3328
(defun get-next-set-in-lex-order get-next-set-in-lex-order111,5025
(defun get-next-set-in-lex-smaller-order get-next-set-in-lex-smaller-order143,6288

ms91-search.lisp,2199
(deffile ms91-searchms91-search14,605
(defun option-search option-search20,744
(defun choose-lowest-option-set choose-lowest-option-set94,4362
(defun print-option-set-subs print-option-set-subs118,5324
(defun ordinal-print ordinal-print138,6310
(defun limited-mating-search-option limited-mating-search-option145,6515
(defun adjust-option-set-ranking adjust-option-set-ranking181,8302
(defun destroy-utree destroy-utree213,10175
(defun decide-to-continue-option decide-to-continue-option219,10342
(defun decide-to-update-option-sets decide-to-update-option-sets224,10482
(defun find-percent-option-sets-changed find-percent-option-sets-changed233,10830
(defun fudge-time-used fudge-time-used240,11054
(defun finish-up-option-search finish-up-option-search243,11214
(defun report-option-search report-option-search261,12198
(defun update-option-sets update-option-sets278,12992
(defun decide-to-add-options decide-to-add-options325,15340
(defun add-options-original add-options-original332,15633
(defun number-of-possible-option-sets number-of-possible-option-sets345,16094
(defun implic-node implic-node350,16294
(defun decide-to-add-options-real decide-to-add-options-real353,16351
(defun add-options-weight add-options-weight363,16838
(defun add-options-subs add-options-subs366,16929
(defun add-options-count add-options-count372,17109
(defflag new-option-set-limit new-option-set-limit381,17501
(defun make-new-option-sets make-new-option-sets389,17717
(defmateop ms91-6ms91-6420,19178
(defun auto-search-ms91-6 auto-search-ms91-6445,20576
(defun ms91-6-real ms91-6-real450,20713
(defun ms91-7-real ms91-7-real454,20798
(defmateop ms91-7ms91-7458,20883
(defun auto-search-ms91-7 auto-search-ms91-7483,22283
(defmexpr search-ordersearch-order490,22473
(defun search-order-ms91 search-order-ms91508,23406
(defun adjust-oset-2 adjust-oset-2636,29315
(defun print-option-set-s-d print-option-set-s-d642,29555
(defun print-dups-2 print-dups-2663,30440
(defun compute-emptydups compute-emptydups681,31094
(defun update-osets-2 update-osets-2696,31984
(defun stuck-checker stuck-checker719,33061
(defun infp infp722,33163

ms91-weights.lisp,3916
(deffile ms91-weightsms91-weights14,605
(defflag weight-a-coefficientweight-a-coefficient21,774
(defflag weight-b-coefficientweight-b-coefficient30,1144
(defflag weight-c-coefficientweight-c-coefficient40,1529
(defflag penalty-for-multiple-primsubspenalty-for-multiple-primsubs50,1900
(defflag penalty-for-multiple-subspenalty-for-multiple-subs59,2268
(defflag penalty-for-each-primsubpenalty-for-each-primsub68,2622
(defflag penalty-for-ordinary-duppenalty-for-ordinary-dup76,2954
(defflag options-verboseoptions-verbose85,3342
(defflag options-generate-fnoptions-generate-fn92,3518
(definfo add-options-originaladd-options-original118,4914
(definfo add-options-weightadd-options-weight124,5156
(definfo add-options-countadd-options-count129,5363
(definfo add-options-subsadd-options-subs134,5541
(defflag options-generate-argoptions-generate-arg140,5775
(defflag options-generate-updateoptions-generate-update148,6086
(definfo ident-argident-arg161,6520
(definfo double-argdouble-arg166,6680
(definfo square-argsquare-arg171,6832
(definfo inf-arginf-arg176,6984
(defun compute-weight-d compute-weight-d181,7139
(defun compute-weight-d-real compute-weight-d-real186,7297
(defun sum-weight-a sum-weight-a215,8409
(defflag weight-a-fnweight-a-fn223,8628
(definfo expansion-level-weight-aexpansion-level-weight-a234,9122
(defun compute-weight-a compute-weight-a240,9404
(defun expansion-level-weight-a expansion-level-weight-a243,9488
(defflag weight-b-fnweight-b-fn249,9602
(definfo simple-weight-b-fnsimple-weight-b-fn268,10660
(definfo all-penalties-fnall-penalties-fn275,10961
(definfo simplest-weight-b-fnsimplest-weight-b-fn280,11156
(defun compute-weight-b compute-weight-b286,11415
(defun simple-dupe-p simple-dupe-p289,11501
(defun simple-weight-b-fn simple-weight-b-fn297,11839
(defun weight-b-a weight-b-a332,13391
(defun all-penalties-fn all-penalties-fn340,13610
(defun simplest-weight-b-fn simplest-weight-b-fn367,14706
(defun compute-penalty-for-ordinary-dups compute-penalty-for-ordinary-dups389,15508
(defun compute-penalty-for-lack-of-earlier-copy compute-penalty-for-lack-of-earlier-copy410,16450
(defun compute-penalty-for-primsubs compute-penalty-for-primsubs432,17308
(defun compute-simplest-penalty-for-primsubs compute-simplest-penalty-for-primsubs449,18061
(defun compute-penalty-for-multiple-subs compute-penalty-for-multiple-subs464,18716
(defun compute-simplest-penalty-for-multiple-subs compute-simplest-penalty-for-multiple-subs479,19288
(defflag weight-c-fnweight-c-fn493,19740
(definfo option-set-num-vpathsoption-set-num-vpaths506,20359
(definfo option-set-num-leavesoption-set-num-leaves510,20501
(defun compute-weight-c compute-weight-c514,20630
(defun option-set-num-leaves option-set-num-leaves517,20716
(defun options-number-of-leaves options-number-of-leaves522,20891
(defun option-set-num-vpaths option-set-num-vpaths559,22201
(defun options-number-of-vertical-paths options-number-of-vertical-paths564,22384
(defflag reconsider-fnreconsider-fn601,23748
(definfo inf-weightinf-weight613,24345
(definfo square-weightsquare-weight618,24528
(definfo double-weightdouble-weight622,24655
(definfo increment-weightincrement-weight626,24782
(defun reconsider-weight reconsider-weight630,24915
(defun inf-weight inf-weight633,25002
(defun square-weight square-weight637,25072
(defun double-weight double-weight639,25122
(defun increment-weight increment-weight641,25167
(defun option-> option->648,25369
(defun option->= option->=656,25553
(defun option-= option-=664,25738
(defun option-+ option-+672,25927
(defun option-min option-min680,26131
(defun option-non-inf-max option-non-inf-max691,26451
(defun square-arg square-arg700,26670
(defun double-arg double-arg703,26769
(defun ident-arg ident-arg706,26868
(defun inf-arg inf-arg708,26890

ms92-9-top.lisp,162
(deffile ms92-9-topms92-9-top12,589
(defun ms92-9-controller ms92-9-controller20,772
(defmateop ms92-9ms92-983,3643
(defun ms92-9-real ms92-9-real97,4296

ms93-1.lisp,197
(deffile ms93-1ms93-115,635
(defmateop ms93-1ms93-124,908
(defun ms93-1-real ms93-1-real36,1517
(defvar dummy-N-O-D dummy-N-O-D40,1602
(defun auto-search-ms93-1 auto-search-ms93-142,1627

ms98-dagify.lisp,3376
(deffile ms98-dagifyms98-dagify14,607
(defun make-dnode1 make-dnode119,737
(defun get-collect-sons get-collect-sons43,1737
(defun get-collect-sons-real get-collect-sons-real46,1812
(defun key2-fn key2-fn54,2116
(defun dnode-key-cdr dnode-key-cdr57,2164
(defun dnode-key-car dnode-key-car60,2225
(defun sumbelow sumbelow63,2286
(defun branchbelow branchbelow69,2440
(defun mark-dag mark-dag75,2574
(defun dname dname84,2862
(defun dcollect dcollect85,2911
(defun dvars-d dvars-d86,2963
(defun mark-dag-real mark-dag-real88,3007
(defun prune-unmarked-array prune-unmarked-array94,3208
(defun showme-unmarked-array showme-unmarked-array116,3877
(defun markp markp133,4300
(defun dagify-nodes dagify-nodes138,4467
(defun dagify-nodes-1 dagify-nodes-1143,4594
(defun insert-new-subnode insert-new-subnode157,5094
(defun sublist-order sublist-order171,5653
(defun dagify-nodes-2 dagify-nodes-2178,5938
(defun failprune failprune204,6944
(defun get-check-allb get-check-allb207,6992
(defun cyclic-selection-dag cyclic-selection-dag216,7308
(defun dag-find-cycle-beginning-at dag-find-cycle-beginning-at226,7832
(defun dagassoc dagassoc234,8211
(defun dag-find-cycle-fn dag-find-cycle-fn241,8427
(defun same-sublist same-sublist246,8643
(defun dag-isom-flat2 dag-isom-flat2251,8833
(defun daghash-get daghash-get262,9238
(defun nullist nullist267,9384
(defun merge-dags merge-dags272,9482
(defun get-lookup-list get-lookup-list280,9784
(defun merge-dags-1 merge-dags-1287,10089
(defun merge-dags-2 merge-dags-2322,11421
(defun merge-if-compatible merge-if-compatible370,13583
(defun combine-identical-real combine-identical-real382,13925
(defun get-mergelist get-mergelist408,14886
(defun lex-sublist lex-sublist412,15047
(defun combine-identical-sons combine-identical-sons418,15179
(defun dag-will-merge dag-will-merge421,15312
(defun known-mergeable known-mergeable426,15446
(defun known-not-mergeable known-not-mergeable434,15717
(defun dag-will-merge-1 dag-will-merge-1442,15992
(defun dag-will-merge-2 dag-will-merge-2459,16596
(defun compatible-sublists compatible-sublists487,17783
(defun primcheck-sublists primcheck-sublists494,18029
(defun collapse-dag collapse-dag500,18261
(defun collapse-fn-2 collapse-fn-2504,18379
(defun collapse-dag-real collapse-dag-real507,18428
(defun apply-sub-to-dag apply-sub-to-dag518,18918
(defun rearrange-sublist rearrange-sublist530,19514
(defun count-subs-in-dag count-subs-in-dag537,19887
(defun extract-sub-from extract-sub-from544,20071
(defun extract-sub-fn extract-sub-fn547,20164
(defun extract-sub-from-real extract-sub-from-real549,20214
(defun daglist-will-merge daglist-will-merge554,20419
(defun merge-fn-1 merge-fn-1563,20700
(defun daglist-will-merge-2 daglist-will-merge-2565,20752
(defun daglist-recursive-merge-2 daglist-recursive-merge-2576,21244
(defun parse-daglist parse-daglist595,22306
(defun parse-dlist-1 parse-dlist-1603,22589
(defun all-zeros all-zeros605,22642
(defun all-same all-same609,22829
(defun iterate-same iterate-same615,23046
(defun ndags-1 ndags-1620,23235
(defun ndags-recurse ndags-recurse625,23361
(defun n-compatible-sublists n-compatible-sublists641,24073
(defun pair-will-merge pair-will-merge646,24319
(defun pair-wont-merge pair-wont-merge651,24583

ms98-dups.lisp,1443
(deffile ms98-dupsms98-dups14,607
(defmateop ms98-primms98-prim19,760
(defmateop ms98-dupms98-dup25,944
(defun ms98-prim ms98-prim30,1079
(defun ms98-make-primlist ms98-make-primlist42,1530
(defun make-primsubs-all-counted make-primsubs-all-counted60,2451
(defun apply-prim-subs-notrew apply-prim-subs-notrew71,3056
(defun apply-prim-subs-notrew* apply-prim-subs-notrew*80,3381
(defun apply-prim-subs-all-counted apply-prim-subs-all-counted90,3740
(defun apply-prim-subs-all-counted* apply-prim-subs-all-counted*99,4075
(defun apply-prim-subs-counted apply-prim-subs-counted109,4366
(defun find-primsubs-and-dup-below find-primsubs-and-dup-below156,6314
(defun find-primsubs-in-etree find-primsubs-in-etree160,6455
(defun ms98-dup ms98-dup169,6799
(defun ms98-dup-subtree ms98-dup-subtree174,7013
(defun ccs-dup-outers ccs-dup-outers179,7190
(defun dup-outers-fn-1 dup-outers-fn-1190,7618
(defun ccs-dup-outers* ccs-dup-outers*198,7985
(defun pbelow-fn-1 pbelow-fn-1210,8379
(defun get-prims-below get-prims-below212,8428
(defun prims-below-map prims-below-map215,8550
(defun fragments-covered-by fragments-covered-by230,9363
(defun get-sk-below-primsubs get-sk-below-primsubs234,9588
(defun getsel-fn-1 getsel-fn-1243,10073
(defun get-selections-here get-selections-here245,10148
(defun get-sk-below-dups get-sk-below-dups250,10336
(defun hack-primsubs-about hack-primsubs-about262,11023

ms98-jform.lisp,4249
(deffile ms98-jformms98-jform14,607
(defun find-comps-touching find-comps-touching19,729
(defun fiddle-disjs fiddle-disjs22,849
(defun get-priority get-priority26,980
(defun dup-rel-jforms dup-rel-jforms40,1867
(defun dup-rel-jforms-2 dup-rel-jforms-265,2706
(defun build-duplicate-reln build-duplicate-reln76,2938
(defun ubind ubind117,4318
(defun upward-collectvars upward-collectvars123,4471
(defun darrange darrange129,4699
(defun get-varchanges get-varchanges150,5489
(defun insert-in-cgraph-2 insert-in-cgraph-2155,5694
(defun ccs-reorganize ccs-reorganize165,6171
(defun disjunction-width disjunction-width171,6437
(defun break-into-disjuncts break-into-disjuncts183,7016
(defun break-into-disjuncts-real break-into-disjuncts-real186,7090
(defun not-going-to-duplicate-anyway not-going-to-duplicate-anyway304,12118
(defun contains-univ contains-univ310,12269
(defun find-junctive-ancestors find-junctive-ancestors319,12578
(defun plausible-conn plausible-conn326,12860
(defun ccs-mateable ccs-mateable329,12960
(defun find-blocks find-blocks335,13123
(defun find-free-vars-in find-free-vars-in343,13387
(defun no-higher-disjunct no-higher-disjunct350,13674
(defun next-disjunct next-disjunct357,13875
(defun get-leftmost get-leftmost360,13973
(defun etree-ancestor-list etree-ancestor-list368,14272
(defun same-ccs-connlist same-ccs-connlist373,14411
(defun valid-addition-2 valid-addition-2377,14514
(defun valid-addition-2-real valid-addition-2-real389,14936
(defun compat-unify-check compat-unify-check443,17391
(defun pairwise-check-dags pairwise-check-dags455,17806
(defun get-new-conns-for get-new-conns-for471,18457
(defun get-all-ccs-permutations-2 get-all-ccs-permutations-2512,20059
(defun stands-disjunctively stands-disjunctively519,20316
(defun lowest-common-jf-ancestor lowest-common-jf-ancestor522,20417
(defun stands-conjunctively stands-conjunctively531,20810
(defun ancestors-until ancestors-until534,20931
(defun order-vars order-vars541,21171
(defun free-vars-grouped free-vars-grouped544,21232
(defun get-grouped-lists-below get-grouped-lists-below552,21623
(defun free-vars-all free-vars-all567,22261
(defun get-live-vars get-live-vars572,22428
(defvar *no-vars*)*no-vars*580,22771
(defun order-vars-2 order-vars-2582,22791
(defun occurs-with occurs-with647,25537
(defun too-many-dups-clist too-many-dups-clist651,25673
(defun enumerate-all-matings enumerate-all-matings659,25971
(defun enumerate-horizontal-paths enumerate-horizontal-paths764,31359
(defun get-all-ccs-permutations-of get-all-ccs-permutations-of779,31891
(defun bunch-together bunch-together786,32136
(defun bunch-together-real bunch-together-real789,32192
(defun recursively-bunch recursively-bunch825,34217
(defun recurse-dp recurse-dp838,34854
(defun not-primsub not-primsub844,35152
(defun fragments-below fragments-below847,35224
(defun find-expansion-covering find-expansion-covering853,35440
(defun find-compatible-expansion find-compatible-expansion859,35640
(defun ebelow ebelow874,36258
(defun ascend-to-exp-node ascend-to-exp-node877,36354
(defun does-dups-first does-dups-first883,36501
(defun does-dups-first-2b does-dups-first-2b898,37186
(defun does-dups-first-2 does-dups-first-2920,38172
(defun does-dups-first-2-init does-dups-first-2-init928,38516
(defun too-many-dups too-many-dups936,38834
(defun ccs-count-dups-in ccs-count-dups-in943,39125
(defun ccs-count-prims-in ccs-count-prims-in953,39555
(defun ccs-banned-sk-consts ccs-banned-sk-consts958,39711
(defun ccs-banned-2 ccs-banned-2969,40153
(defun store-banned-list store-banned-list982,40721
(defun lookup-banned-list lookup-banned-list987,40862
(defun sk-extract-dups sk-extract-dups993,41030
(defun excess-maxmates-ok excess-maxmates-ok1003,41461
(defun remove-flex-lits-from-jform remove-flex-lits-from-jform1013,41922
(defun remove-flex-lits-from-jform-rec remove-flex-lits-from-jform-rec1017,42039
(defun dissolve-flex-lits-from-jform dissolve-flex-lits-from-jform1064,43400
(defun dissolve-flex-lits-from-jform-rec dissolve-flex-lits-from-jform-rec1068,43520
(defun ccs-dissolve-clist ccs-dissolve-clist1109,44770

ms98-macros.lisp,6467
(deffile ms98-macrosms98-macros14,607
(defconstant *arbitrary-const* *arbitrary-const*19,740
(defvar *one*)*one*22,885
(defvar *two*)*two*23,901
(defvar *touches*)*touches*24,916
(defvar ccso)ccso26,1015
(defvar *dag-vars-checked*)*dag-vars-checked*27,1029
(defvar *primsubs-for-ms98*)*primsubs-for-ms98*28,1057
(defvar *current-primsub*)*current-primsub*29,1086
(defvar *ms98-start-time*)*ms98-start-time*30,1113
(defvar *banme*)*banme*31,1140
(defvar *lookup*)*lookup*32,1157
(defvar *sortedvar* *sortedvar*33,1175
(defvar *find-cycle-fn-list*)*find-cycle-fn-list*34,1198
(defvar *dnode-count*)*dnode-count*35,1228
(defvar *vafindex*)*vafindex*36,1251
(defvar *vaf* *vaf*37,1271
(defvar *valid-hash*)*valid-hash*38,1288
(defvar *openfrag-list*)*openfrag-list*39,1310
(defvar *extra-sk-vars*)*extra-sk-vars*40,1335
(defvar *fo-delete*)*fo-delete*41,1360
(defvar *temp-dups*)*temp-dups*42,1381
(defvar *subs-involving*)*subs-involving*43,1402
(defvar *usc-list*)*usc-list*44,1428
(defvar *rewrite-unif-hash*)*rewrite-unif-hash*45,1448
(defvar *rewrite-varcheck*)*rewrite-varcheck*46,1477
(defvar *uavp-hash*)*uavp-hash*47,1505
(defvar *uavp-count*)*uavp-count*48,1526
(defvar *sk-below-dups*)*sk-below-dups*49,1548
(defvar *sk-below-primsubs*)*sk-below-primsubs*50,1573
(defvar primehash1)primehash151,1602
(defvar primehash2)primehash252,1622
(defvar pairhash)pairhash53,1642
(defvar dphash)dphash54,1660
(defvar disj-assoc)disj-assoc55,1676
(defvar component-count)component-count56,1696
(defvar *global-sublist*)*global-sublist*57,1721
(defvar *global-constlist*)*global-constlist*58,1747
(defvar *using-unifhash*)*using-unifhash*59,1775
(defvar *full-unifhash*)*full-unifhash*60,1801
(defvar *ccs-substs*)*ccs-substs*61,1826
(defvar *ordered-vars*)*ordered-vars*62,1848
(defvar *banned-list*)*banned-list*63,1872
(defvar *veq-hash*)*veq-hash*64,1895
(defvar *selection-banned*)*selection-banned*65,1915
(defvar *length-list*)*length-list*66,1943
(defvar lengths)lengths67,1966
(defvar *allowed-subs-list*)*allowed-subs-list*68,1983
(defvar dup-priority)dup-priority69,2012
(defvar conn-hash)conn-hash70,2034
(defvar fragjform)fragjform71,2053
(defvar *positive-leaves*)*positive-leaves*72,2072
(defvar *negative-leaves*)*negative-leaves*73,2099
(defvar ccs-original)ccs-original74,2126
(defvar *single-lit-fragments*)*single-lit-fragments*75,2148
(defvar *single-hpath-fragments*)*single-hpath-fragments*76,2180
(defvar *complete-weights*)*complete-weights*77,2214
(defvar *prim-lookup*)*prim-lookup*78,2242
(defvar *primsubs*)*primsubs*79,2265
(defvar *skolem-matters*)*skolem-matters*80,2285
(defvar *allsub-hash*)*allsub-hash*81,2311
(defvar *allb*)*allb*82,2334
(defvar *live-leaves*)*live-leaves*83,2350
(defvar *dead-fragments*)*dead-fragments*84,2373
(defvar *successful-sub*)*successful-sub*85,2399
(defvar *rewrite-hash*)*rewrite-hash*86,2425
(defvar *ccs-rewrites*)*ccs-rewrites*87,2449
(defvar *daghash* *daghash*88,2473
(defvar *depth-hash* *depth-hash*89,2523
(defvar *global-rewrite-dtree*)*global-rewrite-dtree*90,2549
(defvar *rewrite-dtree-list*)*rewrite-dtree-list*91,2581
(defvar *rewrite-model*)*rewrite-model*92,2611
(defvar *global-rewrite-model*)*global-rewrite-model*93,2636
(defvar *local-rewrites*)*local-rewrites*94,2668
(defvar *global-rewrites*)*global-rewrites*95,2694
(defvar *active-rewrites*)*active-rewrites*96,2721
(defvar *all-rewrites*)*all-rewrites*97,2748
(defvar *model-flag*)*model-flag*98,2772
(defvar *parity-preserved*)*parity-preserved*99,2794
(defvar rcount rcount100,2822
(defvar *rrule-fo-list*)*rrule-fo-list*101,2840
(defvar rconsts)rconsts102,2865
(defvar unif-count)unif-count103,2882
(defvar *use-chain* *use-chain*104,2902
(defvar *rrule-sub-list*)*rrule-sub-list*105,2925
(defvar *comps-tried*)*comps-tried*106,2951
(defvar *dmark*)*dmark*107,2974
(defstruct (dnode dnode109,2992
(defstruct dtreedtree128,3857
(defstruct rtreertree134,4026
(defstruct qnode qnode142,4295
(defstruct componentcomponent147,4377
(defsubject ms98-1ms98-1165,4950
(defsubject ms98-minorms98-minor168,5026
(defvar given-clist given-clist171,5096
(defflag ms98-tracems98-trace173,5122
(defflag ms98-rewrite-modelms98-rewrite-model195,6110
(defflag ms98-minimality-checkms98-minimality-check202,6305
(defflag ms98-max-componentsms98-max-components209,6520
(defflag ms98-variable-orderms98-variable-order216,6741
(defflag ms98-low-memoryms98-low-memory242,7961
(defflag ms98-initms98-init249,8143
(defflag ms98-rewrite-prunems98-rewrite-prune266,9015
(defflag ms98-verbosems98-verbose273,9215
(defflag hpath-thresholdhpath-threshold279,9360
(defflag ms98-num-of-dupsms98-num-of-dups286,9586
(defflag ff-delayff-delay296,9961
(defflag ms98-base-primms98-base-prim305,10328
(defflag ms98-unif-hackms98-unif-hack313,10614
(defflag ms98-unif-hack2ms98-unif-hack2321,10885
(defflag ms98-measurems98-measure330,11212
(defflag ms98-valid-pairms98-valid-pair362,12759
(defflag ms98-rewritesms98-rewrites384,13685
(defflag ms98-rewrite-depthms98-rewrite-depth390,13836
(defflag ms98-rewrite-sizems98-rewrite-size397,14045
(defflag ms98-rewrite-unifms98-rewrite-unif405,14337
(defflag ms98-dup-primsubsms98-dup-primsubs413,14626
(defflag ms98-dup-below-primsubsms98-dup-below-primsubs422,14965
(defflag ms98-rew-primsubsms98-rew-primsubs437,15562
(defflag ms98-max-primsms98-max-prims452,16131
(defflag ms98-primsub-countms98-primsub-count458,16292
(defflag break-at-quantifiersbreak-at-quantifiers465,16486
(defflag maximize-firstmaximize-first474,16804
(defflag ms98-fragment-orderms98-fragment-order483,17149
(defflag ms98-first-fragmentms98-first-fragment497,17777
(defflag ms98-merge-dagsms98-merge-dags516,18512
(defflag ms98-force-h-oms98-force-h-o532,19121
(defflag ms98-use-colorsms98-use-colors540,19342
(defvar *ms98-trace-file* *ms98-trace-file*547,19454
(defvar *saved-first-order-mode-ms* *saved-first-order-mode-ms*552,19753
(defflag MEASUREMENTSMEASUREMENTS555,19823
(defvar ms98-full-jform ms98-full-jform567,20251
(defvar ms98-current-ftree ms98-current-ftree568,20280
(defvar ms98-setvars ms98-setvars569,20312
(defvar *ccs-constrained-solns* *ccs-constrained-solns*570,20338
(defvar *ccs-constrained-solns-prune* *ccs-constrained-solns-prune*571,20375

ms98-paths2.lisp,587
(deffile ms98-paths2ms98-paths214,607
(defmateop minimal-pminimal-p21,805
(defwffop minimal-pminimal-p25,878
(defun minimal-p minimal-p36,1281
(defun internal-minimal-fn internal-minimal-fn59,2105
(defun find-touches-2 find-touches-267,2437
(defun turn-into-literal-pair turn-into-literal-pair75,2706
(defun violates-minimality violates-minimality90,3266
(defun ccs-minimal-p ccs-minimal-p105,3887
(defun hack-to-ribbons hack-to-ribbons116,4578
(defun collapse-to-newtouch collapse-to-newtouch153,6282
(defun exists-untouched-vpath exists-untouched-vpath175,7091

ms98-paths.lisp,2119
(deffile ms98-pathsms98-paths14,607
(defun ccs-complete-p ccs-complete-p19,737
(defun complete-fn-1 complete-fn-141,2019
(defun frag-to-lit frag-to-lit43,2099
(defun unused-fragments-of unused-fragments-of48,2269
(defun touched-literals-of touched-literals-of57,2666
(defun trim-path trim-path62,2826
(defun trim-path-real trim-path-real66,2913
(defun get-leftpath get-leftpath72,3145
(defun ccs-find-next-openpath ccs-find-next-openpath80,3480
(defun ccs-complete-mspath ccs-complete-mspath89,3774
(defun ccs-find-cheapest-mspath ccs-find-cheapest-mspath97,4069
(defun ccs-find-alt-mspath ccs-find-alt-mspath120,4829
(defun ccs-complete-alt-mspath-and ccs-complete-alt-mspath-and143,5686
(defun ccs-open-mspath-p ccs-open-mspath-p151,6049
(defun make-litkey-by-name make-litkey-by-name160,6407
(defun make-litkey-by-name-real make-litkey-by-name-real164,6578
(defun litkey-fn-1 litkey-fn-1174,6942
(defun cleanup-ccs-fn-1 cleanup-ccs-fn-1176,6990
(defun ccs-etree-cleanup ccs-etree-cleanup179,7155
(defun ccs-etree-cleanup-real ccs-etree-cleanup-real186,7511
(defun ccs-etree-deletable ccs-etree-deletable199,8071
(defun ccs-etree-deletable-real ccs-etree-deletable-real203,8257
(defun disjunct-above disjunct-above215,8812
(defun edit-jform edit-jform226,9317
(defun edit-jform-real edit-jform-real232,9477
(defun lits-contained lits-contained263,11009
(defun make-frag-jform make-frag-jform266,11101
(defun get-shortest-open-fragments get-shortest-open-fragments287,12101
(defun g-s-o-f g-s-o-f292,12318
(defun gsof-helper-fn-1 gsof-helper-fn-1297,12476
(defun getshortopenfrag getshortopenfrag299,12523
(defun get-left-fragpath get-left-fragpath342,14200
(defun store-openfrag-list store-openfrag-list351,14434
(defun lookup-openfrag-list lookup-openfrag-list356,14579
(defun proper-tlist-check proper-tlist-check362,14751
(defun get-shortest-list get-shortest-list370,14961
(defun ccs-list-length ccs-list-length378,15223
(defun flatten-fake-jform flatten-fake-jform382,15356
(defun flatten-fake-jform-2 flatten-fake-jform-2385,15444

ms98-rewrite2.lisp,796
(deffile ms98-rewrite2ms98-rewrite214,607
(defun represents-a-rewrite represents-a-rewrite19,744
(defun now-do-rewriting now-do-rewriting47,2121
(defun delay-rewriting delay-rewriting82,3841
(defun rewrite-by-args rewrite-by-args88,4029
(defun process-path process-path140,6554
(defun get-local-leaves get-local-leaves147,6822
(defun follow-branch-to-top follow-branch-to-top154,7116
(defun follow-branch-to-disjunct follow-branch-to-disjunct159,7257
(defun compatible-sublists-2 compatible-sublists-2166,7479
(defun set-global-rewrite-dtree set-global-rewrite-dtree172,7687
(defun store-global-rewrite-dtree store-global-rewrite-dtree180,8030
(defun not-remotely-plausible-arg not-remotely-plausible-arg193,8538
(defun verify-by-model-arg verify-by-model-arg207,9223

ms98-rewrite.lisp,3973
(deffile ms98-rewritems98-rewrite14,607
(defun get-ccs-rewrites get-ccs-rewrites19,738
(defun prune-rewrites-2 prune-rewrites-2146,8381
(defun prune-out-rewrites-from prune-out-rewrites-from167,9377
(defun unify-var-rew unify-var-rew186,10137
(defun ccs-rew-match-ff ccs-rew-match-ff211,10975
(defun symdiff symdiff222,11526
(defun disjunctive-above disjunctive-above225,11588
(defun generate-two-rewrite-trees generate-two-rewrite-trees233,11786
(defun get-leaves-of-rtree get-leaves-of-rtree265,13373
(defun extend-rtree-2 extend-rtree-2274,13639
(defun contains-banned-const contains-banned-const305,15090
(defun subforall subforall312,15357
(defun get-all-one-step-rewrites get-all-one-step-rewrites315,15472
(defun rtree-print rtree-print353,17453
(defun ccs-rrule-instance-real ccs-rrule-instance-real359,17770
(defun ccs-replace-rrule-poly ccs-replace-rrule-poly378,18598
(defun sort-of-simpl sort-of-simpl382,18746
(defun fast-wffeq fast-wffeq386,18856
(defun wff-to-list wff-to-list398,19226
(defun measure-size measure-size403,19349
(defun flatten-rtree flatten-rtree408,19462
(defun flatten-rtree2 flatten-rtree2415,19743
(defun find-leaves-not-below-rewrites find-leaves-not-below-rewrites422,19928
(defun not-below-rewrite not-below-rewrite428,20173
(defun expand-by-rewriting expand-by-rewriting436,20352
(defun get-gwff-chain-from get-gwff-chain-from454,21025
(defun really-represents really-represents470,21550
(defun expand-tree-using expand-tree-using476,21762
(defun create-new-sub-rew create-new-sub-rew537,25024
(defun get-real-sub get-real-sub544,25376
(defun find-exp-node-above-rew find-exp-node-above-rew554,25799
(defun follow-branch-upwards follow-branch-upwards558,25976
(defun fiddle-with-jform fiddle-with-jform565,26215
(defun insert-rews-in-dtree insert-rews-in-dtree571,26436
(defun insert-in-dtree-real insert-in-dtree-real574,26612
(defun get-rews-from-dtree get-rews-from-dtree586,27350
(defun exists-in-tree exists-in-tree594,27695
(defun exists-in-tree-real exists-in-tree-real597,27777
(defun get-and-test-model get-and-test-model603,27996
(defun ident ident615,28531
(defun verify-by-model verify-by-model617,28552
(defun replace-with-interps replace-with-interps625,28761
(defun same-interpretation same-interpretation638,29257
(defun equivalent-interp equivalent-interp645,29475
(defun interpret-pred interpret-pred648,29591
(defun interpret interpret657,29837
(defun args args668,30169
(defun ccs-instance-of-rewriting ccs-instance-of-rewriting676,30302
(defun ccs-apply-rrule-once ccs-apply-rrule-once689,30840
(defun do-parity-check do-parity-check718,32206
(defun do-parity-check-real do-parity-check-real722,32384
(defun parity-check parity-check738,33136
(defun parity-check-fails parity-check-fails761,34093
(defun reciprocal reciprocal768,34416
(defun plus1 plus1772,34477
(defun squarex squarex775,34506
(defun get-and-test-model-auto get-and-test-model-auto778,34537
(defun get-and-test-model-2 get-and-test-model-2805,35900
(defun make-predicates make-predicates827,37018
(defun find-interpretation-for-rrules find-interpretation-for-rrules832,37137
(defun choose-consts choose-consts847,37921
(defun assign-consts-all-possible-ways assign-consts-all-possible-ways867,38861
(defun verify-this-interpretation verify-this-interpretation874,39161
(defun find-consts-in-rrules find-consts-in-rrules878,39308
(defun first-order-ify first-order-ify885,39583
(defun collapse-fo-list collapse-fo-list911,40860
(defun plug-ho-vars plug-ho-vars917,41080
(defun not-higher-order-var-p not-higher-order-var-p934,41859
(defun covers-two covers-two938,41969
(defun new-rrule-name new-rrule-name944,42221
(defun not-remotely-plausible not-remotely-plausible948,42352
(defun exists-top-level-rewrite exists-top-level-rewrite965,43159
(defun exists-neg-rewrite exists-neg-rewrite984,43875

ms98-top.lisp,5530
(deffile ms98-topms98-top14,607
(defmateop ms98-1ms98-119,705
(defun ccs-invoke ccs-invoke25,859
(defun init-everything init-everything29,943
(defun ccs ccs46,2185
(defun ccs-real ccs-real333,15764
(defun ccs2 ccs2566,27258
(defun arrange-components arrange-components682,33830
(defun ccs-larger ccs-larger688,34194
(defun already-tried already-tried1040,52343
(defun acceptable-disjunct acceptable-disjunct1043,52444
(defun initial-segment-p initial-segment-p1049,52667
(defun compatible-pairs compatible-pairs1055,52845
(defun fewest-extensions fewest-extensions1086,54226
(defun make-litkey make-litkey1106,55007
(defun *-or-nil *-or-nil1110,55131
(defun get-ccs-key get-ccs-key1113,55182
(defun parse-clist parse-clist1120,55342
(defun remove-leaf remove-leaf1123,55418
(defun make-pairs make-pairs1128,55602
(defun find-touches find-touches1135,55764
(defun construct-component construct-component1142,55970
(defun colored-connection colored-connection1195,58376
(defun colored-mating colored-mating1204,58701
(defun subclist subclist1210,58924
(defun equal-conn equal-conn1216,59092
(defun literal-name-or-symbol literal-name-or-symbol1226,59507
(defun make-primes make-primes1233,59661
(defun prime-p prime-p1240,59829
(defun go-below-disjunct go-below-disjunct1244,59921
(defun finish-up-ccs finish-up-ccs1254,60329
(defun add-hidden-subs add-hidden-subs1330,63523
(defun find-real-root find-real-root1336,63902
(defun pull-up-leaves pull-up-leaves1343,64359
(defun pull-up-leaves-rec pull-up-leaves-rec1349,64589
(defun parse-into-types parse-into-types1360,64882
(defun parse-fully parse-fully1363,64978
(defun find-outer-etree-nodes find-outer-etree-nodes1375,65598
(defun get-sub-for-dup get-sub-for-dup1383,65900
(defun compose-ccs-subs compose-ccs-subs1389,66147
(defun sub-for-component sub-for-component1398,66488
(defun apply-ccs-real-sub apply-ccs-real-sub1433,68075
(defun apply-ccs-real-sub-2 apply-ccs-real-sub-21441,68424
(defun check-pair check-pair1453,68992
(defun violates-max-mates violates-max-mates1468,69586
(defun violates-max-mates-1 violates-max-mates-11477,69920
(defun really-selected really-selected1487,70408
(defun fiddle-comp2list fiddle-comp2list1492,70612
(defun mapcan-func-1 mapcan-func-11497,70788
(defun mapcan-func-2 mapcan-func-21498,70841
(defun mapcan-func-3 mapcan-func-31499,70894
(defun mapcan-func-4 mapcan-func-41500,70947
(defun fiddle-func-1 fiddle-func-11502,71001
(defun fiddle-func-2 fiddle-func-21512,71446
(defun fiddle-func-3 fiddle-func-31516,71578
(defun fiddle-func-4 fiddle-func-41525,71926
(defun helper-function-1 helper-function-11530,72101
(defun helper-function-2 helper-function-21531,72176
(defun helper-function-3 helper-function-31532,72235
(defun helper-function-4 helper-function-41533,72301
(defun helper-function-5 helper-function-51534,72373
(defun helper-function-6 helper-function-61535,72415
(defun helper-function-7 helper-function-71536,72504
(defun helper-function-8 helper-function-81537,72550
(defun helper-function-9 helper-function-91538,72631
(defun helper-function-10 helper-function-101539,72684
(defun helper-function-12 helper-function-121540,72728
(defun helper-function-13 helper-function-131542,72861
(defun helper-function-14 helper-function-141543,72932
(defun helper-function-15 helper-function-151545,73074
(defun helper-function-16 helper-function-161546,73136
(defun helper-function-17 helper-function-171548,73249
(defun helper-function-18 helper-function-181549,73320
(defun helper-function-19 helper-function-191551,73430
(defun helper-function-20 helper-function-201552,73500
(defun helper-function-21 helper-function-211556,73682
(defun helper-function-22 helper-function-221557,73736
(defun helper-function-23 helper-function-231558,73798
(defun helper-function-24 helper-function-241559,73890
(defun helper-function-25 helper-function-251560,73964
(defun helper-function-26 helper-function-261561,74018
(defun helper-function-27 helper-function-271562,74100
(defun helper-function-28 helper-function-281563,74200
(defun helper-function-29 helper-function-291564,74267
(defun helper-function-30 helper-function-301565,74358
(defun helper-function-31 helper-function-311566,74420
(defun comp2list-pruner-1 comp2list-pruner-11568,74477
(defun comp2list-pruner-2 comp2list-pruner-21570,74612
(defun ms98-print-primsubs ms98-print-primsubs1572,74684
(defun print-component-info print-component-info1587,75279
(defun component-good-name component-good-name1601,75964
(defun update-measurement update-measurement1606,76115
(defun ccs-solve-remaining-constraints ccs-solve-remaining-constraints1613,76339
(defun ccs-solve-remaining-constraints-1 ccs-solve-remaining-constraints-11633,77219
(defun constrained-soln-measure constrained-soln-measure1646,77791
(defun constraint-reduce-measure constraint-reduce-measure1653,78095
(defun get-component-sub get-component-sub1656,78144
(defun ccs-solve-final-constraints ccs-solve-final-constraints1665,78381
(defun new-ccs-constrained-solns new-ccs-constrained-solns1682,78913
(defun new-ccs-constrained-soln new-ccs-constrained-soln1686,79009
(defun constraint-identifier constraint-identifier1700,79547
(defun ccs-next-constrained-soln-init ccs-next-constrained-soln-init1722,80332
(defun ccs-next-solved-constrained-soln-init ccs-next-solved-constrained-soln-init1738,81030

ms98-unif.lisp,6083
(deffile ms98-unifms98-unif14,607
(defun make-new-dpair make-new-dpair19,713
(defun fo-make-dpair fo-make-dpair24,892
(defun qum qum35,1443
(defun qum-real qum-real42,1659
(defun qum-real-fn-1 qum-real-fn-169,3125
(defun qum-real-fn-2 qum-real-fn-270,3178
(defun qum-rewrites qum-rewrites72,3222
(defun lnorm-q lnorm-q76,3371
(defun process-further process-further79,3457
(defun process-further-fo process-further-fo86,3758
(defun get-resulttype get-resulttype93,4096
(defun choose-dpair choose-dpair96,4191
(defun ccs-match-i ccs-match-i109,4723
(defun ccs-match-p ccs-match-p116,5017
(defun ccs-get-binder ccs-get-binder122,5244
(defun make-new-dpairs make-new-dpairs127,5362
(defun ho-unif-lnorm2 ho-unif-lnorm2132,5540
(defun ho-unif-lnorm2-rec ho-unif-lnorm2-rec137,5723
(defun find-consts find-consts193,8478
(defun find-symbols find-symbols200,8849
(defun make-generic-var make-generic-var207,9298
(defun symbols-of-lits symbols-of-lits211,9426
(defun symbols-of symbols-of215,9569
(defun symbols symbols217,9637
(defun valid-proj-h-var valid-proj-h-var230,10217
(defun ho-free-in-3 ho-free-in-3239,10698
(defun ho-h-var-check ho-h-var-check245,10887
(defun ccs-pfd-fo-unify-real ccs-pfd-fo-unify-real252,11101
(defun ccs-pfd-fo-unify-rec-real ccs-pfd-fo-unify-rec-real261,11420
(defun ccs-initialize-conn ccs-initialize-conn303,12947
(defun ccs-place-neg ccs-place-neg319,13900
(defun extract-switchable extract-switchable339,14851
(defun full-normalize-subs full-normalize-subs370,16522
(defun full-normalize-fo full-normalize-fo380,16786
(defun strip-cdar-fn strip-cdar-fn389,17038
(defun expand-subst-fo-2 expand-subst-fo-2391,17095
(defun get-all-ccs-vars get-all-ccs-vars403,17463
(defun ccs-vars-fn-1 ccs-vars-fn-1417,17977
(defun ccs-vars-fn-2 ccs-vars-fn-2418,18038
(defun satisfies-msv satisfies-msv420,18162
(defun prune-lambda-fn prune-lambda-fn427,18441
(defun uavp-fn-1 uavp-fn-1428,18488
(defun unify-all-var-pairs unify-all-var-pairs430,18575
(defun get-subs-involving get-subs-involving447,19514
(defun squash-o-subterms squash-o-subterms452,19678
(defun squash-o-terms squash-o-terms459,19998
(defun contains-truth contains-truth474,20612
(defun no-vars-in no-vars-in479,20796
(defun etanorm-cdr-fn etanorm-cdr-fn484,21017
(defun uavp-fn-2 uavp-fn-2485,21069
(defun uavp-fn-3 uavp-fn-3486,21116
(defun uavp uavp488,21164
(defun unify-var-pair-real unify-var-pair-real561,24882
(defun projectible-type-check projectible-type-check586,25782
(defun plug-h-var-if-possible plug-h-var-if-possible591,25933
(defun ccs-uavp-match-ff ccs-uavp-match-ff603,26389
(defun ho-etanorm ho-etanorm620,27268
(defun ho-eta-applic-p ho-eta-applic-p633,27768
(defun rename-h-vars-in rename-h-vars-in638,27886
(defun ccs-uavp-match ccs-uavp-match645,28131
(defun create-successors-uavp create-successors-uavp671,29079
(defun projection-of-a-w projection-of-a-w682,29456
(defun ho-simpl-uavp ho-simpl-uavp690,29741
(defun ho-leibniz-vcheck2 ho-leibniz-vcheck2714,30669
(defun ho-leibniz-vcheck ho-leibniz-vcheck720,30832
(defun create-successor-quick create-successor-quick738,31509
(defun create-successor-full create-successor-full742,31651
(defun order-wrt-vars order-wrt-vars746,31806
(defun order-var-fn-1 order-var-fn-1749,31868
(defun simpl-full simpl-full751,31953
(defun stepa-simpl-full stepa-simpl-full781,33158
(defun extract-switchable-full extract-switchable-full799,33835
(defun extract-full-fn-1 extract-full-fn-1830,35541
(defun merge-utrees merge-utrees832,35600
(defun merge-subs merge-subs872,37582
(defun merge-subs-dummy merge-subs-dummy882,38013
(defun get-fail-subs get-fail-subs887,38166
(defun cannot-accept cannot-accept894,38361
(defun merge-ccs-lists2 merge-ccs-lists2901,38600
(defun get-fails-from get-fails-from905,38728
(defun merge-ccs-lists merge-ccs-lists911,38992
(defun ccs-subsumed ccs-subsumed921,39379
(defun find-same-sub-in find-same-sub-in931,39864
(defun get-final-fn-1 get-final-fn-1937,40034
(defun get-final-subs-for get-final-subs-for939,40099
(defun get-final-subs-make-comp get-final-subs-make-comp990,42667
(defun same-sub same-sub1024,44379
(defun qum-delay qum-delay1030,44507
(defun qum-delay-real qum-delay-real1037,44716
(defun get-good-dpair get-good-dpair1050,45308
(defun get-correct-subs get-correct-subs1087,47047
(defun has-free-vars has-free-vars1106,48014
(defun ccs-match-full-unif ccs-match-full-unif1113,48173
(defun check-helper-fn-1 check-helper-fn-11131,49118
(defun check-for-primsubs check-for-primsubs1133,49185
(defun check-for-primsubs-2 check-for-primsubs-21143,49730
(defun unify-unifhash unify-unifhash1146,49848
(defun unify-unifhash-delay unify-unifhash-delay1170,50986
(defun get-flags-for get-flags-for1190,51881
(defun get-flags-fn-1 get-flags-fn-11199,52210
(defun find-fhead2 find-fhead21201,52263
(defun prune-unifs prune-unifs1208,52453
(defun unify-unifhash-rew unify-unifhash-rew1218,52827
(defun ccs-match-rew ccs-match-rew1238,53941
(defun get-vars-for get-vars-for1251,54474
(defun create-successor-rew create-successor-rew1261,54814
(defun lnorm-q2 lnorm-q21264,54937
(defun prune-numbers-from prune-numbers-from1267,55012
(defun unreachable-skolem-constants unreachable-skolem-constants1273,55294
(defun fill-usc-fn-1 fill-usc-fn-11277,55427
(defun fill-usc-fn-2 fill-usc-fn-21278,55487
(defun fill-usc-list fill-usc-list1280,55547
(defun consider-global-consts consider-global-consts1291,56035
(defun path-up-from path-up-from1296,56338
(defun match-modulo-neg match-modulo-neg1302,56544
(defun match-mod-neg-real match-mod-neg-real1312,56891
(defun get-final-subs-delay-comp get-final-subs-delay-comp1321,57235
(defun fill-in-delayed-subs fill-in-delayed-subs1383,60333
(defun fill-in-delayed-subs-2 fill-in-delayed-subs-21390,60577
(defun quick-check-subs quick-check-subs1398,60830
(defun quick-check-subs-2 quick-check-subs-21406,61091

ms98-weights.lisp,2147
(deffile ms98-weightsms98-weights14,607
(defun e-intersection-banme e-intersection-banme19,744
(defun insert-reverse-sorted insert-reverse-sorted23,849
(defun reverse-ordered-intersection reverse-ordered-intersection29,1058
(defun reverse-ordered-memq reverse-ordered-memq37,1406
(defun reverse-ordered-union reverse-ordered-union42,1568
(defun e-ordered-setdiff e-ordered-setdiff51,1941
(defun ordered-setdiff ordered-setdiff58,2188
(defun e-ordered-intersection e-ordered-intersection66,2485
(defun ordered-intersection ordered-intersection73,2777
(defun ordered-union ordered-union81,3099
(defun insert-sorted insert-sorted90,3440
(defun ccs-measure ccs-measure96,3633
(defun precompute-weight precompute-weight121,4470
(defun precompute-15 precompute-15140,5244
(defun ccs-measure-15 ccs-measure-15144,5339
(defun ccs-measure-1 ccs-measure-1148,5436
(defun precompute-1 precompute-1158,5922
(defun ccs-measure-2 ccs-measure-2165,6129
(defun ccs-measure-3 ccs-measure-3178,6678
(defun ccs-measure-4 ccs-measure-4181,6743
(defun ccs-measure-5 ccs-measure-5199,7509
(defun precompute-5 precompute-5215,8103
(defun ccs-measure-6 ccs-measure-6224,8383
(defun precompute-6 precompute-6228,8580
(defun ccs-measure-7 ccs-measure-7232,8691
(defun precompute-7 precompute-7241,9058
(defun ccs-measure-8 ccs-measure-8251,9388
(defun precompute-8 precompute-8256,9668
(defun ccs-measure-9 ccs-measure-9261,9761
(defun precompute-9 precompute-9266,10018
(defun ccs-measure-13 ccs-measure-13272,10262
(defun ccs-length-measure ccs-length-measure278,10523
(defun last-non-dup last-non-dup281,10592
(defun ccs-length-measure-2 ccs-length-measure-2286,10690
(defun ccs-length-measure-a ccs-length-measure-a312,11761
(defun ccs-length-measure-b ccs-length-measure-b324,12177
(defun ccs-length-measure-c ccs-length-measure-c340,12891
(defun ccs-length-measure-d ccs-length-measure-d359,13798
(defun ordered-memq ordered-memq370,14190
(defun ordered-union-ck ordered-union-ck375,14336
(defun ordered-union-2 ordered-union-2379,14513
(defun make-subcount make-subcount390,14994

ms-real.lisp,49
(defun ms ms3,20
(defun ms-real ms-real8,218

mtree-datastructure.lisp,398
(deffile mtree-datastructuremtree-datastructure12,589
(defvar obligation-name obligation-name17,722
(defvar current-obligation current-obligation18,751
(defvar current-jform current-jform19,783
(defflag matingstree-namematingstree-name21,811
(defstruct (obligation obligation27,978
(defstruct (matingstree matingstree40,1427
(defvar already-added-clists already-added-clists51,1804

mtree-duplication.lisp,1888
(deffile mtree-duplicationmtree-duplication13,590
(defun mt-substituted-for mt-substituted-for18,723
(defun duplicate-var-and-deepen-it duplicate-var-and-deepen-it25,913
(defun dup-if-needed dup-if-needed54,2180
(defun name-mapping name-mapping62,2436
(defun disj-over-univ-jform disj-over-univ-jform75,3100
(defun univ-ancestor-jform univ-ancestor-jform88,3774
(defun univ-ancestor-etree univ-ancestor-etree97,4103
(defun univ-used-times univ-used-times106,4475
(defun update-current-etree-1 update-current-etree-1116,4853
(defun update-current-etree-2 update-current-etree-2130,5611
(defun find-jform-symbol find-jform-symbol161,7372
(defun update-used-univs update-used-univs177,8033
(defun pick-lit pick-lit190,8710
(defun add-conn-ob add-conn-ob211,9895
(defflag mt-subsumption-checkmt-subsumption-check318,15233
(definfo same-connssame-conns339,16263
(definfo subset-connssubset-conns346,16544
(definfo same-tagsame-tag353,16899
(defflag tag-conn-fntag-conn-fn361,17312
(definfo tag-conn-quicktag-conn-quick375,17895
(definfo tag-conn-leafnotag-conn-leafno380,18103
(defflag tag-mating-fntag-mating-fn385,18276
(definfo multiply-tag-listmultiply-tag-list397,18707
(defun mtree-subsumption-check mtree-subsumption-check402,18867
(defun mtree-subsumption-check-real mtree-subsumption-check-real413,19391
(defun mtree-subsumption-check-tag mtree-subsumption-check-tag421,19860
(defun mtree-subsumption-check-subset mtree-subsumption-check-subset428,20091
(defun mtree-tag-clist mtree-tag-clist435,20338
(defun multiply-tag-list multiply-tag-list446,20871
(defun tag-conn-quick tag-conn-quick449,20914
(defun tag-conn-leafno tag-conn-leafno453,20988
(defun chain chain467,21647
(defun whichone whichone483,22398
(defun expand-obtree expand-obtree490,22702
(defun copy-obligation-true copy-obligation-true508,23478

mtree-menus.lisp,1677
(deffile mtree-menusmtree-menus18,698
(defmenuitem MATING-TREEMATING-TREE25,827
(defmenu MTREEMTREE32,950
(defmenuitem GO234GO23438,1042
(defmenuitem ADD-ALL-LITADD-ALL-LIT45,1148
(defmenuitem ADD-ALL-OBADD-ALL-OB52,1278
(defmenuitem EXPAND-LEAVESEXPAND-LEAVES59,1405
(defmenuitem MT94-11MT94-1166,1541
(defmenuitem MT94-12MT94-1273,1659
(defmenuitem MT95-1MT95-180,1777
(defmenuitem QRYQRY87,1892
(defmenuitem LEAVE5LEAVE594,1998
(defmenu MTREE-OPSMTREE-OPS101,2113
(defmenuitem ADD-CONN2ADD-CONN2107,2213
(defmenuitem CHOOSE-BRANCHCHOOSE-BRANCH114,2339
(defmenuitem COMPLETE-P2COMPLETE-P2121,2479
(defmenuitem D23D23128,2611
(defmenuitem GOTO2GOTO2135,2717
(defmenuitem INITINIT142,2831
(defmenuitem KILLKILL149,2944
(defmenuitem PICKPICK156,3057
(defmenuitem PRUNEPRUNE163,3170
(defmenuitem REM-NODEREM-NODE170,3287
(defmenuitem RESURRECTRESURRECT177,3413
(defmenuitem SHOW-MATING2SHOW-MATING2184,3542
(defmenuitem SHOW-SUBSTS2SHOW-SUBSTS2191,3678
(defmenuitem SIBSIB198,3814
(defmenuitem UNIFY2UNIFY2205,3925
(defmenuitem UP2UP2212,4043
(defmenu MTREE-PRINTMTREE-PRINT219,4152
(defmenuitem CONNS-ADDEDCONNS-ADDED225,4256
(defmenuitem LIVE-LEAVESLIVE-LEAVES232,4392
(defmenuitem PM-NODEPM-NODE239,4528
(defmenuitem PMTRPMTR246,4652
(defmenuitem PMTR*PMTR*253,4767
(defmenuitem PMTR-FLATPMTR-FLAT260,4885
(defmenuitem POBPOB267,5015
(defmenuitem POB-LITSPOB-LITS274,5127
(defmenuitem POB-NODEPOB-NODE281,5254
(defmenuitem POTRPOTR288,5382
(defmenuitem POTR*-FLATPOTR*-FLAT295,5498
(defmenuitem POTR-FLATPOTR-FLAT302,5632
(defmenuitem PPATHPPATH309,5763
(defmenuitem PPATH*PPATH*316,5882

mtree-obligation.lisp,442
(deffile mtree-obligationmtree-obligation12,589
(defmacro obligation-type obligation-type17,708
(defun ob-go-up ob-go-up20,797
(defun ob-go-down ob-go-down24,922
(defun jform-check jform-check31,1216
(defun literal-check literal-check40,1567
(defun disj-block disj-block49,1894
(defun auto-expand auto-expand63,2577
(defun init-used-univs init-used-univs71,2933
(defun setf-obligation-closed setf-obligation-closed80,3299

mtree-print.lisp,4155
(deffile mtree-printmtree-print12,589
(defmtreeop pmtr-flatpmtr-flat19,725
(defwffop print-matingstree print-matingstree26,959
(defun print-matingstree print-matingstree33,1179
(defun print-matingstree-main print-matingstree-main40,1441
(defflag default-obdefault-ob51,1822
(definfo deepestdeepest61,2268
(definfo highesthighest66,2417
(definfo d-smallestd-smallest76,2767
(definfo d-highestd-highest83,3063
(defmtreeop pmtr*pmtr*93,3445
(defwffop tr-print-matingstree-obtr-print-matingstree-ob109,4168
(defun tr-print-matingstree-ob tr-print-matingstree-ob125,4883
(defmtreeop pmtrpmtr132,5172
(defwffop tr-print-matingstree tr-print-matingstree144,5691
(defun tr-print-matingstree tr-print-matingstree156,6203
(defun tr-print-matingstree-main tr-print-matingstree-main163,6487
(defun rec-print rec-print188,7971
(defun closeness-filter closeness-filter216,9310
(defun p-mst-elt p-mst-elt227,9933
(defun p-mst-obs p-mst-obs231,10086
(defun rec-sons rec-sons248,10863
(defmtreeop pm-nodepm-node253,11123
(defwffop print-matingstree-node print-matingstree-node260,11344
(defun print-matingstree-node print-matingstree-node267,11571
(defun pm-node-main pm-node-main274,11820
(defmtreeop pob-litspob-lits285,12287
(defwffop print-obligation-literalprint-obligation-literal292,12538
(defmtreeop potr-flatpotr-flat298,12766
(defmtreeop potr*-flatpotr*-flat306,13041
(defwffop print-obligationprint-obligation314,13314
(defwffop pprint-obligationpprint-obligation320,13549
(defmacro display-vp-diag-brief display-vp-diag-brief327,13813
(defun print-obligation-literal-real print-obligation-literal-real331,13918
(defun print-obligation-literal print-obligation-literal347,14643
(defun print-obligation-main-real print-obligation-main-real353,14823
(defun print-obligation print-obligation364,15386
(defun pprint-obligation pprint-obligation370,15556
(defun obt-show-leaves obt-show-leaves376,15725
(defmtreeop ppathppath382,15913
(defwffop print-obligation-pathprint-obligation-path391,16214
(defun print-obligation-path print-obligation-path400,16523
(defun print-obligation-path-real print-obligation-path-real408,16811
(defmtreeop ppath*ppath*413,16975
(defwffop pprint-obligation-pathpprint-obligation-path423,17324
(defun pprint-obligation-path pprint-obligation-path433,17678
(defun pprint-obligation-path-real pprint-obligation-path-real441,17965
(defmtreeop pobpob447,18188
(defwffop print-obligation-jformprint-obligation-jform456,18500
(defun print-obligation-jform print-obligation-jform465,18822
(defun print-obligation-jform-unreal print-obligation-jform-unreal473,19111
(defun print-obligation-jform-real print-obligation-jform-real477,19222
(defmtreeop pob-nodepob-node481,19400
(defwffop print-obtree-node print-obtree-node490,19687
(defun print-obtree-node print-obtree-node499,19980
(defun pob-node-main pob-node-main507,20244
(defmtreeop potrpotr520,20818
(defwffop tr-pobtreetr-pobtree533,21313
(defun tr-pobtree tr-pobtree546,21816
(defun tr-pobtree-main tr-pobtree-main552,21981
(defun rec-o-print rec-o-print567,22872
(defun p-obs-elt p-obs-elt591,23844
(defun plb plb596,24015
(defun pldb pldb599,24087
(defun prb prb603,24173
(defun prdb prdb606,24245
(defun rec-next rec-next609,24310
(defun get-open-obs get-open-obs614,24569
(defun rec-find-open rec-find-open623,24932
(defun get-open-leaf-obs get-open-leaf-obs629,25152
(defun get-open-obs-2 get-open-obs-2632,25300
(defun rec-find-open-2 rec-find-open-2641,25649
(defun get-default-ob get-default-ob648,25854
(defun find-smallest find-smallest655,26374
(defun ob-size ob-size666,26835
(defun find-highest find-highest669,26918
(defun ob-height ob-height677,27130
(defmtreeop live-leaveslive-leaves682,27288
(defwffop print-live-leavesprint-live-leaves690,27530
(defun print-live-leaves print-live-leaves698,27773
(defun get-live-leaves-main get-live-leaves-main709,28247
(defmtreeop conns-addedconns-added717,28562
(defwffop mst-conns-addedmst-conns-added725,28819
(defun mst-conns-added mst-conns-added733,29079

mtree-query.lisp,2765
(deffile mtree-querymtree-query12,589
(defflag mt94-12-triggermt94-12-trigger19,732
(defflag mtree-stop-immediatelymtree-stop-immediately31,1268
(defflag mtree-filter-dupsmtree-filter-dups40,1581
(defun cycle-lits-in-ob cycle-lits-in-ob48,1849
(defun cycle-adding-lits cycle-adding-lits63,2547
(defun cycle-expanding-nodes cycle-expanding-nodes74,3105
(defun cycle-expanding-nodes-lb cycle-expanding-nodes-lb86,3665
(defun eligible-conjunction-list eligible-conjunction-list98,4234
(defun ob-jform-to-literal-list ob-jform-to-literal-list107,4608
(defun ineligible-disjunction-list ineligible-disjunction-list119,5131
(defun break-down-conjunction-list break-down-conjunction-list135,5825
(defun break-down-conjunction-list-real break-down-conjunction-list-real138,5961
(defun jform-to-literal-list jform-to-literal-list147,6404
(defun query-ob query-ob162,7042
(defun query-ob-quiet query-ob-quiet181,8109
(defun mb-mated-to mb-mated-to199,9076
(defun mb-stupid-mates mb-stupid-mates210,9588
(defmtreeop qryqry231,10536
(defwffop query-obquery-ob236,10675
(defmtreeop add-all-litadd-all-lit260,11934
(defmtreeop add-all-obadd-all-ob266,12090
(defwffop add-all-litadd-all-lit273,12292
(defwffop add-all-obadd-all-ob297,13568
(defun add-all-lit add-all-lit305,13778
(defun add-all-ob add-all-ob323,14461
(defun add-all-ob-real add-all-ob-real332,14720
(defun all-dead all-dead361,16233
(defun find-all-leaves-in-jform find-all-leaves-in-jform365,16356
(defmtreeop expand-leavesexpand-leaves378,16879
(defwffop expand-mst-leavesexpand-mst-leaves386,17179
(defun expand-mst-leaves expand-mst-leaves395,17479
(defmtreeop MT94-11MT94-11408,17941
(defwffop mst-basic-searchmst-basic-search417,18284
(defun mst-basic-search mst-basic-search426,18632
(defun mst-basic-search-real mst-basic-search-real436,18859
(defmtreeop mt94-12mt94-12447,19406
(defwffop mst-lb-searchmst-lb-search457,19784
(defun mst-lb-search mst-lb-search467,20167
(defun mst-lb-search-real mst-lb-search-real477,20388
(defun expand-mst-lb-leaves expand-mst-lb-leaves489,21044
(defun add-all-ob-lb add-all-ob-lb500,21499
(defun add-all-ob-lb-real add-all-ob-lb-real516,22058
(defmtreeop mt95-1mt95-1544,23087
(defwffop mst-fewest-ob-searchmst-fewest-ob-search557,23598
(defun mst-fewest-ob-search mst-fewest-ob-search569,24114
(defun mst-fewest-ob-search-real mst-fewest-ob-search-real579,24349
(defun expand-mst-fewest-ob-leaves expand-mst-fewest-ob-leaves591,25026
(defun leaf-with-fewest-obs leaf-with-fewest-obs604,25656
(defun find-leaf-height find-leaf-height614,26315
(defun open-obs-in-leaf open-obs-in-leaf618,26437
(defmtreeop gogo625,26749
(defun go-default-ms go-default-ms629,26860

mtree-top.lisp,4467
(deffile mtree-topmtree-top17,686
(deftoplevel mtree-topmtree-top24,807
(defcategory mtreeopmtreeop39,1206
(defvar mtree-level mtree-level61,1825
(defvar mtree-command-ctree mtree-command-ctree63,1849
(defun initialize-mtree-ctree initialize-mtree-ctree65,1883
(defun mtree-top-prompt mtree-top-prompt68,1960
(defun mtree-print-* mtree-print-*74,2172
(defvar current-mating current-mating76,2230
(defvar current-matingstree current-matingstree78,2259
(defvar last-etree last-etree80,2293
(defvar *matingstree-temp* *matingstree-temp*82,2318
(defun mtree-command-interpreter mtree-command-interpreter84,2351
(defun merge-args merge-args110,3472
(defun mtree-op-interpreter mtree-op-interpreter115,3621
(defun mtree-integerp-interpreter mtree-integerp-interpreter142,4928
(defun mtreeopdecode mtreeopdecode146,5037
(defmexpr mtree mtree177,6251
(defun mtreetop mtreetop192,6755
(defvar *initial-lits* *initial-lits*203,7090
(defvar *mtree-options* *mtree-options*205,7119
(defun mtree-mating mtree-mating207,7149
(defmtreeop leaveleave223,7941
(defun  exit-mtree-prior exit-mtree-prior227,8031
(defun  exit-mtree exit-mtree243,8759
(defun matingstree-q matingstree-q268,9853
(defun copy-utree copy-utree271,9904
(defun hxcopy-mating hxcopy-mating281,10295
(defflag mt-dups-per-quantmt-dups-per-quant290,10573
(defun extend-leaf extend-leaf299,10959
(defun label-obtree label-obtree310,11450
(defun get-all-obs get-all-obs319,11820
(defun rec-find-all rec-find-all326,12100
(defmtreeop initinit334,12290
(defun init-matingstree init-matingstree342,12592
(defmtreeop add-connadd-conn370,13865
(defwffop add-conn-obadd-conn-ob377,14086
(defmtreeop rem-noderem-node407,15862
(defun mst-rem-conn mst-rem-conn416,16218
(defmtreeop pruneprune429,16841
(defun mst-prune mst-prune436,17013
(defmtreeop choose-branchchoose-branch441,17250
(defun mst-choose-branch mst-choose-branch450,17636
(defun useless-expansion-p useless-expansion-p475,19064
(defun find-lits-in-mating find-lits-in-mating483,19319
(defun find-lits-in-mating-real find-lits-in-mating-real488,19523
(defmtreeop complete-pcomplete-p493,19718
(defun unfulfiled-ob unfulfiled-ob499,19943
(defun mst-complete-p mst-complete-p508,20314
(defun mst-quiet-complete-p mst-quiet-complete-p519,20736
(defmtreeop show-matingshow-mating529,21067
(defun mst-show-mating mst-show-mating534,21226
(defun mst-show-mating-real mst-show-mating-real538,21333
(defmtreeop show-substsshow-substs546,21670
(defun mst-show-substs mst-show-substs551,21825
(defmtreeop sibsib559,22179
(defwffop mst-go-sibmst-go-sib566,22325
(defun mst-go-sib mst-go-sib572,22474
(defun cycle-list cycle-list582,22894
(defmtreeop upup588,23170
(defwffop mst-go-upmst-go-up595,23294
(defun mst-go-up mst-go-up601,23441
(defmtreeop dd607,23659
(defwffop mst-go-downmst-go-down617,23940
(defun mst-go-down mst-go-down623,24114
(defmtreeop killkill630,24420
(defwffop mst-killmst-kill637,24585
(defun mst-kill mst-kill644,24768
(defmtreeop resurrectresurrect656,25337
(defwffop mst-resurrectmst-resurrect663,25518
(defun mst-resurrect mst-resurrect670,25712
(defmtreeop gotogoto684,26368
(defwffop mst-gotomst-goto693,26617
(defun mst-goto-list mst-goto-list699,26792
(defun find-root-mtree find-root-mtree709,27251
(defun mst-goto mst-goto713,27380
(defmtreeop unifyunify721,27739
(defun mst-unify mst-unify731,28143
(defmacro mst-clist mst-clist760,29111
(defun obt-goto-list obt-goto-list764,29251
(defun find-root find-root773,29631
(defun obt-goto obt-goto777,29751
(defun occurs-in-jform occurs-in-jform786,30096
(defun occurs-in-obtree occurs-in-obtree797,30684
(defun occurs-in-obtree-1 occurs-in-obtree-1803,30908
(defflag mt-default-ob-matemt-default-ob-mate812,31330
(definfo lowestlowest827,32012
(definfo hi-lohi-lo833,32215
(defun occurs-in-obtree-path occurs-in-obtree-path840,32546
(defun occurs-in-obtree-path-l occurs-in-obtree-path-l847,32827
(defun occurs-in-obtree-path-h occurs-in-obtree-path-h853,33143
(defun occurs-in-obtree-path-h-1 occurs-in-obtree-path-h-1858,33434
(defun occurs-in-obtree-path-hl occurs-in-obtree-path-hl865,33778
(defun occurs-in-obtree-path-hl1 occurs-in-obtree-path-hl1874,34390
(defun occurs-in-obtree-path-hl2 occurs-in-obtree-path-hl2883,34881
(defmtreeop pickpick888,35120
(defwffop pick-litpick-lit898,35465

mtree-unification.lisp,362
(deffile mtree-unificationmtree-unification17,686
(defun mst-subst-stack mst-subst-stack29,1095
(defun mst-quick-unification-connection mst-quick-unification-connection40,1502
(defun mst-fo-unify-conn mst-fo-unify-conn46,1758
(defun mst-check-potential-connection mst-check-potential-connection58,2211
(defun eligible-literal eligible-literal95,3879

nat-etr.lisp,2407
(deffile nat-etrnat-etr15,626
(defun nat-etree-old nat-etree-old27,980
(defun copy-nproof copy-nproof73,2704
(defun make-cgraph-and-mating make-cgraph-and-mating98,3743
(defun update-line-node-list update-line-node-list120,4569
(defun justified-by-node justified-by-node145,5360
(defun xlate-rulep xlate-rulep154,5564
(defun deepen-leaf-node-rulep deepen-leaf-node-rulep233,8709
(defun deepen-to-literals-rulep deepen-to-literals-rulep266,9699
(defun deepen-to-literals*-rulep deepen-to-literals*-rulep275,9993
(defun find-rulep-mating find-rulep-mating282,10205
(defmexpr auto-suggestauto-suggest291,10426
(defun identical-rulep identical-rulep305,11028
(defvar *suggest-list* *suggest-list*313,11285
(defvar *instantiated* *instantiated*314,11313
(defvar *return* *return*315,11341
(defun auto-suggest auto-suggest318,11366
(defun msv-find-depths msv-find-depths449,17083
(defun find-skolem-depth find-skolem-depth574,23267
(defun find-pr97-subs find-pr97-subs578,23402
(defun drop-lambdas drop-lambdas615,24839
(defun repeated-instantiate repeated-instantiate619,24953
(defun rew-equiv rew-equiv624,25150
(defun neg-norm2 neg-norm2631,25395
(defun find-depth-required find-depth-required638,25583
(defun fdr-real fdr-real667,26498
(defun remove-subst=-lines remove-subst=-lines707,28158
(defun remove-subst=-line remove-subst=-line719,28651
(defun apply-extensionality-before-subst= apply-extensionality-before-subst=889,35508
(defun replace-subst-occs replace-subst-occs949,37708
(defun bounds-in-subst-occs bounds-in-subst-occs987,38995
(defun subst-occs-template subst-occs-template1018,40124
(defun subst-occs-iterations subst-occs-iterations1052,41337
(defun subst-occs-eq-used-and-justifications subst-occs-eq-used-and-justifications1068,41945
(defun subst-occs-iterations* subst-occs-iterations*1106,43641
(defun perform-subst-occs perform-subst-occs1117,44062
(defun generate-eq-list-with-justifications generate-eq-list-with-justifications1146,45056
(defun remove-sym=-line remove-sym=-line1178,46250
(defun remove-assert-sym=-line remove-assert-sym=-line1202,47355
(defun get-rewrite-defns get-rewrite-defns1245,49069
(defun getabbr getabbr1278,50520
(defun uninst-branch uninst-branch1281,50576
(defun wffeq-def1b wffeq-def1b1320,52381
(defun wffeq-def-lsym-bind-chk-b wffeq-def-lsym-bind-chk-b1420,56468

newrulep-tsts.lisp,795
(deffile newrulep-tstsnewrulep-tsts13,610
(defun valid-p valid-p20,762
(defun local-gwff-to-jform local-gwff-to-jform24,898
(defun init-prop init-prop30,1073
(defun init-prop-rec init-prop-rec39,1336
(defun valid-p-main valid-p-main68,2344
(defun sat-p-main sat-p-main77,2617
(defun find-msprop-class find-msprop-class92,3112
(defun remove-msprop-class remove-msprop-class111,3886
(defun find-open-rulep-path find-open-rulep-path118,4222
(defun find-cheapest-rulep-path find-cheapest-rulep-path159,5795
(defun generate-a-fixed-name-for generate-a-fixed-name-for200,7492
(defun find-alt-rulep-path find-alt-rulep-path215,8272
(defun complete-alt-rulep-path-and complete-alt-rulep-path-and236,9042
(defun complete-alt-rulep-path-or complete-alt-rulep-path-or249,9484

node.lisp,1987
(deffile nodenode13,610
(defun first-order-var first-order-var19,758
(defstruct (node node23,878
(defun print-uni-node print-uni-node42,1257
(defstruct (uni-term uni-term52,1735
(defun print-uni-term print-uni-term60,1867
(defstruct (subst subst77,2484
(defun print-subst print-subst87,2797
(defparameter w-var-prefix w-var-prefix100,3389
(defparameter h-var-prefix h-var-prefix101,3434
(defparameter eta-var-prefix eta-var-prefix102,3479
(defparameter initial-measure-root initial-measure-root103,3526
(defparameter very-large-number very-large-number104,3564
(defparameter very-small-number very-small-number105,3603
(defparameter initial-value-h-var-counter initial-value-h-var-counter106,3643
(defparameter initial-value-eta-var-counter initial-value-eta-var-counter107,3688
(defflag eta-ruleeta-rule109,3736
(defvar unification-toplevel unification-toplevel117,4009
(defvar current-eproof current-eproof118,4043
(defun sk-const-p sk-const-p120,4072
(defflag max-search-depthmax-search-depth128,4315
(defflag stop-at-TSNstop-at-TSN140,4846
(defflag reduce-double-negreduce-double-neg148,5084
(defflag subsumption-checksubsumption-check155,5298
(defflag max-utree-depthmax-utree-depth168,5877
(defflag min-quick-depthmin-quick-depth181,6502
(defflag imitation-firstimitation-first201,7362
(defflag unify-verboseunify-verbose208,7577
(defmacro rigid-p rigid-p223,8186
(defflag ms-dirms-dir227,8337
(definfo quasi-tps1quasi-tps1233,8496
(defstruct (stats stats238,8666
(defun print-stats print-stats260,9893
(defvar active-mating active-mating289,11223
(defvar duplicated duplicated290,11250
(defvar *no-internal-duplications* *no-internal-duplications*291,11274
(defvar *test-top* *test-top*292,11314
(defvar *test-total-time* *test-total-time*293,11338
(defvar current-topnode current-topnode294,11367
(defvar ms90-3-mating ms90-3-mating295,11396
(defvar non-dneggable-vars non-dneggable-vars296,11423

omdoc.lisp,2682
(deffile omdocomdoc26,870
(defvar *global-gwff-alist* *global-gwff-alist*33,1085
(defvar needed needed35,1119
(defflag omdoc-rightsomdoc-rights37,1140
(defflag omdoc-catalogueomdoc-catalogue43,1368
(defflag omdoc-typeomdoc-type50,1594
(defflag omdoc-sourceomdoc-source56,1740
(defflag omdoc-aut-creatoromdoc-aut-creator62,1933
(defflag omdoc-trc-creatoromdoc-trc-creator68,2101
(defmexpr omdoc-assertionomdoc-assertion75,2303
(defmexpr omdoc-proofomdoc-proof94,2821
(defmexpr omdoc-libomdoc-lib109,3190
(defmexpr omdoc-class-schemeomdoc-class-scheme114,3300
(defun omdoc-assertion omdoc-assertion126,3697
(defun omdoc-assertion-2 omdoc-assertion-2137,4009
(defun build-global-gwff-alist build-global-gwff-alist148,4359
(defun find-gwff-in-library find-gwff-in-library158,4773
(defun omdoc-proof omdoc-proof167,5099
(defun omdoc-lib omdoc-lib191,6168
(defun omdoc-class-scheme omdoc-class-scheme209,6894
(defun omdoc-tps-core omdoc-tps-core229,7779
(defun omdoc-lib-item omdoc-lib-item238,8052
(defun omdoc-abbr omdoc-abbr276,9963
(defun omdoc-gwff omdoc-gwff310,11645
(defun gwff-defn gwff-defn338,12825
(defun abbr-omdoc-theory-name abbr-omdoc-theory-name344,12953
(defun lib-const-omdoc-theory-name lib-const-omdoc-theory-name356,13412
(defun gwff-omdoc-theory-name gwff-omdoc-theory-name368,13882
(defun omdoc-name omdoc-name380,14339
(defun omdoc-char omdoc-char389,14574
(defun omdoc-proof-line omdoc-proof-line411,15003
(defun natural-language-justification natural-language-justification432,15869
(defun omdocwff-string omdocwff-string456,16904
(defun omdocwff-string-rec omdocwff-string-rec468,17340
(defun omdoc-typedvar-string omdoc-typedvar-string550,20615
(defun omdoc-type-string omdoc-type-string555,20775
(defun omdoc-type-string-1 omdoc-type-string-1559,20922
(defun omdoc-type-string-rec omdoc-type-string-rec564,21055
(defun omdoc-preamble omdoc-preamble579,21661
(defun omdoc-catalogue-preamble omdoc-catalogue-preamble607,22946
(defun omdoc-postamble omdoc-postamble636,24290
(defun omdoc-catalogue-postamble omdoc-catalogue-postamble639,24344
(defun mhelp-omdoc-string mhelp-omdoc-string645,24568
(defun omdoc-catalogue-and-theories omdoc-catalogue-and-theories658,24977
(defun omdoc-class-rec omdoc-class-rec673,25714
(defun omdoc-class omdoc-class681,25935
(defun omdoc-class-libitems omdoc-class-libitems699,26747
(defun omdoc-class-libitems-rec omdoc-class-libitems-rec702,26878
(defun omdoc-class-imports omdoc-class-imports817,32045
(defun find-class-with-item find-class-with-item826,32409
(defun find-class-with-item-l find-class-with-item-l834,32705

option-tree-aux.lisp,2067
(deffile option-tree-auxoption-tree-aux15,632
(defun print-option-tree print-option-tree21,763
(defun timetonum timetonum27,1072
(defun print-option-tree-subs print-option-tree-subs32,1243
(defun print-option-tree-long print-option-tree-long51,2165
(defun num-vpaths-ranking num-vpaths-ranking75,3109
(defun count-leaves count-leaves81,3344
(defun expansions-below expansions-below86,3512
(defun expansions-above expansions-above94,3803
(defun find-exps-above-and-below find-exps-above-and-below105,4088
(defun find-exp-nodes find-exp-nodes113,4287
(defun find-common-ancestor find-common-ancestor118,4429
(defun option-tree-leaves option-tree-leaves131,4785
(defun make-new-option-tree-node make-new-option-tree-node141,5061
(defun flatten flatten153,5367
(defun make-new-option-tree-node* make-new-option-tree-node*157,5434
(defun copy-eproof* copy-eproof*173,6002
(defun copy-option-tree* copy-option-tree*192,6686
(defun find-ho-exps find-ho-exps216,7691
(defun get-first-born get-first-born221,7817
(defun find-option-tree-node find-option-tree-node224,7923
(defun find-option-tree-nodes find-option-tree-nodes235,8383
(defun init-option-tree init-option-tree248,8890
(defun init-option-tree-statuses init-option-tree-statuses253,9056
(defun init-option-tree-free-vars init-option-tree-free-vars273,10031
(defvar *make-jform-fn* *make-jform-fn*280,10245
(defun init-option-tree-jform init-option-tree-jform282,10292
(defun init-option-tree-ranking init-option-tree-ranking288,10535
(defun init-option-tree-and-kids init-option-tree-and-kids295,10763
(defun update-statuses-in-eproof update-statuses-in-eproof317,11562
(defun setup-vars setup-vars331,12064
(defun option-tree-parent* option-tree-parent*337,12276
(defun option-tree-free-vars* option-tree-free-vars*345,12498
(defun expunge-old expunge-old351,12670
(defun expunge expunge367,13143
(defun expunge-vars expunge-vars394,14323
(defun get-variables get-variables407,14867
(defun get-variables-real get-variables-real414,15183

option-tree.lisp,1037
(deffile option-treeoption-tree16,632
(defun update-option-tree update-option-tree21,744
(defun update-option-tree-first-order update-option-tree-first-order32,1147
(defun add-new-expansions-to-master-tree add-new-expansions-to-master-tree57,2046
(defun deepen-all-leaf-nodes deepen-all-leaf-nodes77,2896
(defun deepen-all-new-leaf-nodes-ordered deepen-all-new-leaf-nodes-ordered91,3392
(defun deepen-all-new-leaf-nodes-ordered-aux deepen-all-new-leaf-nodes-ordered-aux104,3927
(defun update-option-tree-higher-order update-option-tree-higher-order114,4232
(defun make-higher-order-expansions make-higher-order-expansions127,4713
(defun most-used-parent most-used-parent142,5206
(defvar *subset-limit* *subset-limit*201,7150
(defun make-all-non-empty-subsets make-all-non-empty-subsets203,7177
(defun find-option-tree-first-born-nodes find-option-tree-first-born-nodes214,7493
(defun duplicate-parent-found duplicate-parent-found230,8119
(defun add-ho-exps-to-option-tree add-ho-exps-to-option-tree237,8404

option-tree-macros.lisp,218
(deffile option-tree-macrosoption-tree-macros16,632
(defstruct (option-tree option-tree22,733
(defvar *ignore-first-order-dups* *ignore-first-order-dups*38,1168
(defvar *option-tree-ms* *option-tree-ms*39,1207

option-tree-mateops.lisp,556
(deffile option-tree-mateopsoption-tree-mateops15,632
(defmateop ms89ms8922,784
(defun ms89-real ms89-real32,1268
(defun auto-search-ms89 auto-search-ms8936,1349
(defflag max-search-limit max-search-limit41,1469
(defflag search-time-limit search-time-limit52,2001
(defmateop expunge-oldexpunge-old65,2584
(defmateop expungeexpunge73,2945
(defun auto-search-aux auto-search-aux83,3359
(defvar option-tree-root option-tree-root88,3481
(defmateop show-option-treeshow-option-tree90,3512
(defun show-option-tree show-option-tree95,3708

option-tree-search.lisp,1155
(deffile option-tree-searchoption-tree-search16,633
(defun choose-lowest-eproof choose-lowest-eproof25,958
(defun adjust-option-tree-ranking adjust-option-tree-ranking48,1762
(defun auto-search auto-search62,2342
(defun auto-search auto-search68,2484
(defun find-prim-types find-prim-types112,4427
(defun find-prim-types-aux find-prim-types-aux118,4623
(defun find-prim-types-atom find-prim-types-atom128,4979
(defun find-prim-subtypes find-prim-subtypes135,5190
(defun find-prim-subtypes-aux find-prim-subtypes-aux145,5628
(defun find-prim-subtypes-atom find-prim-subtypes-atom155,6002
(defun get-initial-expansions get-initial-expansions173,6559
(defun set-up-option-tree-root set-up-option-tree-root187,6898
(defun finish-up-search finish-up-search199,7259
(defun decide-to-continue decide-to-continue218,8099
(defun decide-to-update-option-tree decide-to-update-option-tree226,8413
(defun find-percent-option-trees-changed find-percent-option-trees-changed238,8875
(defun limited-mating-search limited-mating-search275,10315
(defun limited-ms limited-ms295,11051
(defun limited-ms-real limited-ms-real300,11211

order-components.lisp,2624
(deffile order-componentsorder-components13,605
(defcategory ordercomponentsordercomponents20,812
(defordercom commoncommon32,1100
(defordercom nilnil39,1418
(defordercom pathnumpathnum46,1730
(defordercom tt56,2219
(defordercom t-reversedt-reversed64,2577
(defordercom pathnum-reversedpathnum-reversed73,3008
(defordercom reversereverse82,3445
(defordercom prefer-rigid1prefer-rigid190,3787
(defflag order-componentsorder-components99,4191
(defun common-init-jform-mspath common-init-jform-mspath133,5784
(defun common-tree-sorting common-tree-sorting135,5832
(defun common-sort-ms90-3-jform common-sort-ms90-3-jform137,5877
(defun reverse-init-jform-mspath reverse-init-jform-mspath143,6052
(defun reverse-sort-ms90-3-jform reverse-sort-ms90-3-jform151,6412
(defun pathnum-sorting-jforms pathnum-sorting-jforms163,6949
(defun pathnum-init-jform pathnum-init-jform169,7253
(defun pathnum-init-jform-mspath pathnum-init-jform-mspath191,8182
(defun pathnum-tree-sorting pathnum-tree-sorting217,9386
(defun pathnum-sort-ms90-3-jform pathnum-sort-ms90-3-jform220,9475
(defun reversed-pathnum-sorting-jforms reversed-pathnum-sorting-jforms245,10622
(defun reversed-pathnum-init-jform reversed-pathnum-init-jform251,10935
(defun reversed-pathnum-init-jform-mspath reversed-pathnum-init-jform-mspath273,11900
(defun reversed-pathnum-tree-sorting reversed-pathnum-tree-sorting299,13158
(defun reversed-pathnum-sort-ms90-3-jform reversed-pathnum-sort-ms90-3-jform302,13256
(defvar rigid-weight rigid-weight326,14373
(defvar flex-weight flex-weight327,14398
(defun prefer-rigid1 prefer-rigid1329,14422
(defun rigid1-init-jform-mspath rigid1-init-jform-mspath348,15395
(defun rigid1-tree-sorting rigid1-tree-sorting351,15467
(defun rigid1-sort-ms90-3-jform rigid1-sort-ms90-3-jform353,15510
(defordercom prefer-rigid2prefer-rigid2359,15713
(defun rigid2-init-jform-mspath rigid2-init-jform-mspath368,16117
(defun rigid2-tree-sorting rigid2-tree-sorting371,16189
(defun rigid2-sort-ms90-3-jform rigid2-sort-ms90-3-jform373,16232
(defun prefer-rigid2 prefer-rigid2377,16371
(defordercom prefer-rigid3prefer-rigid3410,18207
(defun rigid3-init-jform-mspath rigid3-init-jform-mspath419,18602
(defun rigid3-tree-sorting rigid3-tree-sorting422,18674
(defun rigid3-sort-ms90-3-jform rigid3-sort-ms90-3-jform424,18717
(defvar defn-weight defn-weight428,18856
(defun prefer-rigid3 prefer-rigid3430,18931
(defun prefer-rigid3-real prefer-rigid3-real436,19158
(defun init-position init-position480,21430
(defun recover-position recover-position498,22273

otl-advice.lisp,894
(deffile otl-adviceotl-advice21,707
(defmexpr check-structurecheck-structure31,933
(defun check-structure check-structure37,1192
(defun dangle-main dangle-main59,2037
(defun dangling-lines dangling-lines68,2395
(defun slinelist slinelist96,3691
(defun dependent-lines dependent-lines103,3986
(defun add-special-lines add-special-lines116,4460
(defvar *advice-plan-support* *advice-plan-support*137,5430
(defvar *advice-sorted-rules* *advice-sorted-rules*138,5465
(defvar *advice-hint-given-p* *advice-hint-given-p*139,5500
(defmexpr adviceadvice141,5536
(defun advice advice144,5626
(defun advice-main advice-main155,6074
(defun init-advice init-advice178,7034
(defun give-hints give-hints186,7302
(defun give-hint give-hint191,7451
(defun give-rules give-rules196,7590
(defun check-hyps-main check-hyps-main219,8341
(defun joint-hyps joint-hyps240,9282

otl-aux.lisp,537
(deffile otl-auxotl-aux20,732
(defun specified-p specified-p25,875
(defun existent-p existent-p27,921
(defun existent-label-p existent-label-p29,964
(defun strong-hyp-p strong-hyp-p32,1045
(defun hypsetdiff hypsetdiff36,1181
(defun set-eq set-eq47,1610
(defun ordered-join-h ordered-join-h66,2236
(defun contained-p contained-p82,2672
(defun join-h join-h99,3220
(defun meet-h meet-h117,3795
(defun line-label-vec line-label-vec126,4025
(defun subst-labels subst-labels131,4157
(defun hypnums hypnums141,4630

otl-cleanup.lisp,931
(deffile otl-cleanupotl-cleanup15,632
(defmexpr cleanupcleanup22,758
(defun cleanup cleanup39,1431
(defun cleanup-justifying cleanup-justifying54,2062
(defun justifying-lines justifying-lines73,2792
(defun cleanup-hypotheses cleanup-hypotheses90,3792
(defun justifying-hyps justifying-hyps101,4210
(defun cleanup-same cleanup-same110,4545
(defun change-ref change-ref125,5208
(defun cleanup-odd-defs cleanup-odd-defs131,5435
(defun cleanup-odd-defs1 cleanup-odd-defs1136,5512
(defun cleanup-odd-defs2 cleanup-odd-defs2170,7220
(defun compress-tree compress-tree257,11809
(defun mark-lines mark-lines264,12004
(defun get-tree-same get-tree-same289,13041
(defun compress-remove-lines compress-remove-lines313,14044
(defun get-tree-above get-tree-above334,14837
(defmexpr are-we-usingare-we-using347,15253
(defun are-we-using are-we-using355,15529
(defun are-we-using-2 are-we-using-2359,15614

otl-cmddef.lisp,586
(deffile otl-cmddefotl-cmddef21,759
(defun meta-ize-gwff-ext meta-ize-gwff-ext32,1055
(defvar rules-table rules-table39,1331
(defmacro defrulefile defrulefile43,1379
(defmacro defrulewffs defrulewffs47,1536
(defmacro macro-do macro-do82,2875
(defmacro setq-resolve-conflict setq-resolve-conflict132,4667
(defmacro setq-destruct setq-destruct136,4816
(defmacro setq-destruct-rec setq-destruct-rec140,4958
(defmacro setq-destruct-multi setq-destruct-multi159,5551
(defmacro eval-destruct eval-destruct163,5718
(defflag auto-generate-hypsauto-generate-hyps173,6013

otl-fileout.lisp,117
(deffile otl-fileoutotl-fileout18,649
(defmexpr printproofprintproof27,820
(defun printproof printproof42,1172

otl-go.lisp,610
(deffile otl-gootl-go22,775
(defmexpr gogo30,979
(defun go-wild go-wild36,1199
(defun go-main go-main66,2269
(definfo dodo93,3388
(definfo askask98,3544
(definfo showshow102,3655
(definfo forgetforget106,3760
(defun find-action find-action110,3833
(defun apply-rule apply-rule117,4047
(defun comdecode-rule comdecode-rule124,4324
(defun fill-args-$ fill-args-$136,4696
(defun first-rule first-rule140,4818
(defun multiple-suggestions-p multiple-suggestions-p148,5104
(defun ask-apply-rule ask-apply-rule151,5202
(defmexpr suggestsuggest166,5807
(defun suggest suggest175,6097

otl-go-mac.lisp,323
(deffile otl-go-macotl-go-mac13,605
(defun go-instruct-p go-instruct-p21,755
(defflag go-instructionsgo-instructions30,995
(defflag resolve-conflictresolve-conflict42,1506
(defflag quietly-use-defaultsquietly-use-defaults49,1692
(defun get-exec-form get-exec-form57,1964
(defun exec-form-p exec-form-p67,2270

otl-help.lisp,710
(deffile otl-helpotl-help22,698
(defcategory rulehelprulehelp29,832
(defun drop-prop drop-prop42,1199
(defun help-rule help-rule47,1288
(defun find-rule-file find-rule-file54,1539
(defun rule-help rule-help58,1675
(defun prep-print-help prep-print-help63,1821
(defun prepare-rule-help prepare-rule-help67,1905
(defun get-rule-help get-rule-help85,2641
(defun print-rule-help print-rule-help118,3697
(defun print-ps-pair print-ps-pair147,4726
(defmexpr list-ruleslist-rules158,5011
(defun list-rules list-rules175,5656
(defmexpr list-rules*list-rules*213,6886
(defun list-rules* list-rules*227,7508
(defmexpr searchsearch269,8838
(defun review-keys-all review-keys-all281,9361

otl-macros.lisp,1219
(deffile otl-macrosotl-macros15,622
(defmode scribe-otlscribe-otl22,750
(defmode tex-1-otltex-1-otl37,1107
(defmode tex-otltex-otl52,1412
(defflag printlineflagprintlineflag70,1793
(defflag print-dotsprint-dots76,1939
(defflag short-helpshort-help82,2078
(defflag cleanup-samecleanup-same90,2307
(defflag cleanup-ruleccleanup-rulec97,2495
(defmacro gaps gaps106,2776
(defmacro nextplan-no nextplan-no109,2819
(defmacro line-hypotheses line-hypotheses114,2920
(defmacro line-justification line-justification117,2982
(defmacro line-just-rule line-just-rule120,3050
(defmacro line-just-terms line-just-terms123,3120
(defmacro line-just-lines line-just-lines126,3192
(defmacro line-assertion line-assertion129,3265
(defmacro line-support line-support132,3325
(defmacro line-linenumber line-linenumber135,3381
(defmacro proof-lines proof-lines138,3445
(defmacro proof-plans proof-plans141,3500
(defmacro proof-linealiases proof-linealiases144,3555
(defmacro proof-key proof-key147,3622
(defmacro proof-assertion proof-assertion150,3673
(defmacro proof-nodealiases proof-nodealiases153,3736
(defmacro line-mating line-mating156,3803
(defmacro line-node line-node159,3859

otlnl.lisp,1916
(deffile otlnlotlnl19,706
(defun combine combine24,826
(defun iota iota31,1070
(defun pline-default pline-default34,1139
(defun done done39,1302
(defun exercise exercise79,3017
(defun linealias linealias95,3714
(defun %linealias %linealias98,3766
(defun lineordering lineordering101,3846
(defun maxline maxline105,3950
(defun ck-just ck-just108,4020
(defun ck-hyp ck-hyp123,4560
(defun nextplan nextplan135,5046
(defun numalias numalias139,5174
(defun prove prove142,5245
(defun remprop-lines remprop-lines154,5862
(defvar *dproof-list* *dproof-list*164,6184
(defun prove1 prove1168,6266
(defun prove2 prove2180,6664
(defmexpr prooflistprooflist206,7605
(defun prooflist prooflist211,7787
(defun problems problems214,7940
(defun abbreviations abbreviations254,9373
(defun reconsider reconsider263,9616
(defmexpr donedone271,9812
(defmexpr exerciseexercise274,9884
(defmexpr proveprove281,10048
(defmexpr problemsproblems297,10621
(defmexpr abbreviationsabbreviations304,10881
(defmexpr reconsiderreconsider312,11172
(defvar mail-remarks mail-remarks327,11746
(defvar remarks-file remarks-file332,11916
(defmexpr remarkremark336,12013
(defun remark remark344,12187
(defun write-remarks-file write-remarks-file352,12388
(defparameter *mail-program* *mail-program*359,12651
(defun mail-remark mail-remark365,12848
(defun current-plan-lines current-plan-lines394,13662
(defun parse-comment parse-comment402,13942
(defun parse-comment-2 parse-comment-2418,14505
(defun parse-string parse-string441,15661
(defun parse-gwff parse-gwff446,15836
(defun parse-linenum parse-linenum465,16649
(defun comment-to-string comment-to-string479,17141
(defun translate-comments translate-comments486,17346
(defmexpr line-commentline-comment495,17674
(defun line-comment line-comment517,18666
(defflag print-commentsprint-comments520,18756

otl-prt.lisp,1851
(deffile otl-prtotl-prt17,647
(defmexpr depthdepth24,803
(defun depth depth32,1063
(defmexpr pwpw34,1102
(defmexpr pwscopepwscope45,1299
(defmexpr pplanpplan57,1551
(defun pplan pplan65,1777
(defmexpr plpl70,1909
(defun pl pl88,2473
(defmexpr pallpall93,2606
(defmexpr find-linefind-line97,2706
(defun find-line find-line120,3757
(defmexpr tableautableau152,5062
(defun pall pall162,5397
(defmexpr ^p^p169,5651
(defun ^p ^p173,5744
(defun prtactive prtactive175,5789
(defmexpr ^pn^pn181,5958
(defun ^pn ^pn186,6133
(defun prtactivenos prtactivenos189,6191
(defun ^pn-recurse ^pn-recurse196,6401
(defun find-next-gap find-next-gap208,6924
(defmexpr plinepline218,7429
(defun pline pline226,7596
(defmexpr count-linescount-lines230,7647
(defun count-lines count-lines235,7774
(defmexpr pstatuspstatus238,7879
(defun prtstatus prtstatus244,8085
(defmexpr subproofsubproof257,8523
(defun subproof subproof265,8755
(defmexpr sponsorsponsor271,8922
(defun sponsor sponsor280,9228
(defmexpr unsponsorunsponsor289,9563
(defun unsponsor unsponsor307,10183
(defmexpr pl*pl*318,10495
(defun pl* pl*328,10714
(defun pl*-defaults pl*-defaults332,10816
(defun prfw-pall prfw-pall337,10946
(defun prfw-^p prfw-^p350,11512
(defun prfw-^pn prfw-^pn361,11929
(defun tableau tableau372,12358
(defun tr-print-tableau-main tr-print-tableau-main385,12949
(defun rec-tableau-print rec-tableau-print398,13676
(defun closeness-filter2 closeness-filter2429,15034
(defun p-tableau-elt p-tableau-elt440,15631
(defun p-tableau-just p-tableau-just444,15806
(defun rec-tableau-sons rec-tableau-sons453,16189
(defun contains-lists contains-lists462,16526
(defun flatten-mstlist flatten-mstlist469,16661
(defun all-nils all-nils475,16867
(defun calc-tabstops calc-tabstops480,16966

otl-rearrange.lisp,1349
(deffile otl-rearrangeotl-rearrange19,670
(defmexpr deletedelete26,827
(defmexpr lock-linelock-line33,998
(defmexpr unlock-lineunlock-line40,1153
(defun lock-line lock-line47,1304
(defun unlock-line unlock-line49,1358
(defun dellines dellines52,1470
(defun delete-line delete-line58,1610
(defun benign-delete-line benign-delete-line89,2781
(defmexpr movemove114,3697
(defun move move121,3902
(defmexpr planplan161,5492
(defun plan plan168,5672
(defun plan-again plan-again174,5857
(defmexpr renumberallrenumberall181,6072
(defun renumberall renumberall191,6350
(defmexpr squeeze squeeze199,6617
(defmexpr modify-gapsmodify-gaps203,6737
(defun modify-gaps modify-gaps215,7194
(defmexpr introduce-gapintroduce-gap239,8120
(defun introduce-gap introduce-gap253,8612
(defmexpr move*move*264,8957
(defun move* move*272,9243
(defmexpr delete*delete*287,9780
(defun dellines* dellines*294,9961
(defmexpr add-hypsadd-hyps354,12548
(defmexpr delete-hypsdelete-hyps367,13049
(defun add-hyps add-hyps382,13650
(defun find-disch-line-and-boundary-line find-disch-line-and-boundary-line580,20856
(defun delete-hyps delete-hyps616,22264
(defun double-check-legal double-check-legal762,27461
(defmexpr make-assert-a-hypmake-assert-a-hyp803,28720
(defun make-assert-a-hyp make-assert-a-hyp817,29193

otl-rulep.lisp,423
(deffile otl-rulepotl-rulep23,993
(defun deepify-list deepify-list30,1169
(defun rulep-defaults rulep-defaults68,2619
(defun rulep-enter rulep-enter78,2953
(defun rulep-legal-hyps rulep-legal-hyps109,4183
(defun rulep-simple rulep-simple124,4592
(defun rulep-deluxe rulep-deluxe143,5232
(defun better-rulep-line-p better-rulep-line-p235,8261
(defun rulep-minimize-supports rulep-minimize-supports253,8877

otl-schema2.lisp,282
(deffile otl-schema2otl-schema225,907
(defun assert-legal assert-legal30,1054
(defun make-assert-argtype-list make-assert-argtype-list53,1929
(defun assert% assert%76,2927
(defun get-meta-assertion get-meta-assertion141,5748
(defun get-meta-alist get-meta-alist154,6236

otl-scribeout.lisp,1324
(deffile otl-scribeoutotl-scribeout18,659
(defflag scribe-preamblescribe-preamble26,835
(defflag scribe-postamblescribe-postamble34,1102
(defflag scribe-line-widthscribe-line-width41,1398
(defflag tpstex tpstex49,1594
(defflag vpdtex vpdtex56,1780
(defflag tex-preamble tex-preamble63,1966
(defflag latex-preamble latex-preamble81,2793
(defflag tex-1-preamble tex-1-preamble103,3541
(defflag tex-postamble tex-postamble111,3731
(defflag tex-1-postamble tex-1-postamble118,3928
(defflag latex-postamble latex-postamble125,4123
(defflag tex-line-widthtex-line-width132,4316
(defmexpr scribeproofscribeproof138,4449
(defun scribeproof scribeproof156,4962
(defmexpr texprooftexproof188,6267
(defun texproof texproof212,7238
(defun print-line-scribe print-line-scribe281,10200
(defun figure-out-indent figure-out-indent334,12498
(defun count-space-needed count-space-needed341,12705
(defun print-line-tex-1 print-line-tex-1350,13082
(defun print-line-tex-plain print-line-tex-plain422,15977
(defun tex-fudge-comment tex-fudge-comment449,16841
(defun print-line-tex print-line-tex464,17519
(defmexpr slideproofslideproof508,19259
(defun slideproof slideproof526,19734
(defmexpr setup-slide-stylesetup-slide-style551,20580
(defun setup-slide-style setup-slide-style554,20668

otl-suggest.lisp,320
(deffile otl-suggestotl-suggest22,790
(defun show-suggestions show-suggestions30,1004
(defun find-suggests find-suggests54,2100
(defun parse-suggestions parse-suggestions75,3012
(defun not-really-allowed not-really-allowed84,3348
(defun rule-compfn rule-compfn122,5184
(defun sort-rules sort-rules128,5345

otl-sugg-mac.lisp,122
(deffile otl-sugg-macotl-sugg-mac21,708
(defcategory srulesrule28,844
(defun princ-srulehelp princ-srulehelp39,1082

otl-typ.lisp,457
(deffile otl-typotl-typ13,605
(defgwff-type line-numberline-number23,883
(defun line-number-wfftype-checkfn line-number-wfftype-checkfn28,1049
(defun get-line-assertion get-line-assertion31,1150
(defun get-existingline get-existingline34,1234
(defun get-pline get-pline39,1395
(defun getocclist getocclist43,1532
(defun occlistp occlistp52,1769
(defun print-line-range print-line-range56,1875
(defun get-line-range get-line-range59,1970

pbrief.lisp,2164
(deffile pbriefpbrief12,589
(defflag print-combined-uisprint-combined-uis97,4700
(defflag print-combined-egensprint-combined-egens105,4939
(defflag print-combined-ugensprint-combined-ugens113,5183
(defflag print-until-ui-or-egenprint-until-ui-or-egen121,5425
(defvar line-with-ui-or-egen-gathered line-with-ui-or-egen-gathered132,5859
(defmexpr pbriefpbrief134,5903
(defmexpr explainexplain155,6754
(defmexpr build-proof-hierarchy build-proof-hierarchy179,7729
(defmexpr print-proof-structure print-proof-structure214,9008
(defun build-proof-hierarchy build-proof-hierarchy230,9873
(defun proof-line-h proof-line-h239,10245
(defun get-current-level-deps get-current-level-deps254,10858
(defun current-level-p current-level-p274,11436
(defun get-top-level-deps get-top-level-deps282,11652
(defun line-ugenvars line-ugenvars305,12339
(defun find-common-line-ancestor find-common-line-ancestor310,12461
(defun union-list union-list323,12769
(defun most-recent-line most-recent-line330,12892
(defun explain explain340,13103
(defun pbrief pbrief349,13374
(defun gather-subproof-lines gather-subproof-lines358,13631
(defun gather-justification-subproof gather-justification-subproof372,14038
(defun include-lines include-lines391,14484
(defun include-line include-line397,14599
(defun get-linear-chain-of-line get-linear-chain-of-line415,15105
(defun line-lineardependency line-lineardependency424,15380
(defun line-dependencies line-dependencies427,15443
(defun line-dependencies-with-linear line-dependencies-with-linear432,15554
(defun print-proof-structure print-proof-structure439,15739
(defun print-proof-structure-line print-proof-structure-line456,16366
(defun print-linear-chain print-linear-chain461,16525
(defun print-justification-structure print-justification-structure467,16716
(defun print-proof-structure-linear-chain print-proof-structure-linear-chain492,17504
(defun print-partial-proof print-partial-proof501,17871
(defun combine-lines combine-lines543,19231
(defun combine-strings combine-strings570,19852
(defun get-dependencies-in-lines get-dependencies-in-lines577,20018

pck.lisp,408
(deffile pckpck13,613
(defmexpr modulesmodules24,838
(defun modules modules29,946
(defun clean-global-list clean-global-list33,1050
(defun loaded-mods loaded-mods48,1560
(defun unloaded-mods unloaded-mods51,1613
(defmexpr unloaded-modsunloaded-mods54,1670
(defmexpr loaded-modsloaded-mods57,1742
(defun unloaded-modules unloaded-modules60,1810
(defun loaded-modules loaded-modules67,2020

plurals.lisp,123
(deffile pluralsplurals24,851
(defun cat-plural cat-plural29,970
(defun vowel vowel37,1227
(defun an-a an-a40,1306

pprint.lisp,603
(deffile pprintpprint20,745
(defun aplicnlistdepth aplicnlistdepth30,961
(defun atomvalterpri atomvalterpri36,1190
(defun genchar genchar62,2024
(defun indentation indentation64,2077
(defun pp-enter-kset pp-enter-kset70,2218
(defun pprinc pprinc82,2494
(defun pprinc0 pprinc091,2705
(defun pptyo pptyo105,3076
(defun pptyo0 pptyo0112,3226
(defun pptyos pptyos127,3593
(defun pp-lowercase pp-lowercase137,3789
(defun printpplist printpplist140,3872
(defun singleaplicn singleaplicn218,6387
(defun sprintaplicn sprintaplicn223,6484
(defun sprintpplist sprintpplist239,7064

pr00.lisp,951
(deffile pr00pr0017,708
(defvar *pr00-setsubs* *pr00-setsubs*24,836
(defflag PR00-NUM-ITERATIONSPR00-NUM-ITERATIONS26,865
(defflag pr00-max-substs-varpr00-max-substs-var36,1191
(defflag pr00-require-arg-depspr00-require-arg-deps48,1579
(defflag pr00-allow-subnode-connspr00-allow-subnode-conns62,2067
(defun replace-pi-sigma-with-quantifiers replace-pi-sigma-with-quantifiers73,2416
(defun compound-formula-p compound-formula-p79,2762
(defun term-indep-of-args-p term-indep-of-args-p89,2957
(defun pr00-formula-unify pr00-formula-unify98,3217
(defun generate-pr00-setsubs generate-pr00-setsubs113,3861
(defun generate-pr00-setsubs-rec generate-pr00-setsubs-rec130,4643
(defun generate-pr00-unif-setsubs generate-pr00-unif-setsubs147,5283
(defun generate-pr00-unif-setsubs-2 generate-pr00-unif-setsubs-2160,5812
(defun generate-pr00-unif-setsubs-3 generate-pr00-unif-setsubs-3215,8005
(defun set-var-p set-var-p269,9898

prenex.lisp,637
(deffile prenexprenex20,723
(defmexpr prenex-iterateprenex-iterate25,831
(defun prenex-iterate prenex-iterate45,1653
(defun prenex-iterate-checklist prenex-iterate-checklist64,2697
(defun prenex-iterate-report prenex-iterate-report77,3129
(defun prenex-iterate-report-w prenex-iterate-report-w114,4861
(defun prenex-iterate-report-tex prenex-iterate-report-tex126,5447
(defmexpr prenex-wffeqprenex-wffeq143,6260
(defvar *prenex-error*)*prenex-error*150,6481
(defun prenex-wffeq prenex-wffeq152,6506
(defun prenex-really-eq prenex-really-eq161,6852
(defun valid-prenex-normal-form valid-prenex-normal-form176,7397

prfw.lisp,1604
(deffile prfwprfw17,628
(deftoplevel prfw-topprfw-top24,774
(defun prfw-tps-top-prompt prfw-tps-top-prompt33,1084
(defvar *prfw-iftrue-update-commands**prfw-iftrue-update-commands*38,1238
(defvar *prfw-pall-window* *prfw-pall-window*60,2359
(defvar *prfw-^p-window* *prfw-^p-window*61,2433
(defvar *prfw-^pn-window* *prfw-^pn-window*62,2463
(defvar *prfw-pall-process* *prfw-pall-process*63,2494
(defvar *prfw-^p-process* *prfw-^p-process*64,2561
(defvar *prfw-^pn-process* *prfw-^pn-process*65,2592
(defvar *big-proofwindow* *big-proofwindow*66,2624
(defflag proofw-allproofw-all68,2678
(defflag proofw-activeproofw-active75,2882
(defflag proofw-active+nosproofw-active+nos82,3106
(defflag proofw-active-heightproofw-active-height89,3349
(defflag proofw-all-heightproofw-all-height95,3527
(defflag proofw-active-widthproofw-active-width101,3700
(defflag proofw-all-widthproofw-all-width107,3876
(defflag proofw-active+nos-heightproofw-active+nos-height113,4047
(defflag proofw-active+nos-widthproofw-active+nos-width120,4244
(defmexpr begin-prfwbegin-prfw127,4439
(defmexpr end-prfwend-prfw144,5192
(defun prfw-print-* prfw-print-*151,5425
(defun general-begin-prfw general-begin-prfw153,5482
(defun begin-prfw begin-prfw193,7579
(defun setup-prfw-^p-window setup-prfw-^p-window202,7902
(defun setup-prfw-^pn-window setup-prfw-^pn-window225,8922
(defun setup-prfw-pall-window setup-prfw-pall-window248,9992
(defun end-prfw end-prfw271,10986
(defun prfw-comdecode prfw-comdecode277,11142
(defun interpret-prfw-top interpret-prfw-top292,11733

prim-edops.lisp,714
(deffile prim-edopsprim-edops17,689
(defflag prim-prefixprim-prefix24,840
(defflag neg-prim-subneg-prim-sub30,999
(defun prt-prim prt-prim45,1484
(defun primlist primlist60,1948
(defedop prt-primprt-prim65,2065
(defwffop primsubstsprimsubsts70,2151
(defun primsubsts primsubsts76,2350
(defedop name-primname-prim79,2457
(defwffop name-primsubstsname-primsubsts84,2549
(defun name-primsubsts name-primsubsts91,2769
(defflag prim-bdtypesprim-bdtypes109,3460
(defflag prim-bdtypes-autoprim-bdtypes-auto122,4018
(definfo replacereplace152,5410
(definfo replace-subreplace-sub158,5616
(definfo appendappend164,5826
(definfo append-subappend-sub170,6026
(definfo ignoreignore176,6229

prim.lisp,3535
(deffile primprim17,689
(defvar prim-logconst prim-logconst25,826
(defvar prim-binders prim-binders26,859
(defvar prim-hashtable prim-hashtable27,898
(defflag pr97c-prenexpr97c-prenex29,955
(defflag pr97c-max-abbrevspr97c-max-abbrevs39,1340
(defflag min-prim-depthmin-prim-depth49,1726
(defflag min-prim-litsmin-prim-lits92,3702
(defflag max-prim-litsmax-prim-lits105,4191
(defflag primsub-methodprimsub-method118,4680
(defflag max-prim-depthmax-prim-depth180,7981
(defun ini-prim-hashtable ini-prim-hashtable219,9751
(defun find-prim-substs find-prim-substs222,9809
(defun prim-substs prim-substs225,9903
(defun rename-prim-subst rename-prim-subst278,12595
(defun prim-const prim-const296,13223
(defun prim-projections prim-projections309,13707
(defun prim-binder prim-binder312,13801
(defun make-deep-prims make-deep-prims333,14639
(defun lex3 lex3360,15862
(defun label-subst label-subst368,16067
(defun not-useless not-useless377,16370
(defun restyp restyp391,16888
(defun get-useful-subformulas get-useful-subformulas395,16970
(defun count-blanks2 count-blanks2426,18436
(defun amalgamate-blanks amalgamate-blanks432,18661
(defun amalg-blanks-real amalg-blanks-real437,18812
(defun subfms-of-etree subfms-of-etree462,20033
(defun suppress-details suppress-details469,20251
(defun subfms-of-etree-real subfms-of-etree-real475,20516
(defun count-blanks count-blanks488,21143
(defun blank-out-parts-of blank-out-parts-of496,21533
(defun make-blank make-blank516,22373
(defun type-to-string-3 type-to-string-3524,22696
(defun vector-final-seg vector-final-seg529,22879
(defun drop-w drop-w536,23065
(defun make-deep-subfm-prims make-deep-subfm-prims556,23851
(defun make-deep-subfm-pr97c make-deep-subfm-pr97c602,26068
(defun listify-vec listify-vec631,27242
(defun fill-in-blanks fill-in-blanks637,27404
(defun fudge-cons fudge-cons656,28314
(defun generate-new-terms generate-new-terms660,28423
(defun make-deep-prims-new make-deep-prims-new667,28838
(defun generate-new-nflist generate-new-nflist697,30365
(defun make-deep-prims-old make-deep-prims-old716,31359
(defun nary-type nary-type738,32488
(defun generate-nflist generate-nflist742,32635
(defun outer-clumps outer-clumps752,33308
(defun inner-clumps inner-clumps756,33484
(defun lastn lastn761,33725
(defun binderlistlist binderlistlist765,33893
(defun binderlistlist1 binderlistlist1771,34104
(defun flatten-bindlist flatten-bindlist775,34311
(defun addbinders addbinders779,34417
(defun make-n-new-heads make-n-new-heads782,34532
(definfo pr89pr89786,34656
(definfo pr93pr93791,34815
(definfo pr95pr95799,35141
(definfo pr97pr97807,35453
(definfo pr97Apr97A817,35891
(definfo pr97Bpr97B822,36034
(definfo pr97Cpr97C828,36304
(definfo pr00pr00836,36718
(defun get-useful-subformulas-pr97c get-useful-subformulas-pr97c851,37070
(defun smaller-sub smaller-sub872,37965
(defun real-length real-length881,38332
(defun make-combinations-of make-combinations-of888,38526
(defun quantify-everything quantify-everything933,40732
(defun join-everything join-everything946,41251
(defun subfms-of-etree-97c subfms-of-etree-97c986,42994
(defun make-subformula-list-97c make-subformula-list-97c995,43357
(defun blank-out-parts2 blank-out-parts21001,43658
(defun count-blanks3 count-blanks31021,44426
(defun same-wff same-wff1031,44928
(defun same-wff-real same-wff-real1037,45094
(defun replace-blanks-in replace-blanks-in1062,45935

process.lisp,1586
(defun proc~all-processes proc~all-processes55,1576
(defun proc~actual-process proc~actual-process66,1840
(defmacro proc~without-scheduling proc~without-scheduling77,2123
(defmacro proc~allow-schedule proc~allow-schedule83,2278
(defmacro proc~quit proc~quit96,2541
(defmacro proc~create proc~create103,2619
(defun proc~is-active proc~is-active126,3608
(defun proc~is-running proc~is-running140,4199
(defmacro proc~sleep proc~sleep156,4800
(defmacro proc~wait proc~wait169,5283
(defmacro proc~socket-wait-for-input-available proc~socket-wait-for-input-available187,5937
(defmacro proc~wait-with-timeout proc~wait-with-timeout202,6466
(defun proc~activate proc~activate218,7237
(defun proc~deactivate proc~deactivate230,7536
(defmacro proc~interrupt proc~interrupt243,7842
(defun proc~kill proc~kill258,8431
(defmacro proc~with-process-lock proc~with-process-lock271,8740
(defun proc~new-priority proc~new-priority284,9038
(defun proc~priority proc~priority292,9333
(defun proc~whostate proc~whostate295,9398
(defsetf proc~resume-hook proc~resume-hook298,9463
(defun proc~resume-hook proc~resume-hook301,9566
(defun proc~name proc~name304,9637
(defun proc~property-list proc~property-list307,9694
(defsetf proc~property-list proc~property-list310,9769
(defun proc~arrest-reasons proc~arrest-reasons313,9870
(defun proc~add-arrest-reason proc~add-arrest-reason316,9947
(defun proc~revoke-arrest-reason proc~revoke-arrest-reason319,10044
(defun proc~make-process-lock proc~make-process-lock322,10147
(defun proc~p proc~p325,10207

prtcmd.lisp,367
(deffile prtcmdprtcmd13,609
(defmacro defprtop defprtop20,746
(defprtop pwpw31,973
(defun pw pw34,1052
(defprtop pwscopepwscope37,1102
(defun pwscope pwscope40,1177
(defprtop pwtypespwtypes43,1249
(defun pwtypes pwtypes46,1308
(defprtop ppwppw49,1378
(defun ppw ppw52,1426
(defun print-unordered-symbol-table print-unordered-symbol-table56,1572

prt.lisp,863
(deffile prtprt19,713
(defvar period period29,992
(defun printwffhere printwffhere31,1022
(defun decode-typed decode-typed43,1390
(defflag elim-defnselim-defns54,1905
(defun eliminate-defns eliminate-defns64,2285
(defun pwff pwff69,2443
(defun printwffscope printwffscope101,3481
(defun printwffplain printwffplain132,4598
(defwffrec printwff printwff149,5214
(defun printwff printwff151,5266
(defun need-no-brackets need-no-brackets246,8616
(defun need-no-brackets-on-right need-no-brackets-on-right261,9154
(defun pp-lsymbol-space pp-lsymbol-space273,9562
(defun pp-symbol-space pp-symbol-space284,9958
(defun pp-space-p pp-space-p294,10262
(defun pp-lsymbol pp-lsymbol304,10631
(defun pp-typesym pp-typesym315,10984
(defun flatsym flatsym329,11392
(defun flatstring flatstring342,11770
(defun flatwff flatwff345,11838

prtop.lisp,609
(deffile prtopprtop24,871
(defwffop prt-symbol-pprt-symbol-p31,1010
(defun prt-symbol-p prt-symbol-p37,1150
(defwffop prt-aplicn-pprt-aplicn-p43,1276
(defun prt-aplicn-p prt-aplicn-p49,1423
(defwffop prt-infix-opprt-infix-op52,1479
(defflag infix-notationinfix-notation59,1663
(defwffop prwprw72,2172
(defmexpr prwprw80,2395
(defun prw prw87,2594
(defun prt-infix-op prt-infix-op95,2721
(defwffop prt-prefix-opprt-prefix-op108,3126
(defun prt-prefix-op prt-prefix-op115,3320
(defwffop prt-associative-pprt-associative-p126,3679
(defun prt-associative-p prt-associative-p133,3852

prtotl.lisp,1174
(deffile prtotlprtotl17,631
(defflag turnstyle-indentturnstyle-indent23,820
(defflag turnstyle-indent-autoturnstyle-indent-auto33,1213
(definfo fixfix58,2618
(definfo minmin65,2903
(definfo compresscompress76,3401
(definfo varyvary81,3596
(defsynonym turnstile-indent-autoturnstile-indent-auto86,3805
(defsynonym turnstile-indentturnstile-indent102,4711
(defflag slides-turnstyle-indentslides-turnstyle-indent111,5092
(defsynonym slides-turnstile-indentslides-turnstile-indent119,5368
(defun cstatus cstatus126,5642
(defun princsans princsans132,5807
(defun print-line-generic print-line-generic135,5862
(defun %prtline %prtline179,7947
(defun prtline prtline184,8083
(defun %prtlines %prtlines189,8193
(defun prtlines prtlines195,8335
(defun justlength justlength220,9443
(defun princjustification princjustification231,9731
(defun hack-about hack-about253,10510
(defun strip-out-lambda-binders strip-out-lambda-binders260,10715
(defmexpr pwtypespwtypes267,10930
(defmexpr showtypesshowtypes272,11026
(defun showtypes showtypes275,11100
(defmexpr shownotypesshownotypes277,11142
(defun shownotypes shownotypes280,11222

prtprp.lisp,431
(deffile prtprpprtprp24,802
(defcategory printpropprintprop34,1049
(defun process-printing-property process-printing-property45,1277
(defun printprop-default-readfn printprop-default-readfn48,1414
(defprintprop printnotypeprintnotype53,1589
(defprintprop prefixprefix58,1740
(defprintprop infixinfix63,1883
(defprintprop fo-single-symbolfo-single-symbol68,2023
(defprintprop prt-associativeprt-associative74,2237

read-help.lisp,72
(deffile read-helpread-help21,722
(defun read-help read-help54,1737

read-rdef-mac.lisp,474
(deffile read-rdef-macread-rdef-mac15,641
(defflag treat-hlines-as-dlinestreat-hlines-as-dlines20,772
(defflag hline-justificationhline-justification28,1024
(defmacro mapdigest mapdigest35,1196
(defmacro mapargtype mapargtype41,1447
(defmacro mapargtypelist mapargtypelist45,1579
(defun just-p just-p50,1709
(defun gwfflist-p gwfflist-p55,1879
(defun getjust getjust57,1926
(defun gettypedgwff gettypedgwff61,2004
(defun rlinelist-p rlinelist-p66,2138

read-ruledefs.lisp,531
(deffile read-ruledefsread-ruledefs13,610
(defun lvarconst-p lvarconst-p18,755
(defun read-lvarconsts read-lvarconsts21,822
(defun read-typesyms read-typesyms25,936
(defun read-lines read-lines29,1046
(defun read-linespec read-linespec33,1159
(defun read-restrictions read-restrictions41,1416
(defun read-restriction read-restriction45,1539
(defun read-items read-items49,1671
(defun read-itemhelp read-itemhelp53,1784
(defun find-type-vars find-type-vars65,2134
(defun rec-push-types rec-push-types73,2368

replace.lisp,632
(deffile replacereplace13,607
(defcategory repsymbolrepsymbol23,889
(defun read-equiv-to read-equiv-to34,1132
(defun princ-rephelp princ-rephelp48,1584
(defun get-equiv get-equiv60,1902
(defun get-pmequiv get-pmequiv63,1993
(defwffrec replace-equiv-wffreplace-equiv-wff71,2289
(defun replace-equiv-wff replace-equiv-wff74,2356
(defun repsym-p repsym-p108,3580
(defwffop replace-equiv-allreplace-equiv-all111,3647
(defun replace-equiv-all replace-equiv-all121,4049
(defedop rpallrpall125,4183
(defwffop replace-equivreplace-equiv131,4273
(defun replace-equiv replace-equiv145,4932
(defedop rprp157,5226

report-init.lisp,351
(deffile report-initreport-init13,608
(defmode etps2etps220,794
(defmode stps2stps233,1234
(defmode etps2-s86-cetps2-s86-c47,1675
(defmode etps2-s86-tfetps2-s86-tf62,2142
(defmode etps2-f85-tfetps2-f85-tf75,2656
(defmode etps2-f85-cetps2-f85-c89,3169
(defmode stps2-f85-tdstps2-f85-td103,3692
(defmode stps2-f85-cstps2-f85-c117,4231

report.lisp,1578
(deffile reportreport18,668
(deftype% datedate26,826
(defun unit unit33,971
(defun divis divis36,1038
(defun surelist surelist39,1109
(defun getdate getdate45,1241
(defun isdate isdate52,1392
(deftoplevel report-topreport-top65,1769
(defmexpr reportreport74,2024
(defcategory reportcmdreportcmd78,2112
(defmacro defreport defreport99,2810
(defvar report-ctree report-ctree137,4135
(defun report report139,4162
(defun reportop reportop143,4251
(defun report-prompt report-prompt153,4557
(defun report-print-* report-print-*156,4613
(defun report-interpret report-interpret158,4661
(defun get-evarg get-evarg187,5664
(defflag since-defaultsince-default198,5943
(defreport remark-listremark-list204,6086
(defun priterate priterate218,6459
(defun rem-beg rem-beg222,6520
(defun greatdate greatdate229,6769
(defun rem-do rem-do242,7102
(defun write-date write-date247,7269
(defun rem-end rem-end253,7505
(defun quitrep quitrep258,7660
(defreport quitrepquitrep261,7735
(defreport exer-tableexer-table264,7781
(defun exertable-beg exertable-beg278,8192
(defun exertable-do exertable-do283,8329
(defun bin-sort bin-sort292,8684
(defun cumadd cumadd295,8749
(defun binpt-sort binpt-sort314,9340
(defun tab-and-print tab-and-print321,9507
(defun get-corr get-corr331,9782
(defun make-table make-table340,10136
(defun exertable-end exertable-end384,11663
(defreport securitysecurity397,11998
(defun secure-beg secure-beg411,12392
(defun secure-do secure-do418,12543
(defun secure-end secure-end426,12847

report-stats.lisp,979
(deffile report-statsreport-stats13,610
(defreport command-tablecommand-table20,744
(defun ctable-begin ctable-begin35,1155
(defun ctable-do ctable-do42,1367
(defun ctable-end ctable-end58,2014
(defun print-usage-detail print-usage-detail97,3373
(defun print-usage-summary print-usage-summary126,4623
(defreport input-error-tableinput-error-table151,5535
(defun ierror-begin ierror-begin166,5943
(defun ierror-do ierror-do173,6157
(defun ierror-end ierror-end187,6698
(defun print-ierrors print-ierrors202,7198
(defun throw-code throw-code228,7924
(defun find-code find-code233,8114
(defun string-code string-code244,8396
(defun assoc-enter assoc-enter250,8579
(defreport rule-error-tablerule-error-table261,8797
(defun rerrtable-begin rerrtable-begin276,9231
(defun rerrtable-do rerrtable-do284,9490
(defun rerrtable-end rerrtable-end302,10209
(defun print-rerror-detail print-rerror-detail316,10711
(defun msg-code msg-code331,11178

review.lisp,2976
(deffile reviewreview19,672
(deftoplevel review-topreview-top26,810
(defmexpr reviewreview35,1090
(defcategory reviewcmdreviewcmd39,1208
(defflag suppress-flagssuppress-flags63,1802
(defflag suppress-flags-listsuppress-flags-list71,2053
(defvar *suppressed-count* *suppressed-count*78,2290
(defun suppressed-p suppressed-p80,2321
(defun suppressed-message suppressed-message85,2487
(defun describe-mode describe-mode89,2675
(defun describe-modes-gwffs describe-modes-gwffs98,3090
(defreview compare-modescompare-modes106,3362
(defun compare-modes compare-modes112,3536
(defun tpsflag-p tpsflag-p145,5117
(defvar review-command-ctree review-command-ctree150,5252
(defun review review152,5287
(defun reviewtop reviewtop156,5377
(defun review-top-prompt review-top-prompt170,5772
(defun review-print-* review-print-*172,5828
(defun review-command-interpreter review-command-interpreter174,5889
(defreview subjectssubjects213,7227
(defun subjects subjects220,7472
(defreview listlist231,7745
(defun list-subjects list-subjects237,7914
(defun list-flags list-flags243,8080
(defun list-flag list-flag258,8501
(defreview updateupdate263,8627
(defun update update269,8805
(defun subject-flags subject-flags274,8928
(defun relevant-flags relevant-flags286,9295
(defun flag-irrelevant flag-irrelevant292,9451
(defun reachably-irrelevant reachably-irrelevant297,9565
(defun build-relevance-graph build-relevance-graph311,10108
(defun build-irrelevance-graph build-irrelevance-graph325,10515
(defreview update-relevantupdate-relevant342,11040
(defun update-relevant update-relevant361,11767
(defun update-relevant-rec update-relevant-rec393,13027
(defflag suppress-irrelevance-warningssuppress-irrelevance-warnings404,13461
(defun update-flags update-flags411,13718
(defun update-flag update-flag417,13910
(defutil update-flagupdate-flag459,15744
(defreview setflagsetflag470,16178
(defreview setset476,16318
(defreview setflags1setflags1482,16462
(defun setflags1 setflags1491,16825
(defreview setflags2setflags2495,16908
(defun com2 com2507,17438
(defreview keykey532,18445
(defun review-keys review-keys544,19019
(defun tacktogether tacktogether563,19903
(defreview describe*describe*567,20015
(defun list-subjects* list-subjects*573,20203
(defun list-flags* list-flags*579,20371
(defreview describedescribe596,20881
(defun describe-flag describe-flag602,21026
(defreview changed-flagschanged-flags611,21427
(defun changed-flags changed-flags619,21715
(defreview modemode637,22406
(defreview copy-modecopy-mode642,22521
(defun copy-mode copy-mode649,22751
(defreview add-flag-to-modeadd-flag-to-mode667,23381
(defun add-flag-to-mode add-flag-to-mode675,23671
(defreview remove-flag-from-moderemove-flag-from-mode685,24128
(defun remove-flag-from-mode remove-flag-from-mode692,24361
(defreview leaveleave703,24702
(defun exit-review exit-review707,24803

review-menus.lisp,1084
(deffile review-menusreview-menus19,681
(defmenuitem REVIEW0REVIEW026,822
(defmenu REVIEWREVIEW35,969
(defmenuitem CHANGED-FLAGSCHANGED-FLAGS41,1064
(defmenuitem DESCRIBEDESCRIBE49,1212
(defmenuitem DESCRIBE*DESCRIBE*57,1345
(defmenuitem KEY2KEY265,1481
(defmenuitem LISTLIST73,1600
(defmenuitem SETSET81,1721
(defmenuitem SETFLAGSETFLAG89,1839
(defmenuitem SETFLAGS1SETFLAGS197,1969
(defmenuitem SETFLAGS2SETFLAGS2105,2105
(defmenuitem SUBJECTSSUBJECTS113,2242
(defmenuitem UPDATEUPDATE121,2376
(defmenuitem UPDATE-RELEVANTUPDATE-RELEVANT129,2504
(defmenu REVIEW-UNIFICATIONREVIEW-UNIFICATION137,2659
(defmenuitem UNIF-DEPTHSUNIF-DEPTHS143,2775
(defmenuitem UNIF-NODEPTHSUNIF-NODEPTHS150,2918
(defmenuitem LEAVE6LEAVE6157,3067
(defmenu MODESMODES165,3194
(defmenuitem FIND-MODEFIND-MODE171,3287
(defmenuitem ADD-FLAG-TO-MODEADD-FLAG-TO-MODE178,3411
(defmenuitem COMPARE-MODESCOMPARE-MODES186,3567
(defmenuitem COPY-MODECOPY-MODE194,3714
(defmenuitem MODEMODE202,3849
(defmenuitem REMOVE-FLAG-FROM-MODEREMOVE-FLAG-FROM-MODE210,3969

rigid.lisp,127
(defun simpl-term-binder simpl-term-binder22,822
(defun rigid-path-p rigid-path-p31,1158
(defun ho-simpl ho-simpl42,1496

rule-bb.lisp,132
(deffile rule-bbrule-bb22,785
(defun build-rule-build build-rule-build28,972
(defun build-rule-enter build-rule-enter111,4275

rule-build-check.lisp,220
(deffile rule-build-checkrule-build-check23,798
(defun build-rule-check build-rule-check29,981
(defun build-rule-hyp-checks build-rule-hyp-checks46,1589
(defun build-rule-wff-checks build-rule-wff-checks197,6707

rule-build-default.lisp,174
(deffile rule-build-defaultrule-build-default23,774
(defun build-rule-defaults build-rule-defaults29,934
(defun build-rule-hyp-defaults build-rule-hyp-defaults114,4374

rule-build.lisp,508
(deffile rule-buildrule-build22,753
(defun build-arglist build-arglist33,1070
(defun meta-ize meta-ize197,8113
(defun meta-ize-justifications meta-ize-justifications204,8256
(defun gen-hypargname gen-hypargname229,9103
(defun meta-ize-just meta-ize-just234,9254
(defun generate-arg-name generate-arg-name241,9481
(defun find-line-helps find-line-helps251,9796
(defun find-wff-helps find-wff-helps260,10078
(defun find-hyphelps find-hyphelps272,10430
(defun nil-const nil-const284,10843

rule-build-match.lisp,99
(deffile rule-build-matchrule-build-match23,769
(defun build-rule-match build-rule-match29,923

rule-build-tac.lisp,149
(deffile rule-build-tacrule-build-tac23,768
(defun build-rule-match1 build-rule-match193,3406
(defun build-rule-short build-rule-short162,5926

rule-cmds.lisp,639
(deffile rule-cmdsrule-cmds13,607
(defmexpr assemble-modassemble-mod21,789
(defun assemble-mod assemble-mod31,1126
(defmexpr buildbuild37,1337
(defun build build43,1499
(defun write-rule-file write-rule-file58,1854
(defun write-rule-cmd write-rule-cmd65,2048
(defun write-rule-match write-rule-match92,3067
(defun write-rule-wffs write-rule-wffs103,3569
(defmacro write-rule-fn write-rule-fn126,4519
(defun write-rule-fns write-rule-fns130,4617
(defmexpr assemble-fileassemble-file163,5857
(defun assemble-file assemble-file175,6326
(defmexpr write-rulewrite-rule234,8837
(defun write-rule write-rule252,9350

rule-idef.lisp,74
(deffile rule-idefrule-idef22,773
(defcategory iruledefiruledef28,935

rulep-edops.lisp,184
(deffile rulep-edopsrulep-edops13,610
(defwffop valid-pvalid-p20,757
(defedop validvalid27,928
(defwffop sat-psat-p33,1087
(defedop satsat40,1262
(defun sat-p sat-p47,1433

rulep-mac.lisp,76
(deffile rulep-macrulep-mac13,610
(defflag rulep-wffeqrulep-wffeq20,743

rule-wffop.lisp,78
(deffile rule-wffoprule-wffop23,750
(defflag build-matchbuild-match30,912

sail.lisp,194
(deffile sailsail22,731
(defstyle sailsail34,1015
(defun pp-symbol-sail pp-symbol-sail47,1409
(defun pp-space-p-sail pp-space-p-sail58,1709
(defvar sailcharacterssailcharacters62,1814

saveproof.lisp,1701
(deffile saveproofsaveproof18,691
(defun prompt-prfname prompt-prfname25,926
(defmacro defsavedproof defsavedproof45,1616
(defun restoreproof-gwff restoreproof-gwff145,5927
(defun write-saved-proof write-saved-proof162,6382
(defun write-saved-proof-defs write-saved-proof-defs262,9837
(defun sort-abbrlist sort-abbrlist308,12059
(defun depends-abbrlist depends-abbrlist313,12271
(defun find-indep find-indep319,12583
(defun find-indep1 find-indep1324,12704
(defun find-indep2 find-indep2330,12919
(defun abbr-depends abbr-depends336,13118
(defun full-abbr-sort full-abbr-sort342,13241
(defun easy-code-list easy-code-list354,13755
(defmexpr saveproofsaveproof371,14147
(defmexpr save-subproofsave-subproof387,14681
(defmexpr create-subproofcreate-subproof412,15711
(defmexpr restoreproofrestoreproof422,16059
(defmexpr findprooffindproof442,16841
(defun saveproof saveproof450,17098
(defun findproof findproof464,17555
(defun findproof-real findproof-real467,17652
(defun restoreproof restoreproof497,18885
(defun restoreproof-real restoreproof-real500,18972
(defun create-subproof create-subproof521,19648
(defun save-subproof save-subproof531,19944
(defun write-saved-subproof write-saved-subproof540,20232
(defun add-justifications add-justifications578,21729
(defun add-hypotheses add-hypotheses585,22091
(defmexpr proof-commentproof-comment593,22435
(defun proof-comment proof-comment605,22929
(defmexpr merge-proofsmerge-proofs608,23017
(defmexpr transfer-linestransfer-lines623,23741
(defun merge-proofs-2 merge-proofs-2643,24727
(defun merge-proofs merge-proofs656,25145
(defun merge-prooflines merge-prooflines683,26285

save-work.lisp,1544
(deffile save-worksave-work22,751
(defvar *executing* *executing*29,902
(defvar pause-quietly pause-quietly30,927
(defflag save-intervalsave-interval32,955
(defmexpr save-worksave-work38,1095
(defvar last-restored-file last-restored-file57,1753
(defvar save-work-output-stream save-work-output-stream58,1785
(defvar *standard-input*-save *standard-input*-save60,1823
(defvar restore-work-echo-stream restore-work-echo-stream62,1859
(defun open-save-file open-save-file65,1899
(defmexpr stop-savestop-save91,2916
(defun stop-save stop-save95,3011
(defmexpr finish-savefinish-save107,3376
(defun finish-save finish-save116,3719
(defmexpr execute-fileexecute-file127,4078
(defun restore-work restore-work157,5417
(defmexpr restore-workrestore-work209,7754
(defun applicable-p-restore-work applicable-p-restore-work228,8468
(defun continue-save-after-restore continue-save-after-restore234,8732
(defmexpr resume-saveresume-save248,9279
(defun applicable-p-resume-save applicable-p-resume-save264,10069
(defun resume-save resume-save273,10497
(defun save-command save-command287,10938
(defmexpr scriptscript290,11022
(defmexpr unscriptunscript311,12000
(defun script script316,12108
(defun unscript unscript342,13194
(defmexpr save-flags-and-worksave-flags-and-work353,13569
(defun output-all-flags output-all-flags370,14003
(defun step-comdecode step-comdecode394,14950
(defmexpr pausepause405,15275
(defun pause pause413,15682
(defun interpret-step-top interpret-step-top422,15906

scrdoc.lisp,2067
(deffile scrdocscrdoc22,760
(defmexpr scribe-docscribe-doc29,900
(defun scribe-cats-mexpr scribe-cats-mexpr40,1316
(defmexpr quick-refquick-ref43,1435
(defvar global-srulelist)global-srulelist53,1799
(defun quick-ref-mexpr quick-ref-mexpr55,1826
(defun quick-ref quick-ref58,1887
(defmacro msgt msgt79,2781
(defmacro msgi msgi82,2831
(defun scribe-cats scribe-cats85,2881
(defun scribe-cat scribe-cat98,3569
(defun scribe-context scribe-context112,3950
(defun scribe-cat-short scribe-cat-short133,4798
(defun next-context next-context148,5469
(defun scribe-cat-long scribe-cat-long151,5567
(defun index-item index-item179,6698
(defun scribe-doc-item scribe-doc-item188,6951
(defun scribe-doc-subject scribe-doc-subject205,7672
(defun scribe-doc-toplevel scribe-doc-toplevel226,8342
(defun scribe-doc-command scribe-doc-command240,8878
(defun scribe-doc-flag scribe-doc-flag253,9202
(defun scribe-doc-mode scribe-doc-mode265,9628
(defun scribe-doc-log scribe-doc-log276,9992
(defun scribe-doc-repsym scribe-doc-repsym298,10557
(defun scribe-doc-char scribe-doc-char308,10757
(defun scribe-doc-file scribe-doc-file318,10997
(defun scribe-doc-feature scribe-doc-feature325,11234
(defun scribe-feat-list scribe-feat-list334,11485
(defun scribe-doc-other scribe-doc-other343,11771
(defun scribe-doc-rule scribe-doc-rule349,11914
(defun scribe-doc-theorem scribe-doc-theorem361,12327
(defmexpr help-listhelp-list383,13105
(defun mhelp-list mhelp-list397,13623
(defmexpr chardocchardoc423,14585
(defun chardoc chardoc451,15710
(defun chardoc-styles chardoc-styles460,16073
(defconstant charheading-scribe charheading-scribe466,16309
(defmacro tex-char tex-char511,17077
(defun tex-writeout tex-writeout526,17750
(defun texchardoc texchardoc531,17851
(defun texchardoc-styles texchardoc-styles535,17991
(defun scribechardoc-styles scribechardoc-styles590,20091
(defun stringparse stringparse649,22279
(defun list2string list2string653,22421
(defun string-nthcdr string-nthcdr656,22530

scribe.lisp,860
(deffile scribescribe20,728
(defstyle scribescribe27,862
(defun pp-symbol-scribe pp-symbol-scribe47,1545
(defun pp-scribe-special-symbol pp-scribe-special-symbol55,1781
(defun pp-space-p-scribe pp-space-p-scribe64,1987
(defun pp-space-p-scribe-compressed pp-space-p-scribe-compressed72,2306
(defun terpri-heuristics-scribe terpri-heuristics-scribe77,2525
(defun pp-typesym-scribe pp-typesym-scribe81,2666
(defun indent-scribe indent-scribe86,2752
(defun nextpar-scribe nextpar-scribe89,2804
(defun margin-scribe margin-scribe91,2848
(defun display-prefix-scribe display-prefix-scribe93,2893
(defun display-postfix-scribe display-postfix-scribe97,3025
(defun begin-env-scribe begin-env-scribe101,3128
(defun end-env-scribe end-env-scribe104,3189
(defcategory scribe-charscribe-char107,3246
(defun tab-scribe tab-scribe115,3441

serv.lisp,2495
(defvar serv*error serv*error77,4224
(defvar serv*signal-errors serv*signal-errors78,4296
(defvar serv*signal-service-errors serv*signal-service-errors79,4338
(defvar serv*default-timeout-available serv*default-timeout-available81,4379
(defvar serv*default-timeout-enter serv*default-timeout-enter82,4423
(defvar serv*default-timeout-apply serv*default-timeout-apply83,4467
(defvar serv*default-timeout-leave serv*default-timeout-leave84,4511
(defun serv~default-timeout-available serv~default-timeout-available86,4556
(defun serv~default-timeout-enter serv~default-timeout-enter87,4629
(defun serv~default-timeout-apply serv~default-timeout-apply88,4698
(defun serv~default-timeout-leave serv~default-timeout-leave89,4767
(defun serv~set-default-timeout-available serv~set-default-timeout-available91,4837
(defun serv~set-default-timeout-enter serv~set-default-timeout-enter93,4938
(defun serv~set-default-timeout-apply serv~set-default-timeout-apply95,5031
(defun serv-set-default-timeout-leave serv-set-default-timeout-leave97,5124
(defun serv~error-number serv~error-number105,5440
(defun serv~error-message serv~error-message114,5764
(defun serv~last-sent serv~last-sent124,6136
(defun serv~ok? serv~ok?135,6578
(defun serv~error? serv~error?143,6828
(defun serv~interface-error? serv~interface-error?151,7092
(defun serv~service-error? serv~service-error?160,7393
(defun serv~service-error-number serv~service-error-number169,7690
(defun serv~signal-errors-on serv~signal-errors-on177,7945
(defun serv~signal-errors-off serv~signal-errors-off186,8193
(defun serv~signal-service-errors-on serv~signal-service-errors-on196,8507
(defun serv~signal-service-errors-off serv~signal-service-errors-off205,8779
(defun serv=signal-error serv=signal-error214,9056
(defun serv=signal-service-error serv=signal-service-error225,9490
(defun serv=operation serv=operation240,10171
(defun serv=mkopt-at-url serv=mkopt-at-url265,11312
(defun serv=mkopt-timeout serv=mkopt-timeout269,11411
(defun serv~available serv~available277,11750
(defun serv~enter serv~enter305,12902
(defun serv~leave serv~leave338,14286
(defun serv~restart serv~restart368,15506
(defun serv~leave-all serv~leave-all389,16596
(defun serv~apply serv~apply415,17673
(defun serv~debug-on serv~debug-on456,19591
(defun serv~debug-off serv~debug-off479,20500
(defun serv~browse-on serv~browse-on502,21414
(defun serv~browse-off serv~browse-off526,22416

socket.lisp,2707
(ff:defforeign 'perror perror78,3819
(ff:defforeign 'usocket)usocket79,3864
(ff:defforeign 'ubind ubind80,3889
(ff:defforeign 'uaccept uaccept81,3934
(ff:defforeign 'uclose uclose82,3981
(ff:defforeign 'uconnect uconnect83,4027
(ff:defforeign 'uread uread84,4082
(ff:defforeign 'ureadwait ureadwait85,4164
(ff:defforeign 'uwrite uwrite86,4250
(ff:defforeign 'ugetpeername ugetpeername87,4303
(defvar socket*sockets socket*sockets97,4732
(defvar socket*sockets socket*sockets100,4859
(defmacro socket=sockets socket=sockets103,5002
(defmacro socket=sockets socket=sockets115,5234
(DEFMACRO MAPCF MAPCF124,5477
(defun socket~reset socket~reset139,6121
(defun socket~reset socket~reset156,6629
(defun socket~find-socket socket~find-socket170,7078
(defun socket~define socket~define195,7930
(defun socket~define socket~define220,8821
(defun socket~delete socket~delete240,9545
(defun socket~delete socket~delete266,10363
(defun socket~active? socket~active?292,11101
(defun socket~active? socket~active?317,12085
(defun socket~receives? socket~receives?331,12715
(defun socket~receives? socket~receives?354,13630
(defun socket~fd socket~fd364,14073
(defun socket~fd socket~fd375,14356
(defun socket~connect socket~connect392,14927
(defun socket~connect socket~connect415,15792
(defun socket~close socket~close441,16690
(defun socket~close socket~close469,17570
(defvar socket*end-of-string socket*end-of-string499,18553
(defmacro socket=end-of-string socket=end-of-string510,18795
(defun socket=readloop socket=readloop522,19049
(defun socket=readloop socket=readloop564,21355
(defun socket~read socket~read592,22700
(defun socket~read socket~read613,23529
(defun socket~write socket~write633,24368
(defun socket~write socket~write660,25285
(defun socket~write-file socket~write-file687,26222
(defgeneric socket~start-server socket~start-server719,27341
(defun socket~bind socket~bind736,27977
(defun socket~bind socket~bind764,28945
(defun socket~accept socket~accept793,29975
(defun socket~accept socket~accept821,31016
(defun socket=readuntil socket=readuntil858,32290
(defun socket~read-line socket~read-line907,34631
(defun socket~read-line socket~read-line926,35405
(defun socket~read-content socket~read-content945,36159
(defun socket~read-content socket~read-content964,36955
(defun socket~get-peername socket~get-peername985,37798
(defun socket~get-peername socket~get-peername1001,38440
(defun socket~bind-new-port socket~bind-new-port1058,40186
(defun socket~bind-new-port socket~bind-new-port1062,40339
(defun socket~port socket~port1067,40511
(defun socket~port socket~port1071,40653

styles.lisp,538
(deffile stylesstyles20,734
(defstyle generic-stringgeneric-string28,939
(defun doublequotes doublequotes43,1435
(defun terpri-doublequotes terpri-doublequotes45,1487
(defun doublequotes-terpri doublequotes-terpri47,1559
(defun pp-symbol-generic pp-symbol-generic49,1630
(defun pp-space-p-generic pp-space-p-generic56,1781
(defun terpri-heuristics-generic terpri-heuristics-generic59,1850
(defun pp-typesym-generic pp-typesym-generic66,2074
(defun indent-generic indent-generic71,2155
(defmode re-readre-read76,2272

subjects-auto.lisp,725
(deffile subjects-autosubjects-auto14,607
(defsubject etreesetrees19,732
(defsubject etr-natetr-nat23,826
(defsubject jformsjforms28,964
(defsubject ms88ms8832,1046
(defsubject ms89ms8936,1144
(defsubject mating-searchmating-search40,1251
(defsubject importantimportant42,1322
(defsubject ms90-3ms90-346,1435
(defsubject ms90-9ms90-950,1539
(defsubject ms91-6ms91-654,1641
(defsubject ms91-7ms91-756,1727
(defsubject ms92-9ms92-960,1831
(defsubject ms93-1ms93-164,1935
(defsubject mtree-topmtree-top68,2042
(defsubject mtreemtree70,2138
(defsubject UnificationUnification74,2222
(defsubject primsubsprimsubs78,2317
(defsubject tacticstactics82,2421
(defsubject test-toptest-top86,2504

subjects-core.lisp,557
(deffile subjects-coresubjects-core14,607
(defsubject editoreditor19,729
(defsubject eventsevents23,833
(defsubject internal-namesinternal-names27,908
(defsubject librarylibrary31,1015
(defsubject outlineoutline35,1098
(defsubject suggestssuggests39,1201
(defsubject otl-varsotl-vars43,1283
(defsubject saving-worksaving-work47,1391
(defsubject parsingparsing51,1484
(defsubject printingprinting55,1561
(defsubject printing-texprinting-tex58,1617
(defsubject window-propswindow-props61,1685
(defsubject wff-primswff-prims65,1812

subjects-maint.lisp,155
(deffile subjects-maintsubjects-maint14,608
(defsubject maintainmaintain19,735
(defsubject systemsystem21,805
(defsubject rules-modrules-mod25,896

subjects-teacher.lisp,130
(deffile subjects-teachersubjects-teacher14,610
(defsubject gr-filenamesgr-filenames19,738
(defsubject gr-miscgr-misc22,812

symsimp2.lisp,910
(deffile symsimp2symsimp214,608
(defun single-mating-change single-mating-change19,725
(defun choose-path-closer choose-path-closer155,5793
(defun sort-possible-pairs sort-possible-pairs179,6539
(defun make-etree* make-etree*204,7463
(defun contains-empty-disj contains-empty-disj220,8149
(defun find-connections-closing find-connections-closing225,8287
(defun contains-elt-in contains-elt-in232,8567
(defun separation-preserving-pairs separation-preserving-pairs237,8703
(defun complementary-jform complementary-jform259,9482
(defun is-below is-below272,9931
(defun sym-find-cheapest-path sym-find-cheapest-path277,10092
(defun sym-find-alt-path sym-find-alt-path292,10646
(defun sym-complete-alt-path-and sym-complete-alt-path-and311,11318
(defun sym-complete-alt-path-or sym-complete-alt-path-or320,11613
(defun sym-find-shortest-alt-path sym-find-shortest-alt-path329,11858

symsimp.lisp,1608
(deffile symsimpsymsimp13,607
(defun single-instantiation-eligible-p single-instantiation-eligible-p21,820
(defun mated-p* mated-p*30,1195
(defun admissible-p* admissible-p*40,1509
(defun single-instantiation-aux single-instantiation-aux55,1898
(defun single-instantiation single-instantiation84,3240
(defun single-deletion single-deletion177,6735
(defun has-mated-descendant has-mated-descendant247,9164
(defun single-deletion-aux single-deletion-aux254,9310
(defun carry-out-deletion* carry-out-deletion*273,10064
(defun carry-out-deletion-junction carry-out-deletion-junction299,10982
(defun carry-out-deletion-quantifier carry-out-deletion-quantifier340,12818
(defun carry-out-deletion-leaf carry-out-deletion-leaf378,14426
(defun carry-out-deletion-negation carry-out-deletion-negation384,14698
(defun carry-out-deletion-implication carry-out-deletion-implication396,15188
(defun carry-out-deletion-rewrite carry-out-deletion-rewrite438,17126
(defun adjust-shallow-wff adjust-shallow-wff536,21524
(defun adjust-rewrite-wff adjust-rewrite-wff547,21865
(defun adjust-quantifier-wff adjust-quantifier-wff630,25124
(defun conjunct-node-p conjunct-node-p677,26521
(defun minimize-conn-list minimize-conn-list686,26854
(defun minimize-conn-list* minimize-conn-list*700,27257
(defun print-stuff print-stuff725,27957
(defun symmetric-simplification symmetric-simplification736,28159
(defun new-restrict-mating-to new-restrict-mating-to761,29196
(defun make-nice-lemma make-nice-lemma776,29773
(defun remove-double-negations remove-double-negations781,29926

tacticals.lisp,1143
(deffile tacticalstacticals14,625
(deftactical callcall19,725
(defun call-tactical-fn call-tactical-fn25,937
(deftactical orelseorelse34,1229
(defun orelse-tactical-fn orelse-tactical-fn38,1362
(deftactical idtacidtac52,1830
(defun idtac-tactical-fn idtac-tactical-fn57,1952
(deftactical failtacfailtac61,2104
(defun failtac-tactical-fn failtac-tactical-fn65,2225
(deftactical repeatrepeat70,2378
(defun repeat-tactical-fn repeat-tactical-fn75,2541
(deftactical thenthen101,3518
(defun then-tactical-fn then-tactical-fn108,3859
(deftactical then*then*167,5686
(deftactical then**then**177,6171
(defun then**-tactical-fn then**-tactical-fn185,6579
(deftactical ifthenifthen216,7718
(defun ifthen-tactical-fn ifthen-tactical-fn226,8279
(deftactical sequencesequence270,9498
(defun sequence-tactical-fn sequence-tactical-fn275,9673
(deftactical trytry295,10376
(deftactical composecompose303,10660
(defun compose-tactical-fn compose-tactical-fn308,10845
(deftactical no-goalno-goal316,11073
(defun no-goal-tactical-fn no-goal-tactical-fn320,11202
(defflag default-tacticdefault-tactic326,11437

tacticals-macros.lisp,137
(deffile tacticals-macrostacticals-macros13,624
(defun make-validation make-validation18,732
(defun rotate-vars rotate-vars38,1510

tactics-aux.lisp,589
(deffile tactics-auxtactics-aux13,607
(deftactic finished-pfinished-p20,723
(deftactic make-nicemake-nice33,1089
(defvar *lines-were-moved* *lines-were-moved*38,1214
(deftactic make-roommake-room40,1247
(defun make-room-after make-room-after59,1855
(defun make-room-before make-room-before81,2572
(deftactic show-plansshow-plans116,3820
(deftactic show-current-planshow-current-plan134,4348
(defflag use-rulepuse-rulep144,4650
(deftactic use-rulep-tacuse-rulep-tac152,4939
(defflag use-symsimpuse-symsimp166,5390
(deftactic use-symsimp-tacuse-symsimp-tac176,5776

tactics-macros.lisp,2471
(deffile tactics-macrostactics-macros14,625
(defvar *tactic-use-list* *tactic-use-list*20,787
(defvar *tactic-mode-list* *tactic-mode-list*24,887
(defvar *global-tacticlist*)*global-tacticlist*26,937
(defmacro deftactic deftactic42,1392
(defvar *global-tacticallist*)*global-tacticallist*63,2046
(defcategory tacticaltactical64,2077
(defun read-tactical-defn read-tactical-defn73,2275
(defflag tactic-verbosetactic-verbose80,2511
(defun tactic-output tactic-output90,2820
(defun tactic-use-p tactic-use-p97,2985
(defun tactic-mode-p tactic-mode-p102,3075
(defflag tacmode tacmode107,3167
(definfo autoauto114,3303
(definfo interactiveinteractive118,3418
(definfo nat-dednat-ded123,3567
(definfo etree-natetree-nat128,3718
(definfo mate-srchmate-srch133,3907
(defflag tacusetacuse138,4070
(defun prim-tac-p prim-tac-p145,4197
(defun compound-tac-p compound-tac-p149,4323
(defun prim-tacl-p prim-tacl-p152,4420
(defun compound-tacl-p compound-tacl-p155,4475
(defun get-tac-goal get-tac-goal159,4572
(defun get-tac-defn get-tac-defn165,4806
(defun get-tacl-defn get-tacl-defn168,4868
(defun sort-tac-goals sort-tac-goals171,4925
(defun tactic-p tactic-p182,5233
(defun tactical-p tactical-p190,5471
(defun expand-tacl-defn expand-tacl-defn194,5546
(defun apply-tactic apply-tactic200,5698
(defun apply-tactical apply-tactical252,7294
(defmexpr use-tacticuse-tactic268,7720
(defun use-tactic use-tactic283,8277
(defmexpr echoecho288,8420
(defun echo echo299,8695
(defun save-object save-object302,8727
(defun save-proof save-proof311,8860
(defun save-eproof save-eproof315,8922
(defun copy-object copy-object318,8957
(defun copy-exp-proof copy-exp-proof324,9164
(defun copy-proof copy-proof333,9374
(defun restore-object restore-object351,10176
(defun restore-proof restore-proof356,10279
(defun update-object update-object360,10369
(defun update-proof update-proof365,10468
(defun get-new-goal get-new-goal383,11206
(defun get-new-proof-goal get-new-proof-goal387,11325
(defun update-goals update-goals390,11413
(defun update-proof-goals update-proof-goals394,11534
(defun still-goal still-goal399,11699
(defun still-proof-goal still-proof-goal403,11792
(defun tactic-mhelp tactic-mhelp406,11840
(defun tactic-mhelp-expand tactic-mhelp-expand425,12640
(defun single-tactic-expand single-tactic-expand431,12812
(defun scribe-one-tactic scribe-one-tactic440,13195

test-macros.lisp,2439
(deffile test-macrostest-macros12,589
(defvar *suggest-list*)*suggest-list*19,733
(defvar *test-gwff* *test-gwff*20,757
(defvar *test-gwff-name* *test-gwff-name*21,782
(defvar *test-mode-name* *test-mode-name*22,812
(defvar *times-around* *times-around*23,842
(defvar *current-bfs-depth* *current-bfs-depth*24,924
(defvar *press-down-fixed* *press-down-fixed*25,955
(defvar *press-down-changed* *press-down-changed*26,987
(defvar *press-down-last-succeeded* *press-down-last-succeeded*27,1021
(defvar *testwin-opened* *testwin-opened*28,1060
(defvar *current-testname* *current-testname*29,1090
(defvar *testwin-process* *testwin-process*30,1122
(defvar *big-testwin* *big-testwin*31,1153
(defstruct (search-item search-item33,1181
(defun print-search-item print-search-item42,1559
(defstruct (searchlist searchlist48,1860
(defun print-searchlist print-searchlist54,1965
(defvar *global-searchlist* *global-searchlist*59,2159
(defvar current-sl current-sl60,2192
(defvar current-sl-name current-sl-name61,2216
(defvar *stupid-flag-list* *stupid-flag-list*62,2298
(defvar *dangerous-flag-list* *dangerous-flag-list*96,5193
(defvar *finished-flag* *finished-flag*101,5606
(defflag test-max-search-valuestest-max-search-values103,5636
(defflag test-easier-if-niltest-easier-if-nil112,5931
(defflag test-faster-if-niltest-faster-if-nil122,6338
(defflag test-easier-if-ttest-easier-if-t132,6722
(defflag test-faster-if-ttest-faster-if-t142,7162
(defflag test-easier-if-hightest-easier-if-high152,7566
(defflag test-faster-if-hightest-faster-if-high162,8073
(defflag test-easier-if-lowtest-easier-if-low172,8480
(defflag test-faster-if-lowtest-faster-if-low182,8910
(defflag test-next-search-fntest-next-search-fn192,9387
(definfo exhaustive-searchexhaustive-search216,10682
(definfo breadth-first-searchbreadth-first-search221,10879
(definfo press-downpress-down226,11109
(definfo press-down-2press-down-2230,11237
(definfo push-uppush-up238,11635
(definfo push-up-2push-up-2242,11757
(defflag test-verbosetest-verbose248,11990
(defflag test-initial-time-limittest-initial-time-limit254,12145
(defflag test-reduce-timetest-reduce-time264,12560
(defflag test-increase-timetest-increase-time271,12786
(defflag test-fix-unif-depthstest-fix-unif-depths284,13321
(defflag testwin-widthtestwin-width294,13728
(defflag testwin-heighttestwin-height300,13885

test-top-lib.lisp,335
(deffile test-top-libtest-top-lib20,694
(defun test-fetch test-fetch25,835
(defun test-delete test-delete27,903
(defun test-insert test-insert29,965
(deflibobject slistslist38,1326
(defun libprint-slist libprint-slist44,1509
(defun lib-promptfn-slist lib-promptfn-slist52,1703
(defun get-lib-slist get-lib-slist57,1968

test-top-menus.lisp,1655
(deffile test-top-menustest-top-menus17,667
(defmenuitem TEST0TEST024,795
(defmenuitem UNIFORM-SEARCHUNIFORM-SEARCH32,927
(defmenuitem UNIFORM-SEARCH-LUNIFORM-SEARCH-L39,1073
(defmenu TESTTEST46,1225
(defmenuitem BREADTH-FIRST-SEARCHBREADTH-FIRST-SEARCH52,1314
(defmenuitem CLOSE-TESTWIN2CLOSE-TESTWIN259,1470
(defmenuitem CONTINUECONTINUE66,1606
(defmenuitem EXHAUSTIVE-SEARCHEXHAUSTIVE-SEARCH73,1726
(defmenuitem FIND-BEST-MODEFIND-BEST-MODE80,1873
(defmenuitem GO2345GO234587,2011
(defmenuitem OPEN-TESTWINOPEN-TESTWIN94,2117
(defmenuitem PRESS-DOWNPRESS-DOWN101,2249
(defmenuitem PRESS-DOWN-2PRESS-DOWN-2108,2375
(defmenuitem PUSH-UPPUSH-UP115,2508
(defmenuitem PUSH-UP-2PUSH-UP-2122,2626
(defmenuitem SEARCH-PLACEMENT2SEARCH-PLACEMENT2129,2750
(defmenuitem LEAVE7LEAVE7136,2896
(defmenu SEARCHLISTSSEARCHLISTS143,3010
(defmenuitem ADD-FLAGADD-FLAG149,3113
(defmenuitem ADD-FLAG*ADD-FLAG*156,3240
(defmenuitem ADD-FUNCTIONADD-FUNCTION163,3370
(defmenuitem ADD-SUBJECTSADD-SUBJECTS170,3509
(defmenuitem NEW-SEARCHLISTNEW-SEARCHLIST177,3648
(defmenuitem QUICK-DEFINEQUICK-DEFINE184,3793
(defmenuitem REM-FLAGREM-FLAG191,3932
(defmenuitem REM-FLAG*REM-FLAG*198,4059
(defmenuitem REVISE-DEFAULTSREVISE-DEFAULTS205,4189
(defmenuitem SCALE-DOWNSCALE-DOWN212,4338
(defmenuitem SCALE-UPSCALE-UP219,4472
(defmenuitem SEARCHLISTS2SEARCHLISTS2226,4600
(defmenuitem SHOW-SEARCHLISTSHOW-SEARCHLIST233,4738
(defmenuitem VARY-MODEVARY-MODE240,4887
(defmenu TEST-LIBTEST-LIB247,5018
(defmenuitem DELETE23DELETE23253,5115
(defmenuitem FETCH23FETCH23260,5235
(defmenuitem INSERT2INSERT2267,5352

test-top-search.lisp,3780
(deffile test-top-searchtest-top-search17,672
(defun memb memb24,818
(defun exhaustive-search exhaustive-search32,1053
(defun breadth-first-search breadth-first-search83,3883
(defun valid-list valid-list100,4631
(defun set-bfs-defaults set-bfs-defaults107,4814
(defun breadth-first-search-real breadth-first-search-real114,5075
(defun push-up push-up171,7743
(defun push-up-2 push-up-2179,8097
(defun press-down-2 press-down-2182,8170
(defun press-down press-down185,8249
(defun count-fixed-tokens count-fixed-tokens210,9454
(defun rewrite-fixed-list rewrite-fixed-list216,9593
(defun valid-press-down-list valid-press-down-list224,9891
(defun set-press-down-defaults set-press-down-defaults233,10168
(defun press-down-search-real press-down-search-real242,10514
(deftest search-ordersearch-order295,13079
(defun search-order search-order303,13387
(defun count-flagvals count-flagvals319,13929
(defun list-flagvals list-flagvals323,14079
(defun makelist-flagvals makelist-flagvals327,14221
(defun assert-defaults assert-defaults333,14427
(defun assert-current assert-current339,14667
(deftest gogo344,14899
(deftest exhaustive-searchexhaustive-search353,15263
(defun go-test-exhaustive-search go-test-exhaustive-search363,15725
(deftest breadth-first-searchbreadth-first-search367,15835
(defun go-test-breadth-first-search go-test-breadth-first-search377,16306
(deftest push-up-2push-up-2381,16422
(defun go-test-push-up-2 go-test-push-up-2394,16996
(deftest press-down-2press-down-2398,17090
(defun go-test-press-down-2 go-test-press-down-2411,17676
(deftest continuecontinue415,17776
(deftest press-downpress-down426,18260
(deftest push-uppush-up447,19301
(deftest find-best-modefind-best-mode468,20290
(defun go-test go-test493,21466
(defun press-down-go press-down-go503,21885
(defun push-up-go push-up-go511,22213
(defun find-best-go find-best-go517,22470
(defun go-test-b go-test-b524,22763
(defun successful-output successful-output528,22965
(defun least-search-depth-silent least-search-depth-silent531,23097
(defun test-search test-search538,23397
(defun find-flagvals find-flagvals666,29887
(defun test-ms88-controller test-ms88-controller681,30482
(defun test-ms90-3-controller test-ms90-3-controller689,30861
(defun test-auto-search-ms90-9 test-auto-search-ms90-9693,31045
(defun test-ms92-9-controller test-ms92-9-controller696,31104
(defun test-auto-search-ms93-1 test-auto-search-ms93-1700,31288
(defun test-auto-search-ms91-7 test-auto-search-ms91-7703,31347
(defun test-matingsearch-controller test-matingsearch-controller706,31406
(defun test-matingsearch-controller-real test-matingsearch-controller-real721,31982
(defun expand-etree-count expand-etree-count739,33075
(defun test-reread-func test-reread-func746,33354
(defun test-ms-top test-ms-top763,33978
(defun test-ms88-sub test-ms88-sub823,36464
(defun vpwin-test-update-one vpwin-test-update-one867,38268
(defun vpwin-test-update-two vpwin-test-update-two877,38660
(defun vpwin-test-update-three vpwin-test-update-three887,39100
(defun open-testwin-auto open-testwin-auto898,39612
(deftest open-testwinopen-testwin908,40055
(defun open-testwin open-testwin920,40622
(deftest close-testwinclose-testwin931,41175
(defmexpr close-testwinclose-testwin939,41394
(defun close-testwin close-testwin947,41642
(defun setup-testwin setup-testwin959,42147
(defun testwin-update-one testwin-update-one976,43011
(defun testwin-update-two testwin-update-two988,43472
(defun testwin-update-three testwin-update-three1004,44136
(defun uniform-search-function uniform-search-function1013,44531
(defun basic-search-then-uniform-search basic-search-then-uniform-search1037,46012

test-top-slists.lisp,2805
(deffile test-top-sliststest-top-slists17,672
(deftest add-functionadd-function24,832
(defun add-function add-function39,1610
(deftest show-searchlistshow-searchlist43,1755
(defun show-searchlist show-searchlist50,1993
(defun find-searchlist find-searchlist59,2353
(defun known-searchlist-p known-searchlist-p66,2510
(defun find-searchlist-string find-searchlist-string69,2601
(defun known-searchlist-string-p known-searchlist-string-p76,2811
(deftest new-searchlistnew-searchlist79,2932
(defun new-searchlist new-searchlist87,3210
(deftest quick-definequick-define98,3660
(defun quick-define quick-define118,4592
(defun press-down-quick press-down-quick161,6472
(defun push-up-quick push-up-quick181,7327
(defun fix-below fix-below201,8280
(defun nullor-option-> nullor-option->214,8875
(defun lower-value-list lower-value-list220,9017
(defun higher-value-list higher-value-list237,9874
(deftest vary-modevary-mode248,10360
(defun vary-mode vary-mode268,11306
(deftest searchlistssearchlists296,12516
(defun searchlists searchlists299,12604
(deftest add-flagadd-flag302,12693
(defun add-flag add-flag314,13143
(defun check-add-flag check-add-flag328,13662
(defun check-sensible check-sensible340,14351
(deftest rem-flagrem-flag352,14939
(defun rem-flag rem-flag360,15188
(defun edit-sl edit-sl367,15382
(defun stifle-flag stifle-flag375,15613
(defun edit-sl-2 edit-sl-2381,15792
(deftest add-flag*add-flag*390,16210
(deftest rem-flag*rem-flag*395,16333
(defun add-flag* add-flag*400,16457
(defun rem-flag* rem-flag*411,16816
(deftest add-subjectsadd-subjects422,17181
(defun add-subjects add-subjects428,17352
(defun add-subject add-subject434,17567
(deftest insertinsert452,18233
(deftest fetchfetch465,18703
(deftest deletedelete475,19126
(defun slist-to-list slist-to-list484,19455
(defun s-to-l s-to-l488,19589
(defun list-to-slist list-to-slist494,19853
(defun l-to-s l-to-s502,20054
(deftest scale-downscale-down513,20362
(deftest scale-upscale-up528,21211
(deftest revise-defaultsrevise-defaults543,22086
(defun revise-defaults revise-defaults559,22973
(defun sorta-copy-slist sorta-copy-slist563,23109
(defun initialise-scaling initialise-scaling579,23797
(defun scale-down scale-down589,24337
(defun downward-search downward-search615,25483
(defun downward-search-real downward-search-real619,25646
(defun scale-up scale-up636,26438
(defun upward-search upward-search662,27581
(defun upward-search-real upward-search-real666,27740
(defun remove-bigger remove-bigger684,28536
(defun remove-smaller remove-smaller687,28657
(defun sort-ascending sort-ascending690,28773
(defun sort-descending sort-descending697,29051
(defun type-lessthanequal type-lessthanequal705,29333

test-top-top.lisp,1388
(deffile test-top-toptest-top-top17,667
(deftoplevel test-toptest-top24,797
(defcategory testcmdtestcmd34,1099
(defun testcmd-mhelp testcmd-mhelp55,1642
(defun testtop testtop67,2055
(defun test-top-prompt test-top-prompt82,2442
(defun test-print-* test-print-*84,2499
(defun test-command-interpreter test-command-interpreter86,2558
(defun test-opdecode test-opdecode124,3775
(defmexpr uniform-searchuniform-search148,4582
(defun test-wff-unif test-wff-unif184,6458
(defun test-wff-unif-partial test-wff-unif-partial193,6701
(defmexpr testtest202,6961
(defun test-wff-prefix test-wff-prefix219,7676
(defun use-nd-proof use-nd-proof287,10619
(defun contains-equality-eventually contains-equality-eventually301,11156
(defun contains-equality-smart contains-equality-smart307,11387
(defun instantiate-1-notequiv instantiate-1-notequiv316,11699
(defun installeq installeq326,12005
(defun discard-if-useless discard-if-useless332,12210
(defun test-wff test-wff436,17459
(deftest leaveleave467,18526
(defun exit-testtop exit-testtop471,18633
(defun get-useful-range get-useful-range485,19111
(defmexpr uniform-search-luniform-search-l493,19347
(defun test-wff-unif-lemma test-wff-unif-lemma526,21165
(defun make-me-a-gwff make-me-a-gwff595,24070
(defun reduce-conjunc reduce-conjunc603,24405
(defun reinit-unif-l reinit-unif-l609,24588

texchr.lisp,10094
(deffile texchrtexchr22,719
(deftexfont ->I->I32,862
(deftexfont ->E->E35,901
(deftexfont aeae38,940
(deftexfont aiai41,979
(deftexfont alephaleph44,1018
(deftexfont alphaalpha47,1058
(deftexfont andand50,1098
(deftexfont andiandi53,1135
(deftexfont andnotandnot56,1173
(deftexfont angle angle59,1215
(deftexfont approxapprox62,1256
(deftexfont arrowarrow65,1298
(deftexfont assertassert68,1343
(deftexfont assertedbyassertedby71,1384
(deftexfont asteriskasterisk74,1429
(deftexfont barbar77,1470
(deftexfont betabeta80,1507
(deftexfont bigbarbigbar83,1545
(deftexfont boldabolda86,1587
(deftexfont boldbboldb89,1627
(deftexfont boldcboldc92,1667
(deftexfont bolddboldd95,1707
(deftexfont boldebolde98,1747
(deftexfont boldfboldf101,1787
(deftexfont boldgboldg104,1827
(deftexfont boldhboldh107,1867
(deftexfont boldiboldi110,1907
(deftexfont boldjboldj113,1947
(deftexfont boldkboldk116,1987
(deftexfont boldlboldl119,2027
(deftexfont boldmboldm122,2067
(deftexfont boldnboldn125,2107
(deftexfont boldoboldo128,2147
(deftexfont boldpboldp131,2187
(deftexfont boldqboldq134,2227
(deftexfont boldrboldr137,2267
(deftexfont boldsbolds140,2307
(deftexfont boldtboldt143,2347
(deftexfont bolduboldu146,2387
(deftexfont boldvboldv149,2427
(deftexfont boldwboldw152,2467
(deftexfont boldxboldx155,2507
(deftexfont boldyboldy158,2547
(deftexfont boldzboldz161,2587
(deftexfont botbot164,2627
(deftexfont bottombottom167,2664
(deftexfont capalphacapalpha172,2726
(deftexfont capbetacapbeta175,2769
(deftexfont capchicapchi178,2810
(deftexfont capdeltacapdelta181,2849
(deftexfont capepsiloncapepsilon184,2892
(deftexfont capetacapeta187,2939
(deftexfont capgammacapgamma190,2978
(deftexfont capiotacapiota193,3021
(deftexfont capkappacapkappa196,3062
(deftexfont caplambdacaplambda199,3105
(deftexfont capmucapmu202,3150
(deftexfont capnucapnu205,3187
(deftexfont capomegacapomega208,3224
(deftexfont capomicroncapomicron211,3267
(deftexfont capphicapphi214,3314
(deftexfont cappicappi217,3353
(deftexfont cappsicappsi220,3390
(deftexfont caprhocaprho223,3429
(deftexfont capsigmacapsigma226,3468
(deftexfont captaucaptau229,3511
(deftexfont capthetacaptheta232,3550
(deftexfont capupsiloncapupsilon235,3593
(deftexfont capxicapxi238,3640
(deftexfont capzetacapzeta241,3677
(deftexfont ceiling1ceiling1244,3718
(deftexfont ceiling2ceiling2247,3761
(deftexfont chichi250,3804
(deftexfont circledotcircledot253,3840
(deftexfont circleminuscircleminus256,3883
(deftexfont composecompose259,3930
(deftexfont condcond262,3971
(deftexfont contractioncontraction265,4009
(deftexfont cutcut268,4055
(deftexfont defndefn271,4091
(deftexfont deldel274,4129
(deftexfont deltadelta277,4169
(deftexfont diamonddiamond280,4209
(deftexfont directsumdirectsum283,4253
(deftexfont dividedivide286,4297
(deftexfont elbowelbow289,4336
(deftexfont eqp eqp292,4374
(deftexfont epsilonepsilon295,4412
(deftexfont equivequiv298,4456
(deftexfont etaeta301,4496
(deftexfont existsexists304,4532
(deftexfont existsiexistsi307,4574
(deftexfont existsnotexistsnot310,4618
(deftexfont falsehoodfalsehood313,4666
(deftexfont finitefinite316,4709
(deftexfont flatflat319,4751
(deftexfont floor1floor1322,4789
(deftexfont floor2floor2325,4832
(deftexfont forallforall328,4875
(deftexfont foralliforalli331,4917
(deftexfont forallnotforallnot334,4961
(deftexfont gammagamma337,5009
(deftexfont gradientgradient340,5049
(deftexfont greateqgreateq343,5092
(deftexfont iff1iff1346,5132
(deftexfont iff2iff2349,5180
(deftexfont imp1imp1352,5228
(deftexfont imp2imp2355,5272
(deftexfont implied1implied1358,5316
(deftexfont implied2implied2361,5363
(deftexfont impliedbyimpliedby364,5410
(deftexfont impliesimplies367,5455
(deftexfont infinityinfinity370,5498
(deftexfont integral2integral2373,5541
(deftexfont joinjoin376,5589
(deftexfont intersect intersect379,5630
(deftexfont iotaiota382,5673
(deftexfont kappakappa385,5711
(deftexfont lambdalambda388,5751
(deftexfont lesseqlesseq391,5793
(deftexfont meetmeet394,5832
(deftexfont member1member1397,5874
(deftexfont minplusminplus400,5913
(deftexfont mixmix403,5952
(deftexfont mumu406,5988
(deftexfont natnat409,6022
(deftexfont ncnc412,6058
(deftexfont negneg415,6092
(deftexfont nonmembernonmember418,6128
(deftexfont normnorm421,6174
(deftexfont northnorth424,6212
(deftexfont northeastnortheast427,6254
(deftexfont northwestnorthwest430,6300
(deftexfont notnot433,6346
(deftexfont notassertnotassert436,6382
(deftexfont noteqnoteq439,6431
(deftexfont notequivnotequiv442,6470
(deftexfont notnotnotnot445,6518
(deftexfont notvalidnotvalid448,6560
(deftexfont nunu451,6609
(deftexfont nullsetnullset454,6643
(deftexfont omegaomega457,6688
(deftexfont omicronomicron460,6728
(deftexfont oneone463,6772
(deftexfont oror466,6809
(deftexfont oriori469,6844
(deftexfont ornotornot472,6880
(deftexfont phiphi475,6920
(deftexfont phi2phi2478,6956
(deftexfont pipi481,6998
(deftexfont plusminplusmin484,7032
(deftexfont propersubsetpropersubset487,7071
(deftexfont propersupersetpropersuperset490,7119
(deftexfont powersetpowerset493,7169
(deftexfont psipsi496,7215
(deftexfont recursionrecursion499,7251
(deftexfont rhorho502,7299
(deftexfont scriptascripta507,7349
(deftexfont scriptbscriptb510,7393
(deftexfont scriptcscriptc513,7437
(deftexfont scriptdscriptd516,7481
(deftexfont scriptescripte519,7525
(deftexfont scriptfscriptf522,7569
(deftexfont scriptgscriptg525,7613
(deftexfont scripthscripth528,7657
(deftexfont scriptiscripti531,7701
(deftexfont scriptjscriptj534,7745
(deftexfont scriptkscriptk537,7789
(deftexfont scriptlscriptl540,7833
(deftexfont scriptmscriptm543,7877
(deftexfont scriptnscriptn546,7921
(deftexfont scriptoscripto549,7965
(deftexfont scriptpscriptp552,8009
(deftexfont scriptqscriptq555,8053
(deftexfont scriptrscriptr558,8097
(deftexfont scriptsscripts561,8141
(deftexfont scripttscriptt564,8185
(deftexfont scriptuscriptu567,8229
(deftexfont scriptvscriptv570,8273
(deftexfont scriptwscriptw573,8317
(deftexfont scriptxscriptx576,8361
(deftexfont scriptyscripty579,8405
(deftexfont scriptzscriptz582,8449
(deftexfont setintersect setintersect587,8508
(deftexfont setunionsetunion590,8557
(deftexfont sigmasigma593,8601
(deftexfont similarsimilar596,8641
(deftexfont southsouth599,8684
(deftexfont southeastsoutheast602,8728
(deftexfont southwestsouthwest605,8774
(deftexfont sqrtsqrt608,8820
(deftexfont squaresquare611,8860
(deftexfont starstar614,8902
(deftexfont sub0sub0617,8940
(deftexfont sub1sub1620,8978
(deftexfont sub2sub2623,9016
(deftexfont sub3sub3626,9054
(deftexfont sub4sub4629,9092
(deftexfont sub5sub5632,9130
(deftexfont sub6sub6635,9168
(deftexfont sub7sub7638,9206
(deftexfont sub8sub8641,9244
(deftexfont sub9sub9644,9282
(deftexfont subalphasubalpha647,9320
(deftexfont subbetasubbeta650,9368
(deftexfont succsucc653,9414
(deftexfont subchisubchi656,9452
(deftexfont subdeltasubdelta659,9496
(deftexfont subepsilonsubepsilon662,9544
(deftexfont subetasubeta665,9596
(deftexfont subgammasubgamma668,9640
(deftexfont subiotasubiota671,9688
(deftexfont subkappasubkappa674,9734
(deftexfont sublambdasublambda677,9782
(deftexfont sublparensublparen680,9832
(deftexfont submembersubmember683,9876
(deftexfont submusubmu686,9922
(deftexfont subnusubnu689,9964
(deftexfont subnullsetsubnullset692,10006
(deftexfont subomegasubomega695,10059
(deftexfont subomicronsubomicron698,10107
(deftexfont subphisubphi701,10159
(deftexfont subpisubpi704,10203
(deftexfont subpsisubpsi707,10245
(deftexfont subrhosubrho710,10289
(deftexfont subrparensubrparen713,10333
(deftexfont subsetsubset716,10377
(deftexfont subsigmasubsigma719,10421
(deftexfont subtausubtau722,10469
(deftexfont subthetasubtheta725,10513
(deftexfont subupsilonsubupsilon728,10561
(deftexfont subxisubxi731,10613
(deftexfont subzetasubzeta734,10655
(deftexfont sup0sup0737,10701
(deftexfont sup1sup1740,10739
(deftexfont sup2sup2743,10777
(deftexfont sup3sup3746,10815
(deftexfont sup4sup4749,10853
(deftexfont sup5sup5752,10891
(deftexfont sup6sup6755,10929
(deftexfont sup7sup7758,10967
(deftexfont sup8sup8761,11005
(deftexfont sup9sup9764,11043
(deftexfont supasupa767,11081
(deftexfont supbsupb770,11120
(deftexfont supcsupc773,11159
(deftexfont supdsupd776,11198
(deftexfont supesupe779,11237
(deftexfont supfsupf782,11276
(deftexfont supgsupg785,11315
(deftexfont suphsuph788,11354
(deftexfont supisupi791,11393
(deftexfont supjsupj794,11432
(deftexfont supksupk797,11471
(deftexfont suplsupl800,11510
(deftexfont suplparensuplparen803,11549
(deftexfont supmsupm806,11593
(deftexfont supminussupminus809,11632
(deftexfont supnsupn812,11675
(deftexfont suposupo815,11714
(deftexfont suppsupp818,11753
(deftexfont supplussupplus821,11792
(deftexfont supqsupq824,11834
(deftexfont suprsupr827,11873
(deftexfont suprparensuprparen830,11912
(deftexfont supssups833,11956
(deftexfont supersetsuperset836,11995
(deftexfont suptsupt839,12041
(deftexfont supusupu842,12080
(deftexfont supvsupv845,12119
(deftexfont supwsupw848,12158
(deftexfont supxsupx851,12197
(deftexfont supysupy854,12236
(deftexfont supzsupz857,12275
(deftexfont supsetsupset860,12314
(deftexfont tautau863,12356
(deftexfont tensortensor866,12392
(deftexfont thetatheta869,12434
(deftexfont timestimes872,12474
(deftexfont truthtruth875,12514
(deftexfont turnstileturnstile878,12553
(deftexfont union union881,12597
(deftexfont upsilonupsilon884,12636
(deftexfont validvalid887,12680
(deftexfont xixi890,12721
(deftexfont zerozero893,12755
(deftexfont zetazeta896,12794
(deftexfont <=<=899,12832
(core::deftexfont %%904,12885

theorem-mac.lisp,1121
(deffile theorem-mactheorem-mac13,608
(defun theorem-p theorem-p21,805
(defcategory %theorem%%theorem%25,875
(defun library-theorem-p library-theorem-p42,1545
(defun book-theorem-p book-theorem-p47,1701
(defun practice-p practice-p52,1855
(defun theorem-help theorem-help57,1993
(defgwff-type theorem-typetheorem-type75,2734
(defun theorem-type-wfftype-getfn theorem-type-wfftype-getfn80,2901
(defun allow-no-lemmas allow-no-lemmas90,3282
(defun allow-no-lemmas-help allow-no-lemmas-help94,3377
(defun allow-lower-nos allow-lower-nos102,3693
(defun allow-lower-nos-help allow-lower-nos-help105,3780
(defun theorem-no theorem-no110,4008
(defun theorem-no-help theorem-no-help113,4082
(defun only-required-lemmas only-required-lemmas120,4370
(defun only-required-lemmas-help only-required-lemmas-help124,4498
(defun allow-rulep allow-rulep131,4812
(defun allow-rulep-help allow-rulep-help135,4918
(defun allow-all allow-all140,5118
(defun allow-all-help allow-all-help144,5196
(defun disallow-rulep disallow-rulep148,5325
(defun disallow-rulep-help disallow-rulep-help152,5467

timing.lisp,2157
(deffile timingtiming17,623
(defvar *lucid-gc-time* *lucid-gc-time*25,811
(defvar *lucid-gc-count* *lucid-gc-count*26,838
(defun get-gc-run-time get-gc-run-time30,924
(defun get-gc-run-time get-gc-run-time35,1010
(defun get-gc-run-time get-gc-run-time48,1657
(defun manual-lucid-garbage-counter manual-lucid-garbage-counter53,1748
(defun get-gc-run-time get-gc-run-time76,2774
(defflag excluding-gc-timeexcluding-gc-time84,3002
(defflag timing-namedtiming-named100,3765
(defvar co-proof-mating-count co-proof-mating-count114,4252
(defvar timing-hash-table timing-hash-table119,4401
(defconstant timing-functions timing-functions122,4491
(defconstant timing-functions timing-functions126,4637
(defmacro timing-gethash timing-gethash129,4723
(defmacro timing-sethash timing-sethash134,4872
(defun proof-count proof-count139,5048
(defun timing-set-initial-values timing-set-initial-values161,6250
(defun setclocks setclocks170,6640
(defmacro get-net-internal-run-time get-net-internal-run-time177,6848
(defmacro get-net-internal-run-time get-net-internal-run-time181,7010
(defun time-conversion time-conversion183,7080
(defun time-conversion-format time-conversion-format190,7367
(defun time-conversion-format time-conversion-format204,8020
(defun output-begining-time output-begining-time216,8603
(defun name-conversion name-conversion241,9594
(defun whether-called whether-called275,11204
(defun output-format-time output-format-time292,12022
(defun output-end-time output-end-time360,14640
(defun output-begining-time output-begining-time374,15000
(defun output-format-time output-format-time400,15903
(defun output-end-time output-end-time463,18100
(defun diffcount diffcount476,18391
(defmacro diffcount-internal-net diffcount-internal-net498,19475
(defmacro diffcount-internal-net diffcount-internal-net504,19694
(defun display-time display-time507,19765
(defun display-time-in-daterec display-time-in-daterec523,20677
(defvar unif-running unif-running540,21369
(defun breakcount breakcount542,21396
(defun runcount runcount561,22142
(defun startcount startcount577,22716

top.lisp,1411
(deffile toptop23,774
(defvar restore-file-p restore-file-p31,888
(defvar absolute-top-p absolute-top-p33,917
(defvar top-prompt-fn top-prompt-fn44,1106
(defvar command-interpreter command-interpreter46,1172
(defvar print-* print-*48,1243
(deftoplevel cmd-topcmd-top50,1309
(defvar top-level top-level65,1684
(defun secondary-top secondary-top73,1932
(defun absolute-top-top absolute-top-top82,2171
(defvar top-level-level top-level-level94,2444
(defun top top96,2472
(defun tps-sub-top tps-sub-top98,2551
(defun exit-top exit-top108,2883
(defun sec-tps-top-prompt sec-tps-top-prompt110,2936
(defvar curr-cmd curr-cmd120,3321
(defvar beep-flag beep-flag121,3345
(defvar *top-level-commands-in-queue* *top-level-commands-in-queue*130,3580
(defun tps-top-level tps-top-level132,3624
(defun print-*-tps-top print-*-tps-top239,6960
(defun interpret-tps-top interpret-tps-top258,7697
(defun consp-interpreter consp-interpreter319,10009
(defun flag-interpreter flag-interpreter329,10377
(defun mexpr-interpreter mexpr-interpreter340,10864
(defun misc-interpreter misc-interpreter351,11354
(defun top-prompt top-prompt372,12252
(defun prompt2 prompt2374,12300
(defmexpr pushpush379,12411
(defmexpr poppop386,12696
(defun exit-top-2 exit-top-2390,12790
(defflag save-work-psave-work-p395,12926
(defflag save-work-on-start-upsave-work-on-start-up401,13056

tops20.lisp,3966
(deffile tops20tops2012,528
(defmacro tpsbell tpsbell42,1224
(defmacro tpsbell tpsbell45,1269
(defun linelength linelength49,1317
(defun linelength linelength55,1547
(defun linelength linelength61,1708
(defun linelength linelength67,1854
(defun linelength linelength73,2090
(defun linelength linelength79,2350
(defun linewidth linewidth90,2726
(defun terminal-image-mode terminal-image-mode101,3068
(defun terminal-image-mode terminal-image-mode106,3176
(defvar saving-work-p saving-work-p125,3867
(defvar save-work-echo-stream save-work-echo-stream126,3894
(defun write-^G write-^G128,3930
(defmacro %top-catch% %top-catch%137,4215
(defun throw-^G throw-^G142,4380
(defmacro %top-catch% %top-catch%146,4469
(defun throw-^G throw-^G156,4718
(defmacro %top-catch% %top-catch%164,4845
(defun throw-^G throw-^G170,5009
(defmacro %top-catch% %top-catch%177,5121
(defun throw-^G throw-^G181,5222
(defmacro %top-catch% %top-catch%185,5279
(defmacro %top-catch% %top-catch%193,5474
(defun throw-^G throw-^G200,5632
(defmacro %top-catch% %top-catch%205,5723
(defun throw-^G throw-^G216,5960
(defun throw-^G throw-^G221,6060
(defun initialize-sys-dir initialize-sys-dir232,6250
(defvar date-tps3-saved date-tps3-saved239,6476
(defun finish-time-record finish-time-record241,6506
(defun tps3-save tps3-save247,6661
(defun lisp::%top-level lisp::%top-level254,6759
(defun si::top-level si::top-level257,6825
(defun top-level::top-level-read-eval-print-loop top-level::top-level-read-eval-print-loop263,7031
(defun excl::copyright-banner excl::copyright-banner272,7231
(defun tps3-save tps3-save275,7283
(defun tps3-save tps3-save282,7445
(defun tps3-save tps3-save290,7623
(defun tps3-save tps3-save297,7798
(defun tps3-save tps3-save311,8138
(defun tps3-save tps3-save331,8823
(defun exit-from-lisp exit-from-lisp349,9199
(defun exit-from-lisp exit-from-lisp352,9247
(defun exit-from-lisp exit-from-lisp355,9288
(defun exit-from-lisp exit-from-lisp358,9349
(defun exit-from-lisp exit-from-lisp361,9404
(defun status-userid status-userid369,9663
(defun status-userid status-userid372,9765
(defun status-userid status-userid383,10139
(defun status-userid status-userid388,10295
(defun status-userid status-userid400,10696
(defun call-system call-system409,11040
(defun call-system call-system439,11931
(defun call-system call-system460,12590
(defun call-system-pid call-system-pid482,13268
(defun call-system call-system494,13632
(defun call-system call-system502,13905
(defun call-system call-system507,14041
(defflag lisp-implementation-typelisp-implementation-type512,14187
(defflag machine-typemachine-type521,14510
(defflag short-site-nameshort-site-name532,14862
(defflag machine-instancemachine-instance541,15171
(defun string-to-integer2 string-to-integer2552,15533
(defun setup-xterm-window setup-xterm-window605,18683
(defun setup-big-xterm-window setup-big-xterm-window612,18968
(defun setup-xterm-window setup-xterm-window619,19267
(defun setup-xterm-window setup-xterm-window626,19607
(defun setup-big-xterm-window setup-big-xterm-window634,19953
(defun setup-big-xterm-window setup-big-xterm-window645,20309
(defun string-to-integer string-to-integer655,20778
(defun setup-xterm-window setup-xterm-window661,20944
(defun setup-big-xterm-window setup-big-xterm-window673,21559
(defun simple-parse simple-parse685,22175
(defun setup-xterm-window setup-xterm-window694,22516
(defun setup-big-xterm-window setup-big-xterm-window705,22973
(defun setup-xterm-window setup-xterm-window716,23447
(defun setup-big-xterm-window setup-big-xterm-window742,25021
(defun remove-extra-displays remove-extra-displays768,26590
(defun kill-xterm-window kill-xterm-window788,27538
(defun tps-get-internal-run-time tps-get-internal-run-time799,28085
(defun tps-get-internal-run-time tps-get-internal-run-time805,28279

tpinf.lisp,1351
(deffile tpinftpinf22,740
(defmacro getsymtype getsymtype35,1094
(defmacro get-temp-symtype get-temp-symtype40,1248
(defmacro putsymtype putsymtype43,1344
(defmacro put-temp-symtype put-temp-symtype46,1444
(defun tvarp tvarp56,1747
(defun tconstp tconstp71,2208
(defmacro puttsubst puttsubst75,2328
(defun gettsubst gettsubst86,2760
(defun tsubstp tsubstp89,2828
(defmacro putfinaltype putfinaltype92,2923
(defflag untyped-lambda-calculusuntyped-lambda-calculus97,3042
(defun exists-typed exists-typed120,4200
(defun encode-untyped encode-untyped127,4493
(defun finalscan finalscan141,4960
(defun typeinfer typeinfer161,5621
(defun typeatom typeatom176,6103
(defun binder-type binder-type191,6489
(defun getpolytype getpolytype212,7176
(defun getmetatype getmetatype237,8182
(defun matchtwo matchtwo263,9110
(defun containp containp291,9977
(defun finaltype finaltype302,10298
(defun finaltype1 finaltype1308,10470
(defun findfullname findfullname328,11121
(defun collecttype collecttype371,12758
(defun next-temp-tvar next-temp-tvar392,13441
(defun next-final-tvar next-final-tvar398,13554
(defun next-proposed-tvar next-proposed-tvar413,14042
(defun inittypes inittypes432,14651
(defun cartype cartype443,14941
(defun cdrtype cdrtype456,15419
(defun inittypevar inittypevar472,15996

tps3-error.lisp,711
(deffile tps3-errortps3-error13,611
(defvar *trap-errors* *trap-errors*18,749
(defmacro deftrap deftrap21,808
(deftrap error error39,1440
(deftrap error error51,1892
(deftrap cerror cerror64,2400
(deftrap cerror cerror71,2728
(deftrap lisp::internal-break-loop lisp::internal-break-loop79,3030
(deftrap si::universal-error-handler si::universal-error-handler84,3239
(deftrap debug::debug-loop debug::debug-loop89,3451
(deftrap debugger::debugger-command-level debugger::debugger-command-level94,3653
(deftrap debugger::debug debugger::debug104,4074
(deftrap cond::invoke-debugger cond::invoke-debugger117,4702
(deftrap si::universal-error-handler si::universal-error-handler135,5401

tps3-save.lisp,1490
(deffile tps3-savetps3-save13,616
(defvar core-name core-name24,1022
(defvar *using-interface* *using-interface*25,1076
(defvar *simple-interface-prompts* *simple-interface-prompts*26,1108
(defvar *running-remotely* *running-remotely*27,1149
(defvar *expert-running-remotely* *expert-running-remotely*28,1182
(defvar *remote-userid* *remote-userid*29,1222
(defvar *command-process* *command-process*30,1252
(defvar *executing-batch* *executing-batch*31,1284
(defvar *omega-switch* *omega-switch*32,1316
(defvar *omega-proof* *omega-proof*33,1345
(defvar *omega-proofname* *omega-proofname*34,1373
(defvar etps-core-name etps-core-name35,1405
(defvar *tps-server-name* *tps-server-name*36,1464
(defvar sys-dir sys-dir37,1496
(defvar ini-file-dir ini-file-dir38,1517
(defvar patch-file-dir patch-file-dir39,1543
(defvar save-work-file save-work-file40,1571
(defvar core-abbrevlist core-abbrevlist41,1600
(defvar core-theoremlist core-theoremlist42,1630
(defvar core-binderabbrevlist core-binderabbrevlist43,1661
(defvar core-constlist core-constlist44,1697
(defun secondary-top-main secondary-top-main48,1778
(defun execute-batch execute-batch364,16060
(defun execute-problem execute-problem443,19622
(defun set-up-homedir-and-user set-up-homedir-and-user613,27665
(defun fix-machine-instance fix-machine-instance630,28335
(defun initialize-omega initialize-omega638,28768
(definfo command-line-switchescommand-line-switches644,28985

tps-processes.lisp,2621
(defclass tpr+core-blackboard tpr+core-blackboard59,3355
(defvar *mathweb-service-mode* *mathweb-service-mode*71,3813
(defvar tpr*active tpr*active73,3910
(defvar tpr*on-loui tpr*on-loui74,3971
(defvar tpr*not-killed tpr*not-killed75,4043
(defvar tpr*core-blackboard tpr*core-blackboard77,4132
(defvar tpr*lisp-listener tpr*lisp-listener79,4229
(defvar tpr*tps-core-process tpr*tps-core-process80,4290
(defvar tpr*mathweb-listener tpr*mathweb-listener81,4353
(defvar tpr*service-listener tpr*service-listener82,4424
(defvar tpr*quit tpr*quit84,4499
(defvar tpr*reset tpr*reset85,4549
(defvar tpr*interrupt-command tpr*interrupt-command87,4601
(defvar tpr*halt-lisp-listener tpr*halt-lisp-listener90,4705
(defvar tpr*halt-mathweb-listenertpr*halt-mathweb-listener92,4878
(defvar tpr*halt-service-listener tpr*halt-service-listener96,5098
(defvar tpr*runtime-object tpr*runtime-object103,5397
(defvar tpr*lock tpr*lock105,5463
(defvar tpr*listener-names tpr*listener-names107,5562
(defmacro tpr~mathweb-listener-p tpr~mathweb-listener-p116,5909
(defmacro tpr~service-listener-p tpr~service-listener-p119,6019
(defun tpr~socket2process tpr~socket2process122,6129
(defun tpr~process2socket tpr~process2socket127,6342
(defun tpr=reset-socket-listeners tpr=reset-socket-listeners133,6547
(defun tpr~listener-stop tpr~listener-stop146,7015
(defun tpr=listener-create tpr=listener-create154,7255
(defun tpr=listener-function tpr=listener-function165,7683
(defun tpr~signal-interrupt tpr~signal-interrupt204,9145
(defun tpr=remove-special-commands tpr=remove-special-commands224,9887
(defun tpr=find-interrupt-on-board tpr=find-interrupt-on-board238,10324
(defmacro tpr=with-output-to-loui tpr=with-output-to-loui259,11046
(defmacro tps=output tps=output283,11931
(defmacro tps=write2loui tps=write2loui295,12403
(defun tps=str2msg tps=str2msg300,12561
(defun tps~output tps~output303,12655
(defun tps~trace tps~trace340,13869
(defun tpr~arrest-listener tpr~arrest-listener353,14241
(defun tpr~release-listener tpr~release-listener357,14390
(defun tpr~active-p tpr~active-p503,20622
(defun tpr~runtime-object tpr~runtime-object505,20658
(defun tpr~reset tpr~reset511,20905
(defun tpr~quit tpr~quit514,20962
(defun tpr~start tpr~start519,21055
(defun tpr~initialize-listeners tpr~initialize-listeners587,23720
(defgeneric tpr=initialize-listener tpr=initialize-listener595,23977
(defun tpr~initialize-tps tpr~initialize-tps613,24593
(defun tpr~reset-tps-processes tpr~reset-tps-processes630,25229
(defun tps-remote tps-remote661,26385

tpstop.lisp,1299
(deffile tpstoptpstop24,900
(defvar max-prompt-col max-prompt-col32,1087
(defvar max-short-prompt max-short-prompt34,1115
(defmacro pcall pcall37,1146
(defvar ordinalsordinals44,1339
(defvar argnumbersargnumbers49,1514
(defmacro prompt-read prompt-read59,1825
(defutil prompt-readprompt-read163,5584
(defmacro prompt-read-return-vals prompt-read-return-vals222,7748
(defmacro query query233,8130
(defutil queryquery239,8282
(defvar dproof dproof261,9173
(defun comdecode comdecode263,9197
(defun comdecode-real comdecode-real266,9253
(defun run-command run-command306,10921
(defmacro getkey getkey367,12766
(defun opdecode opdecode372,12875
(defun strong-ed-defaults strong-ed-defaults401,14037
(defun might-be-polytype might-be-polytype433,15438
(defun initial-polytypevarlist initial-polytypevarlist454,16230
(defun prompt-values prompt-values457,16347
(defun fill-args fill-args549,19991
(defun get-args get-args571,20876
(defun use-defaults use-defaults585,21365
(defun fill-in-defaults fill-in-defaults590,21499
(defun same-dollars same-dollars603,21957
(defun gettype gettype617,22391
(defun get-defaults get-defaults629,22825
(defun apply-defaultspec apply-defaultspec646,23565
(defun match-strong-types match-strong-types653,23774

unif-aux.lisp,368
(deffile unif-auxunif-aux12,577
(defun print-subst-stack print-subst-stack17,692
(defun eta-longform eta-longform39,1447
(defun find-subs-flexible-pairs find-subs-flexible-pairs79,3044
(defun find-var-in-stack find-var-in-stack114,4497
(defun simplify-ffpairs simplify-ffpairs118,4600
(defun find-success-node-in-utree find-success-node-in-utree141,5392

unif-depth.lisp,39
(defun unify-depth unify-depth12,577

unif-fo.lisp,360
(deffile unif-founif-fo14,629
(defun var-occurs-in-terms-p var-occurs-in-terms-p19,729
(defun var-occurs-in-term-p var-occurs-in-term-p24,884
(defun make-first-order-term make-first-order-term34,1321
(defun fo-unify-conn fo-unify-conn38,1423
(defun fo-unify fo-unify49,1851
(defun fo-unify-real fo-unify-real56,2067
(defun fo-hnf fo-hnf94,3408

unif-lambda.lisp,605
(deffile unif-lambdaunif-lambda12,577
(defvar binder-pi binder-pi17,678
(defvar binder-sigma binder-sigma18,704
(defun prefix-lambda-list prefix-lambda-list22,808
(defun hnf hnf32,1108
(defun hnf-rec hnf-rec52,1810
(defun rename-all-bd-variables rename-all-bd-variables119,4562
(defun free-in-var-term free-in-var-term129,4915
(defun free-in-var-arg free-in-var-arg182,7031
(defun free-in-var-uniterm free-in-var-uniterm196,7655
(defun lambda-reduce lambda-reduce237,9241
(defun lambda-reduce-rec lambda-reduce-rec254,9881
(defun lambda-reduce-subst lambda-reduce-subst270,10434

unif-macros.lisp,157
(deffile unif-macrosunif-macros20,744
(deftoplevel unif-topunif-top27,888
(defcategory unifopunifop36,1171
(defun unifcmd-mhelp unifcmd-mhelp59,1784

unif-match.lisp,1443
(deffile unif-matchunif-match12,577
(defun listify-type listify-type17,677
(defun prefix-lambda prefix-lambda32,1118
(defun construct-type construct-type37,1261
(defun construct-term construct-term42,1396
(defun construct-E-i construct-E-i46,1503
(defun construct-E-j construct-E-j52,1742
(defun construct-projection-1 construct-projection-164,2095
(defun construct-projection-2 construct-projection-273,2448
(defun projections projections87,2909
(defun projections-eta projections-eta119,3930
(defun find-min-legit-k find-min-legit-k132,4570
(defun construct-imitation-term construct-imitation-term145,5087
(defun construct-imitation-term-1 construct-imitation-term-1157,5495
(defun construct-sk-imitation-term construct-sk-imitation-term170,5948
(defun imitation imitation202,7594
(defun construct-dneg-imitation-term construct-dneg-imitation-term246,9205
(defun imitation-eta imitation-eta275,10470
(defflag unif-counterunif-counter300,11701
(defflag unif-counter-outputunif-counter-output313,12220
(defflag unif-triggerunif-trigger332,13051
(defflag dneg-imitationdneg-imitation363,14305
(definfo alwaysalways385,15288
(definfo constconst389,15409
(definfo flexflex394,15606
(definfo const-flexconst-flex401,15866
(definfo nevernever407,16080
(defun dneg-refuse-test dneg-refuse-test411,16200
(defun check-dneg-vars check-dneg-vars421,16727
(defun unif-match unif-match452,18085

unif-mat.lisp,626
(deffile unif-matunif-mat13,605
(defun clist-to-dpairs clist-to-dpairs17,703
(defun copy-dpair copy-dpair20,792
(defun connection-to-dpair connection-to-dpair28,1056
(defun connection-to-dpair-main connection-to-dpair-main33,1260
(defvar ms88-unif-counter ms88-unif-counter48,1912
(defun banned-conn-p banned-conn-p57,2252
(defun quick-unification-connection quick-unification-connection62,2440
(defun quick-unification-main quick-unification-main71,2893
(defun unifiable-p unifiable-p92,3748
(defun first-order-unificationfirst-order-unification106,4386
(defun fo-compatible-p fo-compatible-p110,4522

unif-menus.lisp,2932
(deffile unif-menusunif-menus20,758
(defmenuitem UNIFICATION0UNIFICATION027,901
(defmenu UNIFICATIONUNIFICATION35,1040
(defmenuitem |0-2||0-2|41,1143
(defmenuitem APPLY-SUBSTAPPLY-SUBST48,1272
(defmenuitem EPROOF-UTREEEPROOF-UTREE55,1408
(defmenuitem GO23456GO2345662,1547
(defmenuitem GOTO23GOTO2369,1661
(defmenuitem MATCHMATCH76,1778
(defmenuitem MATCH-PAIRMATCH-PAIR83,1896
(defmenuitem NAME-DPAIRNAME-DPAIR90,2029
(defmenuitem NTH-SONNTH-SON97,2162
(defmenuitem P23P23104,2287
(defmenuitem PALL2PALL2111,2396
(defmenuitem PP23PP23118,2513
(defmenuitem PP*PP*125,2625
(defmenuitem SIMPLIFYSIMPLIFY132,2738
(defmenuitem STATS2STATS2139,2866
(defmenuitem SUBST-STACKSUBST-STACK146,2986
(defmenuitem UTREEUTREE153,3123
(defmenuitem UTREE*UTREE*160,3242
(defmenuitem ^2^2167,3364
(defmenuitem ^^^^174,3472
(defmenuitem LEAVE8LEAVE8181,3582
(defmenu DPAIRSDPAIRS188,3703
(defmenuitem ADD-DPAIRADD-DPAIR194,3796
(defmenuitem ADD-DPAIRS-TO-NODEADD-DPAIRS-TO-NODE201,3921
(defmenuitem ADD-DPAIRS-TO-UTREEADD-DPAIRS-TO-UTREE208,4073
(defmenuitem FIND-NESTINGFIND-NESTING215,4228
(defmenuitem PRUNE2PRUNE2222,4362
(defmenuitem RM-DPAIRRM-DPAIR229,4476
(defmenuitem SHOW-DPAIRSETSHOW-DPAIRSET236,4598
(defmenuitem UNIF-PROBLEMUNIF-PROBLEM243,4735
(defmenu UNIFICATION-FLAGSUNIFICATION-FLAGS250,4869
(defmenuitem MAX-SUBSTS-PROJMAX-SUBSTS-PROJ256,4988
(defmenuitem MAX-SUBSTS-PROJ-TOTALMAX-SUBSTS-PROJ-TOTAL263,5142
(defmenuitem MAX-SUBSTS-QUICKMAX-SUBSTS-QUICK270,5314
(defmenuitem MAX-SUBSTS-VARMAX-SUBSTS-VAR277,5471
(defmenuitem NUM-OF-DUPSNUM-OF-DUPS284,5622
(defmenuitem APPLY-MATCHAPPLY-MATCH291,5764
(defmenuitem COUNTSUBS-FIRSTCOUNTSUBS-FIRST298,5906
(defmenuitem DNEG-IMITATIONDNEG-IMITATION305,6060
(defmenuitem ETA-RULEETA-RULE312,6211
(defmenuitem IMITATION-FIRSTIMITATION-FIRST319,6345
(defmenuitem LEIBNIZ-SUB-CHECKLEIBNIZ-SUB-CHECK326,6500
(defmenuitem MAX-DUP-PATHSMAX-DUP-PATHS333,6661
(defmenuitem MAX-SEARCH-DEPTHMAX-SEARCH-DEPTH340,6810
(defmenuitem MAX-UTREE-DEPTHMAX-UTREE-DEPTH347,6968
(defmenuitem MIN-QUICK-DEPTHMIN-QUICK-DEPTH354,7123
(defmenuitem MS-DIRMS-DIR361,7278
(defmenuitem MS90-3-QUICKMS90-3-QUICK368,7406
(defmenuitem PRUNINGPRUNING375,7552
(defmenuitem REDUCE-DOUBLE-NEGREDUCE-DOUBLE-NEG382,7683
(defmenuitem RIGID-PATH-CKRIGID-PATH-CK389,7844
(defmenuitem STOP-AT-TSNSTOP-AT-TSN396,7993
(defmenuitem SUBSUMPTION-CHECKSUBSUMPTION-CHECK403,8136
(defmenuitem SUBSUMPTION-DEPTHSUBSUMPTION-DEPTH410,8297
(defmenuitem SUBSUMPTION-NODESSUBSUMPTION-NODES417,8458
(defmenuitem TOTAL-NUM-OF-DUPSTOTAL-NUM-OF-DUPS424,8619
(defmenuitem UNI-SEARCH-HEURISTICUNI-SEARCH-HEURISTIC431,8780
(defmenuitem UNIF-COUNTERUNIF-COUNTER438,8950
(defmenuitem UNIF-COUNTER-OUTPUTUNIF-COUNTER-OUTPUT445,9096
(defmenuitem UNIF-TRIGGERUNIF-TRIGGER452,9263
(defmenuitem UNIFY-VERBOSEUNIFY-VERBOSE459,9409

unif-simpl.lisp,925
(deffile unif-simplunif-simpl12,577
(defun ck-new-dpairs ck-new-dpairs17,677
(defflag max-substs-varmax-substs-var29,1153
(defflag max-substs-projmax-substs-proj42,1778
(defflag max-substs-proj-totalmax-substs-proj-total52,2157
(defflag max-substs-quickmax-substs-quick62,2530
(defmode msv-offmsv-off87,3815
(defmode msv-onmsv-on96,4057
(defreview unif-depthsunif-depths111,4433
(defun unif-depths unif-depths116,4601
(defreview unif-nodepthsunif-nodepths128,5139
(defun unif-nodepths unif-nodepths132,5281
(defun simpl-subst-check simpl-subst-check143,5784
(defun check-simpl-count check-simpl-count160,6373
(defun simpl simpl192,7678
(defun step1-simpl step1-simpl251,9873
(defun simpl-modification simpl-modification296,11429
(defun bdvar-free-in-term bdvar-free-in-term325,12513
(defun step1-simpl-dpair step1-simpl-dpair339,13086
(defun eta-reduce-uterm eta-reduce-uterm362,14027

unif-subs.lisp,1622
(deffile unif-subsunif-subs12,577
(defun reduce-dpairlist reduce-dpairlist17,676
(defun find-unif-node find-unif-node26,992
(defflag subsumption-nodessubsumption-nodes34,1238
(definfo path-nodespath-nodes62,2494
(definfo leaf-nodesleaf-nodes67,2653
(definfo all-nodesall-nodes71,2786
(defflag subsumption-depthsubsumption-depth75,2894
(defun leaf-node-p leaf-node-p107,4371
(defun path-node-p path-node-p110,4462
(defun lp-node-p lp-node-p113,4532
(defun dont-consider dont-consider116,4633
(defun unif-subsetp unif-subsetp124,4939
(defun different-connections different-connections144,5704
(defun connections-down-to-here connections-down-to-here147,5836
(defun subsumption-check subsumption-check152,5997
(defun propagate-failure-downwards propagate-failure-downwards192,7955
(defun trim-subst-hashtable trim-subst-hashtable201,8396
(defun canonical-form-check canonical-form-check212,8807
(defun wff-canon wff-canon223,9452
(defun wff-rename wff-rename238,10042
(defun h-var-check h-var-check265,11346
(defvar subset-arrangements-list subset-arrangements-list271,11515
(defun enumerate-unif-subsets enumerate-unif-subsets273,11554
(defun rearrange-unif-sl rearrange-unif-sl279,11788
(defun enumerate-unif-subsets-real enumerate-unif-subsets-real288,12148
(defun princ-unif-node-dpairs princ-unif-node-dpairs336,14246
(defun princ-unif-node-names princ-unif-node-names341,14396
(defun fill-sub-check-slot fill-sub-check-slot346,14525
(defun unif-lex-hash unif-lex-hash359,15014
(defun unif-hash-fn unif-hash-fn364,15132
(defun const-val const-val376,15676

unif-top.lisp,499
(deffile unif-topunif-top20,751
(defvar root-node)root-node33,963
(defvar subst-hash-table)subst-hash-table34,982
(defvar prev-node)prev-node35,1008
(defvar dpairlist dpairlist36,1027
(defun uniftop uniftop43,1160
(defun unif-top-prompt unif-top-prompt60,1627
(defun unif-command-interpreter unif-command-interpreter68,1745
(defun unif-print-* unif-print-*116,3443
(defunifop leaveleave125,3680
(defun leave-unif leave-unif129,3757
(defun unif-opdecode unif-opdecode134,3874

unif-tree.lisp,2874
(deffile unif-treeunif-tree12,577
(defun neg-head neg-head30,1121
(defun create-successor create-successor36,1318
(defun assign-print-name assign-print-name58,2226
(defun frpair-p frpair-p67,2542
(defun apply-match-max-substs apply-match-max-substs82,3186
(defun apply-match-all-frdpairs-msv apply-match-all-frdpairs-msv142,5842
(defun apply-match-min-substs apply-match-min-substs196,8312
(defun check-simpl-count-2 check-simpl-count-2250,10539
(defun apply-match-all-frdpairs apply-match-all-frdpairs283,11818
(defun apply-match-most-consts apply-match-most-consts324,13448
(defflag leibniz-sub-checkleibniz-sub-check373,15341
(defun apply-match-all-frdpairs-msq apply-match-all-frdpairs-msq387,15899
(defun initialize-utree initialize-utree453,18640
(defvar assign-measure assign-measure462,19075
(defvar update-measure-int-node update-measure-int-node463,19129
(defvar update-measure update-measure464,19201
(defvar find-next-node find-next-node465,19255
(defvar tn-measure tn-measure466,19309
(defflag apply-matchapply-match468,19348
(definfo apply-match-all-frdpairsapply-match-all-frdpairs510,21427
(definfo apply-match-all-frdpairs-msvapply-match-all-frdpairs-msv515,21622
(definfo apply-match-max-substsapply-match-max-substs521,21859
(definfo apply-match-min-substsapply-match-min-substs527,22113
(definfo apply-match-most-constsapply-match-most-consts534,22393
(defflag uni-search-heuristicuni-search-heuristic541,22670
(definfo breadth-firstbreadth-first554,23198
(definfo depth-firstdepth-first558,23314
(definfo best-firstbest-first563,23517
(defvar *least-search-depth* *least-search-depth*568,23719
(defun unify unify570,23771
(defun unify-old unify-old579,24192
(defun match-top match-top715,30406
(defun rename-head rename-head754,32064
(defun match-rename match-rename763,32306
(defun rename-h-vars rename-h-vars772,32523
(defflag pruningpruning787,33052
(defun update-measure-breadth-first update-measure-breadth-first797,33344
(defun update-measure-breadth-first-int-node update-measure-breadth-first-int-node815,34039
(defun find-next-node-breadth-first find-next-node-breadth-first828,34538
(defun assign-measure-breadth-first assign-measure-breadth-first844,35321
(defun update-measure-best-first update-measure-best-first853,35611
(defun update-measure-best-first-int-node update-measure-best-first-int-node874,36469
(defun find-next-node-best-first find-next-node-best-first887,36953
(defun assign-measure-best-first assign-measure-best-first902,37594
(defun change-search-heuristic change-search-heuristic912,37920
(defun free-vars2 free-vars2936,39124
(defun unif-extra-output unif-extra-output945,39446
(defun unify-msv unify-msv988,41534
(defun leibniz-subs-ok leibniz-subs-ok1089,45976
(defun create-successor-2 create-successor-21101,46486

unif-user.lisp,4782
(deffile unif-userunif-user21,785
(defmateop unifyunify28,935
(defwffop call-unify call-unify32,1005
(defun call-unify call-unify41,1429
(defmexpr unifyunify70,2355
(defun enter-uniftop enter-uniftop79,2826
(defunifop ^^97,3340
(defun goto-parentnode goto-parentnode105,3596
(defun goto-rootnode goto-rootnode110,3746
(defunifop ^^^^115,3874
(defunifop pp122,4074
(defun show-unode show-unode140,4774
(defunifop pppp177,6531
(defunifop pp*pp*184,6792
(defun show-dpairs show-dpairs211,8149
(defunifop eproof-utreeeproof-utree223,8673
(defun eproof-utree eproof-utree230,8961
(defunifop name-dpairname-dpair240,9423
(defvar named-fv-list named-fv-list251,9887
(defun name-dpair name-dpair253,9915
(defunifop statsstats263,10403
(defvar *unif-stats-store* *unif-stats-store*268,10529
(defun unif-stats unif-stats270,10562
(defun unif-stats2 unif-stats2314,12751
(defun print-unif-stats print-unif-stats334,13585
(defun stats-rec stats-rec354,14737
(defunifop utreeutree365,15184
(defunifop utree*utree*385,16046
(defun print-utree print-utree408,17063
(defun print-utree-rec print-utree-rec414,17284
(defun print-utree-tex print-utree-tex424,17782
(defun print-utree-tex-rec print-utree-tex-rec443,18408
(defunifop pallpall463,19304
(defun print-dpairs print-dpairs484,20117
(defun print-dpairs-rec print-dpairs-rec490,20341
(defun print-dpairs-tex print-dpairs-tex509,21239
(defun print-dpairs-tex-rec print-dpairs-tex-rec527,21917
(defunifop gotogoto545,22728
(defun find-unification-node find-unification-node553,23029
(defun find-unification-node-rec find-unification-node-rec565,23466
(defunifop nth-sonnth-son571,23696
(defun nth-son nth-son582,24116
(defunifop simplifysimplify599,24761
(defun uniftop-simpl uniftop-simpl609,25250
(defunifop subst-stacksubst-stack625,25931
(defun display-subst-stack display-subst-stack639,26448
(defunifop apply-substapply-subst670,27593
(defun ck-and-apply-subst ck-and-apply-subst680,27963
(defunifop \0\0687,28247
(defun pop-unifnodestack pop-unifnodestack697,28611
(defunifop gogo701,28714
(defun go-unify go-unify707,28910
(defunifop matchmatch716,29181
(defun uniftop-match uniftop-match727,29647
(defun uniftop-match-descendents uniftop-match-descendents737,30069
(defunifop match-pairmatch-pair759,30734
(defun uniftop-match-pair uniftop-match-pair770,31213
(defunifop add-dpairadd-dpair796,32238
(defun add-dpair add-dpair813,32936
(defunifop rm-dpairrm-dpair819,33093
(defun rm-dpair rm-dpair835,33626
(defunifop show-dpairsetshow-dpairset838,33726
(defun show-dpairset show-dpairset848,34069
(defunifop unif-problemunif-problem852,34192
(defun parse-vars parse-vars885,35648
(defun unif-problem unif-problem893,35937
(defunifop add-dpairs-to-nodeadd-dpairs-to-node899,36140
(defun add-dpairs-to-node add-dpairs-to-node922,37053
(defun add-dpairs-to-node-main add-dpairs-to-node-main927,37264
(defunifop add-dpairs-to-utreeadd-dpairs-to-utree939,37766
(defun add-dpairs-to-utree add-dpairs-to-utree956,38347
(defun add-dpairs-to-utree-rec add-dpairs-to-utree-rec959,38448
(defun show-dpairs-2 show-dpairs-2968,38781
(defun show-dpairs-3 show-dpairs-31072,44385
(defun divide-and-conquer divide-and-conquer1145,48143
(defun isolation-check isolation-check1158,48639
(defun is-linear is-linear1176,49454
(defun is-a-pattern is-a-pattern1182,49661
(defun is-a-relaxed-pattern is-a-relaxed-pattern1208,50776
(defun dandc dandc1234,51877
(defun monadic-check monadic-check1245,52112
(defun bd-vars-in-gwff bd-vars-in-gwff1253,52330
(defvar polytype-alert polytype-alert1260,52652
(defun find-rank find-rank1262,52681
(defun find-rank-2 find-rank-21271,53025
(defun find-reg find-reg1279,53377
(defun find-reg-2 find-reg-21283,53458
(defun check-reg-args check-reg-args1292,53714
(defun find-arg find-arg1299,53927
(defun find-no-args find-no-args1308,54179
(defun max-order max-order1313,54333
(defun type-order type-order1321,54589
(defun tp-utree tp-utree1331,55059
(defun tr-print-utree tr-print-utree1335,55178
(defun tabstops-broken tabstops-broken1347,55824
(defun rec-utree-print rec-utree-print1350,55936
(defun p-utree-elt p-utree-elt1383,57478
(defun p-utree-type p-utree-type1405,58364
(defun find-type find-type1411,58608
(defun p-utree-dp p-utree-dp1418,58885
(defun p-utree-dp-real p-utree-dp-real1432,59342
(defun super-hack super-hack1456,60352
(defun find-rough-length find-rough-length1480,61322
(defun rec-utree-sons rec-utree-sons1491,61697
(defunifop pruneprune1496,61913
(defun prune-tree prune-tree1503,62152
(defunifop find-nestingfind-nesting1523,63097
(defun find-nesting find-nesting1530,63295

unix-lib-menus.lisp,978
(deffile unix-lib-menusunix-lib-menus17,660
(defmenuitem UNIX-STYLEUNIX-STYLE24,819
(defmenu UNIX-STYLE-LIBUNIX-STYLE-LIB31,953
(defmenu UNIXLIB-READUNIXLIB-READ37,1070
(defmenuitem DESTROY2DESTROY243,1173
(defmenuitem FETCH2FETCH250,1299
(defmenu UNIXLIB-DISPLAYUNIXLIB-DISPLAY57,1419
(defmenuitem PINTERSECT2PINTERSECT263,1528
(defmenuitem PINTERSECT*2PINTERSECT*270,1666
(defmenuitem SHOW2SHOW277,1807
(defmenuitem SHOW-ALL-WFFS2SHOW-ALL-WFFS284,1927
(defmenuitem SHOW-HELP2SHOW-HELP291,2074
(defmenuitem SHOW-WFF2SHOW-WFF298,2209
(defmenuitem SHOW-WFF&HELP2SHOW-WFF&HELP2105,2341
(defmenu UNIXLIB-CLASSUNIXLIB-CLASS112,2488
(defmenuitem CDCD118,2601
(defmenuitem CLASSIFY-ITEM2CLASSIFY-ITEM2125,2712
(defmenuitem CPCP132,2857
(defmenuitem LNLN139,2968
(defmenuitem MKDIRMKDIR146,3079
(defmenuitem PWDPWD153,3199
(defmenuitem RMRM160,3313
(defmenuitem LEAVE3LEAVE3167,3424
(defmenuitem UNIXLIB-SHOWPATHUNIXLIB-SHOWPATH174,3548

unix-library1.lisp,4278
(deffile unix-library1unix-library117,660
(defvar *unix-libclass-scheme-changed* *unix-libclass-scheme-changed*24,812
(deftoplevel unix-library-topunix-library-top26,857
(defcategory unix-librarycmdunix-librarycmd48,1682
(defun unix-librarycmd-mhelp unix-librarycmd-mhelp68,2297
(defun unix-library unix-library79,2689
(defun unix-librarytop unix-librarytop103,3662
(defflag unixlib-showpathunixlib-showpath112,3990
(defun unix-library-top-prompt unix-library-top-prompt131,4447
(defun unix-library-command-interpreter unix-library-command-interpreter136,4656
(defun unix-lib-opdecode unix-lib-opdecode180,6362
(defmexpr unixlibunixlib203,7172
(defunixlibrary leaveleave222,7705
(defun exit-unix-library exit-unix-library226,7838
(defunixlibrary user::ls user::ls234,8109
(defunixlibrary user::cd user::cd240,8294
(defun unixlib-ls unixlib-ls253,8658
(defun unixlib-cd unixlib-cd280,9462
(defun locate-unixlibclass locate-unixlibclass285,9579
(defun locate-unixlibclass-or-item locate-unixlibclass-or-item349,11749
(defun unixlib-pwd unixlib-pwd419,14076
(defun class-fullpath class-fullpath427,14253
(defmenuitem MVMV434,14423
(defmenuitem RENAME-CLASSRENAME-CLASS441,14536
(defmenuitem COPY-CLASS-SCHEMECOPY-CLASS-SCHEME448,14679
(defunixlibrary mvmv455,14837
(defunixlibrary rename-classrename-class464,15100
(defunixlibrary COPY-CLASS-SCHEMECOPY-CLASS-SCHEME475,15432
(defunixlibrary user::rm user::rm491,16047
(defunixlibrary lnln518,16707
(defunixlibrary cpcp538,17217
(defunixlibrary classify-itemclassify-item549,17559
(defunixlibrary mkdirmkdir558,17799
(defun unixlib-mv unixlib-mv568,18060
(defun unixlib-rm unixlib-rm597,19294
(defun unixlib-ln unixlib-ln613,19942
(defun unixlib-cp unixlib-cp632,20749
(defun unixlib-classify-item unixlib-classify-item647,21262
(defun unixlib-mkdir unixlib-mkdir657,21577
(defunixlibrary destroydestroy667,21897
(defunixlibrary fetchfetch676,22181
(defun unixlib-retrieve-libobject-real unixlib-retrieve-libobject-real691,22720
(defunixlibrary showshow704,23214
(defunixlibrary pwdpwd715,23541
(defunixlibrary puppup721,23660
(defunixlibrary pdownpdown725,23768
(defunixlibrary locatelocate729,23880
(defmenuitem UNIXLIB-PUPUNIXLIB-PUP736,24112
(defmenuitem UNIXLIB-PDOWNUNIXLIB-PDOWN743,24236
(defmenu UNIXLIB-SEARCHUNIXLIB-SEARCH750,24367
(defmenuitem UNIXLIB-LOCATEUNIXLIB-LOCATE756,24474
(defmenuitem LSLS762,24585
(defmenuitem LS-ITEMS*LS-ITEMS*769,24700
(defun unixlib-show-libobject unixlib-show-libobject776,24836
(defunixlibrary show-wffshow-wff795,25617
(defun unixlib-show-libobject-wff unixlib-show-libobject-wff807,26016
(defunixlibrary show-helpshow-help835,27080
(defun unixlib-show-libobject-help unixlib-show-libobject-help848,27579
(defunixlibrary show-wff&helpshow-wff&help868,28228
(defun unixlib-show-libobject-wff-and-help unixlib-show-libobject-wff-and-help878,28570
(defunixlibrary show-all-wffsshow-all-wffs902,29464
(defun unixlib-show-all-wffs-anywhere unixlib-show-all-wffs-anywhere913,29963
(defunixlibrary pintersectpintersect946,31229
(defunixlibrary pintersect*pintersect*955,31504
(defun unixlib-pintersect unixlib-pintersect969,31977
(defun unixlib-pintersect* unixlib-pintersect*987,32542
(defunixlibrary generate-class-schemegenerate-class-scheme1005,33110
(defunixlibrary import-classimport-class1020,33699
(defunixlibrary find-generated-classfind-generated-class1028,33942
(defunixlibrary ls-items*ls-items*1038,34366
(defun unixlib-ls-items* unixlib-ls-items*1044,34550
(defun find-generated-class find-generated-class1048,34676
(defun find-generated-class-rec find-generated-class-rec1061,35205
(defun unixlib-rename-class unixlib-rename-class1074,35644
(defun unixlib-copy-class-scheme unixlib-copy-class-scheme1082,35959
(defun copy-libclass-rec copy-libclass-rec1099,36670
(defun unixlib-import-class unixlib-import-class1121,37303
(defun unixlib-pup unixlib-pup1141,38081
(defun unixlib-pup-rec unixlib-pup-rec1146,38224
(defun unixlib-pdown unixlib-pdown1160,38646
(defun unixlib-pdown-rec unixlib-pdown-rec1165,38793
(defun unixlib-locate unixlib-locate1185,39419
(defun unixlib-locate-rec unixlib-locate-rec1208,40225

vpforms.lisp,2648
(deffile vpforms vpforms14,610
(defwffop vpformvpform19,738
(defedop vpf vpf27,1127
(defwffop display-vp-diag display-vp-diag29,1198
(defwffop display-vp-diag-ed display-vp-diag-ed36,1461
(defun display-vp-diag-ed display-vp-diag-ed43,1735
(defedop vp vp47,1852
(defwffop display-vpd display-vpd50,1935
(defedop vpd vpd57,2211
(defvar forallindent forallindent60,2288
(defvar andheight andheight62,2314
(defun display-vpd display-vpd64,2337
(defun display-vp-diag display-vp-diag102,3937
(defun describe-vpform describe-vpform114,4383
(defun describe-vplit describe-vplit181,6969
(defun digitnamp digitnamp211,8128
(defun height height214,8207
(defun %%princ %%princ216,8241
(defun print-vp-or-sign print-vp-or-sign229,8707
(defun print-vpform print-vpform234,8903
(defun print-vplit print-vplit293,11267
(defun printbarsp printbarsp308,11948
(defun %printgencharlist %printgencharlist311,12040
(defun width width319,12312
(defun ck-and-convert-gwff-to-jform ck-and-convert-gwff-to-jform321,12346
(defun %vpform %vpform328,12614
(defun %vpform-real %vpform-real332,12879
(defun printleftbar printleftbar479,19001
(defun printlegend printlegend488,19325
(defun printrightbar printrightbar502,19886
(defun %spaces %spaces510,20214
(defun %sprintaplicn %sprintaplicn514,20322
(defun %sprintpplist %sprintpplist525,20694
(defun subparts subparts535,21073
(defun vpform vpform537,21111
(defun vpformdefaultsvpformdefaults540,21235
(defvar *vpwin-opened* *vpwin-opened*563,22092
(defvar *vpwin-process* *vpwin-process*564,22120
(defvar *big-vpwin* *big-vpwin*565,22149
(defvar *current-vpwname* *current-vpwname*566,22174
(defflag vpw-widthvpw-width568,22206
(defflag vpw-heightvpw-height575,22437
(defmexpr open-matevpwopen-matevpw582,22669
(defmenuitem OPEN-MATEVPWOPEN-MATEVPW596,23444
(defmenuitem CLOSE-MATEVPWCLOSE-MATEVPW603,23598
(defun open-vpwin-auto open-vpwin-auto610,23741
(defun open-matevpw open-matevpw620,24239
(defmexpr close-matevpwclose-matevpw634,24873
(defun close-matevpw close-matevpw641,25103
(defun setup-vpwin setup-vpwin665,25875
(defun vpwin-update-headers vpwin-update-headers692,27200
(defun vpwin-update-footers vpwin-update-footers707,27875
(defun vpwin-update-one vpwin-update-one715,28256
(defun vpwin-update-two vpwin-update-two730,28851
(defun vpwin-update-three vpwin-update-three752,29672
(defun vpwin-update-four vpwin-update-four777,30733
(defun vpwin-update-five vpwin-update-five801,31756
(defun vpwin-update-six vpwin-update-six820,32595
(defun vpwin-update-seven vpwin-update-seven833,33058

vpforms-macros.lisp,372
(deffile vpforms-macrosvpforms-macros13,607
(defflag vpd-lit-namevpd-lit-name20,723
(defflag printvpdflagprintvpdflag27,917
(defflag vpd-filenamevpd-filename35,1209
(defflag vpd-ptypesvpd-ptypes41,1363
(defflag vpd-briefvpd-brief47,1507
(defflag vpd-vpfpagevpd-vpfpage64,2216
(defflag vpd-stylevpd-style71,2392
(defflag vpform-labelsvpform-labels77,2551

vpforms-tex.lisp,938
(defflag texformattexformat13,607
(defflag vpform-tex-nestvpform-tex-nest21,866
(defflag vpform-tex-preamblevpform-tex-preamble28,1052
(defflag vpform-tex-magnificationvpform-tex-magnification35,1222
(deffile vpforms-texvpforms-tex48,1714
(defun vertical-p vertical-p55,1873
(defun vpform-tex-break vpform-tex-break65,2255
(defun vpform-tex-boxes vpform-tex-boxes79,2725
(defun vpform-princ-lit vpform-princ-lit90,3138
(defun vpform-tex vpform-tex106,3682
(defun vpform-tex-printlegend vpform-tex-printlegend175,6322
(defun print-vpform-tex print-vpform-tex193,7123
(defun print-vpform-tex-labels print-vpform-tex-labels232,8557
(defun tex-preamble-fn tex-preamble-fn286,10975
(defun tex-postamble-fn tex-postamble-fn290,11179
(defun vp-tex vp-tex295,11373
(defwffop vp-texvp-tex298,11473
(defedop vptvpt317,12227
(defun %vpform-tex %vpform-tex322,12303
(defun parse-boxname parse-boxname349,13168

weak.lisp,934
(deffile weakweak21,719
(defgwff-type weak-typeweak-type28,844
(defun weak-ckfn weak-ckfn33,975
(defun weak-getfn weak-getfn36,1069
(defun get-weak get-weak39,1112
(defun put-weak put-weak40,1161
(defwffop create-weakcreate-weak42,1225
(defedop cwcw56,1648
(defun create-weak create-weak61,1727
(defun redef-weak redef-weak66,1825
(defwffop redef-weakredef-weak69,1882
(defedop rwrw77,2124
(defwffop delete-weakdelete-weak82,2201
(defun delete-weak delete-weak91,2478
(defedop delweakdelweak97,2684
(defun recover-place recover-place107,2940
(defun recover-place-rec recover-place-rec114,3119
(defun extract-gop extract-gop122,3406
(defwffop dissolve-weakdissolve-weak131,3626
(defedop dwdw138,3874
(defun dissolve-weak dissolve-weak143,3954
(defedop dw*dw*148,4110
(defun dissolve-weak* dissolve-weak*153,4192
(defwffop dissolve-weak*dissolve-weak*164,4564
(defedop namename170,4720

weak-mac-auto.lisp,72
(deffile weak-mac-autoweak-mac-auto15,624
(defflavor weakweak22,754

weak-mac.lisp,101
(deffile weak-macweak-mac19,669
(defflag print-weakprint-weak26,800
(defflavor weakweak38,1273

wffabb2.lisp,1077
(deffile wffabb2wffabb219,682
(defwffop instantiate-defninstantiate-defn26,819
(defun instantiate-defn instantiate-defn36,1186
(defwffop instantiate-allinstantiate-all40,1316
(defwffop instantiate-all-recinstantiate-all-rec52,1680
(defun instantiate-all-rec instantiate-all-rec64,2060
(defun instantiate-all instantiate-all70,2252
(defwffop instantiate-1instantiate-174,2398
(defun instantiate-1 instantiate-181,2564
(defwffop instantiate-top-equalityinstantiate-top-equality90,2834
(defun instantiate-top-equality instantiate-top-equality105,3333
(defwffrec instantiate-=instantiate-=114,3604
(defun instantiate-= instantiate-=117,3663
(defwffop instantiate-equalitiesinstantiate-equalities139,4578
(defun instantiate-equalities instantiate-equalities154,5071
(defun expand-all-equalities expand-all-equalities170,5826
(defun instantiate-equality-smart instantiate-equality-smart186,6337
(defun instantiate-equality-extensional instantiate-equality-extensional195,6766
(defun instantiate-equality-basic instantiate-equality-basic227,7842

wffabb.lisp,1142
(deffile wffabbwffabb13,611
(defwffop substitute-bdvar-scopesubstitute-bdvar-scope19,752
(defun substitute-bdvar-scope substitute-bdvar-scope31,1179
(defun get-def-binder get-def-binder58,2185
(defun get-def-binder1 get-def-binder195,3816
(defwffrec instantiate-definitionsinstantiate-definitions98,3912
(defun instantiate-definitions instantiate-definitions101,3981
(defwffop top-level-defntop-level-defn131,5334
(defun top-level-defn top-level-defn138,5511
(defwffop contains-defncontains-defn147,5890
(defun contains-defn contains-defn154,6062
(defwffop abbr-listabbr-list163,6444
(defun abbr-list abbr-list171,6627
(defwffop new-defsnew-defs179,6998
(defun new-defs new-defs188,7231
(defun weak-label-list weak-label-list196,7488
(defwffop lib-abbr-listlib-abbr-list202,7726
(defun lib-abbr-list lib-abbr-list210,7921
(defwffop const-listconst-list213,8041
(defun const-list const-list222,8301
(defun const-list-real const-list-real225,8373
(defflag rewrite-equalitiesrewrite-equalities235,8807
(definfo only-extonly-ext262,10151
(definfo leibnizleibniz268,10375
(definfo allall274,10638

wffcat.lisp,313
(deffile wffcatwffcat21,715
(defcategory typeconsttypeconst30,923
(defcategory typeabbrevtypeabbrev39,1116
(defcategory logconstlogconst48,1323
(defcategory pmpropsympmpropsym58,1563
(defcategory binderbinder69,1836
(defcategory abbrevabbrev85,2189
(defun princ-mhelp-defn princ-mhelp-defn98,2489

wffchange.lisp,4135
(deffile wffchangewffchange19,674
(defun inf-go-on(inf-go-on25,838
(defun pre-go-on(pre-go-on29,1056
(defun go-on go-on36,1328
(defun complain-unless-gwff complain-unless-gwff43,1435
(defwffop merge-idempotentmerge-idempotent51,1655
(defwffop merge-idempotent*merge-idempotent*63,1905
(defun merge-idempotent merge-idempotent73,2136
(defun merge-idempotent* merge-idempotent*76,2216
(defun repeat-real-merge-idempotent repeat-real-merge-idempotent79,2296
(defun real-merge-idempotent real-merge-idempotent86,2564
(defwffop merge-constantmerge-constant116,4252
(defwffop merge-constant*merge-constant*128,4514
(defun merge-constant merge-constant138,4751
(defun merge-constant* merge-constant*141,4826
(defun real-merge-constant real-merge-constant144,4913
(defun repeat-real-merge-constant repeat-real-merge-constant176,6894
(defwffop wff-absorbwff-absorb191,7249
(defwffop wff-absorb*wff-absorb*203,7484
(defun wff-absorb wff-absorb213,7688
(defun wff-absorb* wff-absorb*216,7755
(defun repeat-real-wff-absorb repeat-real-wff-absorb219,7822
(defun real-wff-absorb real-wff-absorb226,8088
(defwffop wff-dist-expandwff-dist-expand294,14088
(defwffop wff-dist-expand*wff-dist-expand*310,14538
(defwffop wff-dist-contractwff-dist-contract327,14990
(defwffop wff-dist-contract*wff-dist-contract*343,15445
(defun wff-dist-expand wff-dist-expand358,15882
(defun wff-dist-expand* wff-dist-expand*361,15953
(defun real-wff-dist-expand real-wff-dist-expand364,16023
(defun wff-dist-contract wff-dist-contract380,17167
(defun wff-dist-contract* wff-dist-contract*383,17242
(defun real-wff-dist-contract real-wff-dist-contract386,17316
(defwffop wff-associative-lwff-associative-l419,19471
(defwffop wff-associative-l*wff-associative-l*432,19758
(defwffop wff-associative-rwff-associative-r445,20046
(defwffop wff-associative-r*wff-associative-r*458,20334
(defun wff-associative-l wff-associative-l469,20603
(defwffop assoc-lassoc-l472,20675
(defun assoc-l assoc-l483,20920
(defun wff-associative-l* wff-associative-l*487,21030
(defun real-wff-associative-l real-wff-associative-l490,21104
(defun wff-associative-r wff-associative-r502,21727
(defun wff-associative-r* wff-associative-r*505,21799
(defun real-wff-associative-r real-wff-associative-r508,21873
(defwffop wff-commutativewff-commutative527,22558
(defwffop wff-commutative*wff-commutative*543,22912
(defun wff-commutative wff-commutative557,23247
(defun wff-commutative* wff-commutative*560,23318
(defun real-wff-commutative real-wff-commutative563,23388
(defwffop wff-permutewff-permute581,24233
(defwffop wff-permute*wff-permute*594,24504
(defun wff-permute wff-permute605,24755
(defun wff-permute* wff-permute*608,24818
(defun real-wff-permute real-wff-permute611,24880
(defwffop wff-double-negationwff-double-negation622,25295
(defwffop wff-double-negation*wff-double-negation*635,25549
(defun wff-double-negation wff-double-negation646,25783
(defun wff-double-negation* wff-double-negation*649,25862
(defun real-wff-double-negation real-wff-double-negation652,25940
(defwffop wff-sub-implieswff-sub-implies665,26452
(defwffop wff-sub-implies*wff-sub-implies*678,26725
(defun wff-sub-implies wff-sub-implies689,26979
(defun wff-sub-implies* wff-sub-implies*692,27056
(defun repeat-real-wff-sub-implies repeat-real-wff-sub-implies695,27133
(defun real-wff-sub-implies real-wff-sub-implies701,27386
(defwffop wff-sub-equivwff-sub-equiv718,28077
(defwffop wff-sub-equiv*wff-sub-equiv*731,28363
(defun wff-sub-equiv wff-sub-equiv742,28636
(defun wff-sub-equiv* wff-sub-equiv*745,28709
(defun repeat-real-wff-sub-equiv repeat-real-wff-sub-equiv748,28782
(defun real-wff-sub-equiv real-wff-sub-equiv754,29027
(defwffop change-topchange-top775,29744
(defun change-top change-top784,30068
(defwffop delete-topconn-rscopedelete-topconn-rscope798,31068
(defun delete-topconn-rscope delete-topconn-rscope805,31248
(defwffop delete-topconn-lscopedelete-topconn-lscope811,31521
(defun delete-topconn-lscope delete-topconn-lscope818,31700

wffequ1.lisp,403
(deffile wffequ1wffequ119,688
(defwffop wffeq-abwffeq-ab26,822
(defun wffeq-ab wffeq-ab33,1014
(defwffrec wffeq-ab1wffeq-ab135,1070
(defun wffeq-ab1 wffeq-ab145,1388
(defun true-correspondence true-correspondence81,2699
(defwffop wffeqwffeq87,2906
(defun wffeq wffeq95,3094
(defwffop not-wffeqnot-wffeq109,3549
(defun not-wffeq not-wffeq117,3745
(defun wffmember wffmember120,3802

wffequ2.lisp,1833
(deffile wffequ2wffequ219,688
(defwffop wffeq-nnfwffeq-nnf26,822
(defun wffeq-nnf wffeq-nnf33,997
(defwffrec wffeq-nnf1wffeq-nnf135,1053
(defun wffeq-nnf1 wffeq-nnf139,1132
(defwffop wffeq-lnormwffeq-lnorm86,2723
(defun wffeq-lnorm wffeq-lnorm93,2898
(defwffrec wffeq-lnorm1wffeq-lnorm195,2968
(defmacro collect1 collect199,3071
(defmacro collect2 collect2103,3164
(defun wffeq-lnorm1 wffeq-lnorm1107,3257
(defmacro wffeq-lnorm-basis wffeq-lnorm-basis171,5962
(defun wffeq-lnorm-lsym1 wffeq-lnorm-lsym1189,6504
(defun wffeq-lnorm-lsym2 wffeq-lnorm-lsym2195,6673
(defun wffeq-lnorm-bdwff1 wffeq-lnorm-bdwff1201,6842
(defun wffeq-lnorm-bdwff2 wffeq-lnorm-bdwff2206,7019
(defwffop wffeq-defwffeq-def212,7197
(defun wffeq-def wffeq-def220,7424
(defwffop wffeq-defeqwffeq-defeq227,7741
(defun wffeq-defeq wffeq-defeq235,8003
(defwffop inmost-gar inmost-gar242,8337
(defun inmost-gar inmost-gar250,8533
(defwffrec wffeq-def1wffeq-def1256,8694
(defun wffeq-def-lsym-bind-chk wffeq-def-lsym-bind-chk260,8782
(defun wffeq-def1 wffeq-def1271,9249
(defun common-defn-lam-reduct common-defn-lam-reduct389,14179
(defun common-defn-eq-lam-reduct common-defn-eq-lam-reduct396,14446
(defun common-defn-lam-reduct-p common-defn-lam-reduct-p403,14714
(defun common-defn-eq-lam-reduct-p common-defn-eq-lam-reduct-p410,14981
(defun common-defn-eq-refl=-lam-reduct common-defn-eq-refl=-lam-reduct417,15249
(defun common-defn-lam-reduct-lam common-defn-lam-reduct-lam424,15527
(defun common-defn-lam-reduct-defn common-defn-lam-reduct-defn437,15965
(defun instantiate-position instantiate-position551,20556
(defun first-unblocked-pos first-unblocked-pos571,21204
(defun first-unblocked-pos-1 first-unblocked-pos-1610,22805
(defun first-unblocked-pos-2 first-unblocked-pos-2622,23200

wffing.lisp,201
(deffile wffingwffing16,725
(defun rd rd23,879
(defgwff-type rd-typerd-type30,1072
(defun rd-ckfn rd-ckfn35,1164
(defun rd-getfn rd-getfn38,1202
(defun bytestream-tty bytestream-tty57,1772

wffin.lisp,1106
(deffile wffinwffin13,609
(defvar stoplist stoplist20,759
(defvar spacelist spacelist23,853
(defun char-member char-member25,900
(defun empty-fill-string empty-fill-string28,966
(defun single-string single-string32,1084
(defun intern-char intern-char35,1154
(defun intern-str intern-str38,1221
(defun rd-string rd-string41,1299
(defun get-stringtype get-stringtype46,1451
(defun lexlist-parse lexlist-parse53,1681
(defun groupscan groupscan59,1844
(defun infixscan infixscan125,4174
(defun maketerm maketerm200,6666
(defun lexscan lexscan216,7087
(defun set-superscript-face set-superscript-face273,9161
(defun parse-sup-script parse-sup-script285,9582
(defun lexscan-sp lexscan-sp297,9994
(defun lexscan-quoted-token lexscan-quoted-token384,13187
(defun peel-token peel-token407,13991
(defun peel-list peel-list412,14149
(defun parse-type parse-type417,14301
(defgwff-type string-typestring-type436,15064
(defgwff-type string-bound-varstring-bound-var441,15181
(defun stringbound-p stringbound-p446,15322
(defun rd-string-bound rd-string-bound449,15423

wffinm.lisp,270
(deffile wffinmwffinm21,711
(defflag first-order-mode-parsefirst-order-mode-parse28,847
(defflag lowercaseraiselowercaseraise37,1162
(defflag type-iota-modetype-iota-mode45,1363
(defflag base-typebase-type51,1509
(defmacro bind-priority bind-priority60,1728

wfflmbd2.lisp,1700
(deffile wfflmbd2wfflmbd219,681
(defwffop lexpdlexpd30,971
(defun lexpd lexpd46,1565
(defwffrec lexpd-rec lexpd-rec62,2140
(defun lexpd-rec lexpd-rec66,2261
(defwffrec prepare-for prepare-for112,4034
(defun prepare-for prepare-for117,4180
(defun exceeds exceeds145,5248
(defwffop lcontrlcontr151,5365
(defun lcontr lcontr163,5654
(defwffop lambda-normlambda-norm177,6185
(defun lambda-norm lambda-norm184,6335
(defwffop untyped-lambda-normuntyped-lambda-norm193,6679
(defun untyped-lambda-norm untyped-lambda-norm201,6909
(defwffop ab-normal-pab-normal-p208,7186
(defun ab-normal-p ab-normal-p214,7335
(defun ab-normal-p1 ab-normal-p1220,7483
(defwffop ab-normalizeab-normalize240,8040
(defun ab-normalize ab-normalize252,8432
(defun ab-normalize-main ab-normalize-main262,8717
(defwffop etanormetanorm288,9735
(defun etanorm etanorm299,9993
(defwffop etacontretacontr312,10495
(defun etacontr etacontr323,10745
(defun eta-applic-p eta-applic-p334,11114
(defun eta-exp eta-exp341,11413
(defwffop eta-expeta-exp348,11628
(defun eta-to-base eta-to-base355,11782
(defwffop eta-to-baseeta-to-base360,12000
(defun long-eta long-eta367,12185
(defun long-eta-feed long-eta-feed379,12704
(defwffop long-etalong-eta383,12830
(defun rewrite-all-equivalence rewrite-all-equivalence405,13562
(defwffop rewrite-all-equivalencerewrite-all-equivalence439,14937
(defwffop wffeq-ab-lambdawffeq-ab-lambda447,15167
(defun wffeq-ab-lambda wffeq-ab-lambda458,15535
(defwffop wffeq-ab-betawffeq-ab-beta461,15643
(defun wffeq-ab-beta wffeq-ab-beta472,16001
(defwffop wffeq-ab-etawffeq-ab-eta475,16087
(defun wffeq-ab-eta wffeq-ab-eta486,16444

wfflmbd-macros.lisp,90
(deffile wfflmbd-macroswfflmbd-macros19,687
(defmacro lambda-contr lambda-contr26,826

wffmacros.lisp,241
(deffile wffmacroswffmacros20,674
(defmacro bdvar bdvar25,770
(defmacro binder binder27,809
(defmacro bdhead bdhead29,849
(defflag make-wffops-labelsmake-wffops-labels33,910
(defflag retain-initial-typeretain-initial-type42,1123

wffmbed.lisp,1505
(deffile wffmbedwffmbed12,589
(defwffop mbed-and-leftmbed-and-left18,762
(defun mbed-and-left mbed-and-left32,1228
(defun mbed-conn mbed-conn35,1296
(defwffop mbed-and-rightmbed-and-right38,1373
(defun mbed-and-right mbed-and-right52,1839
(defwffop mbed-existentialmbed-existential55,1908
(defun mbed-existential mbed-existential69,2417
(defwffop mbed-existential1mbed-existential172,2494
(defun mbed-existential1 mbed-existential186,3001
(defwffop mbed-forallmbed-forall89,3083
(defun mbed-forall mbed-forall103,3581
(defun mbed-quant mbed-quant106,3653
(defwffop mbed-implics-leftmbed-implics-left116,4022
(defun mbed-implics-left mbed-implics-left130,4514
(defwffop mbed-implics-rightmbed-implics-right133,4593
(defun mbed-implics-right mbed-implics-right147,5086
(defun mbed-implics mbed-implics150,5166
(defwffop mbed-or-leftmbed-or-left153,5246
(defun mbed-or-left mbed-or-left167,5707
(defwffop mbed-or-rightmbed-or-right170,5773
(defun mbed-or-right mbed-or-right184,6235
(defwffop mbed-lambdambed-lambda187,6302
(defun mbed-lambda mbed-lambda202,6797
(defwffop mbed-equiv-rightmbed-equiv-right205,6871
(defun mbed-equiv-right mbed-equiv-right219,7358
(defwffop mbed-equiv-leftmbed-equiv-left223,7434
(defun mbed-equiv-left mbed-equiv-left237,7919
(defwffop mbed=leftmbed=left240,7991
(defun mbed=left mbed=left255,8465
(defun mbed=conn mbed=conn258,8524
(defwffop mbed=rightmbed=right265,8783
(defun mbed=right mbed=right279,9250

wffmodes.lisp,116
(deffile wffmodeswffmodes19,648
(defmode first-orderfirst-order24,769
(defmode higher-orderhigher-order33,972

wffmve.lisp,294
(deffile wffmvewffmve21,704
(defwffop gargar28,824
(defun gar gar38,1167
(defwffop replace-garreplace-gar46,1392
(defun replace-gar replace-gar57,1746
(defwffop gdrgdr67,2068
(defun gdr gdr78,2417
(defwffop replace-gdrreplace-gdr85,2639
(defun replace-gdr replace-gdr100,3087

wffneg1.lisp,388
(deffile wffneg1wffneg119,687
(defwffop pull-negationpull-negation26,827
(defun pull-negation pull-negation36,1028
(defwffop negwffnegwff57,1698
(defun negwff negwff66,1890
(defwffop push-negationpush-negation69,1961
(defun push-negation push-negation80,2224
(defwffop neg-normneg-norm102,3115
(defun neg-norm neg-norm112,3331
(defun neg-norm-rec neg-norm-rec115,3380

wffop-otl.lisp,1508
(deffile wffop-otlwffop-otl17,641
(defwffop ss25,833
(defun s s37,1180
(defwffop subst-some-occssubst-some-occs39,1245
(defun subst-some-occs subst-some-occs51,1699
(defwffop free-forfree-for56,1873
(defwffop not-free-innot-free-in67,2258
(defun not-free-in not-free-in75,2471
(defwffop not-free-in-wffsetnot-free-in-wffset79,2535
(defun not-free-in-wffset not-free-in-wffset87,2773
(defwffop not-free-in-hypsnot-free-in-hyps91,2884
(defvar rule-hupper rule-hupper102,3142
(defvar rule-hlower rule-hlower103,3167
(defvar check-hyps-again check-hyps-again104,3192
(defun not-free-in-hyps not-free-in-hyps106,3303
(defun free-in-hyps free-in-hyps121,3847
(defwffop non-atomicnon-atomic135,4374
(defun non-atomic non-atomic143,4639
(defwffop non-atomic-or-truthvaluenon-atomic-or-truthvalue148,4821
(defun non-atomic-or-truthvalue non-atomic-or-truthvalue157,5136
(defwffop is-variableis-variable165,5401
(defun is-variable is-variable174,5599
(defwffop inst-definst-def179,5688
(defun inst-def inst-def189,5911
(defwffop ab-changeab-change206,6291
(defwffop lnormlnorm219,6698
(defun lnorm lnorm229,6994
(defflag lambda-convlambda-conv235,7179
(definfo beta-eta-togetherbeta-eta-together251,7921
(definfo beta-eta-onlybeta-eta-only256,8113
(definfo beta-eta-separatebeta-eta-separate261,8302
(defwffop lnorm-betalnorm-beta266,8494
(defun lnorm-beta lnorm-beta276,8736
(defwffop lnorm-etalnorm-eta279,8784
(defun lnorm-eta lnorm-eta289,9025

wffout.lisp,1052
(deffile wffoutwffout22,734
(defflag allscopeflagallscopeflag29,873
(defflag atomvalflagatomvalflag35,1036
(defflag blank-lines-insertedblank-lines-inserted41,1192
(defflag charsizecharsize48,1407
(defflag displaywffdisplaywff56,1656
(defflag fillineflagfillineflag62,1808
(defflag first-order-print-modefirst-order-print-mode69,1985
(defflag flushleftflagflushleftflag76,2181
(defflag localleftflaglocalleftflag83,2384
(defflag ppwfflagppwfflag91,2558
(defflag printdepthprintdepth99,2814
(defflag printtypesprinttypes106,3025
(defflag printtypes-allprinttypes-all112,3160
(defflag leftmarginleftmargin121,3497
(defflag rightmarginrightmargin127,3643
(defflag use-internal-print-modeuse-internal-print-mode135,3814
(defflag scopescope148,4396
(defflag use-dotuse-dot155,4537
(defvar ppvirtflag ppvirtflag162,4717
(defvar pc pc164,4742
(defvar ppwfflist ppwfflist166,4759
(defvar ppwfflength ppwfflength168,4783
(defflag slides-preambleslides-preamble170,4807
(defvar slides-width slides-width177,5028

wffprim.lisp,3315
(deffile wffprimwffprim13,604
(defun getnameroot getnameroot20,723
(defun nameroot-type nameroot-type27,914
(defun nameroot nameroot34,1156
(defun name-eq name-eq41,1355
(defflag ren-var-fnren-var-fn44,1430
(definfo ren-var-x1ren-var-x159,2086
(definfo ren-var-x11ren-var-x1165,2314
(definfo ren-var-xaren-var-xa71,2550
(defun ren-var-xa ren-var-xa78,2756
(defun last-^-with-int last-^-with-int107,4227
(defun ren-var-x1 ren-var-x1121,4712
(defun ren-var-x11 ren-var-x11150,5881
(defun digits digits185,7203
(defun getren-counter getren-counter190,7370
(defun setren-counter setren-counter192,7435
(defun inherit-abbrev inherit-abbrev194,7514
(defflag rename-all-bd-varsrename-all-bd-vars203,7916
(defun get-pmdefn get-pmdefn211,8172
(defun get-defn get-defn222,8469
(defun get-defn-1 get-defn-1228,8585
(defun fullname fullname230,8649
(defun type-to-string type-to-string233,8752
(defun type-to-stream type-to-stream244,9092
(defun type-to-lib-stream type-to-lib-stream258,9483
(defun create-propsym create-propsym267,9772
(defun remove-type-abbrev remove-type-abbrev275,10083
(defwffop intern-substintern-subst280,10294
(defun intern-subst intern-subst287,10473
(defwffop rename-bd-varrename-bd-var290,10576
(defun rename-bd-var rename-bd-var299,10811
(defwffop change-print-typechange-print-type308,11174
(defun change-print-type change-print-type316,11478
(defwffop substitute-typessubstitute-types323,11761
(defun substitute-types substitute-types330,11968
(defun subst-1-type subst-1-type352,12904
(defwffop subst-1-typesubst-1-type355,12997
(defwffop typetype362,13229
(defun typeabbrev-p typeabbrev-p369,13363
(defun get-type-def get-type-def372,13438
(defun type-car type-car374,13489
(defun type-cdr type-cdr380,13655
(defun type-consp type-consp385,13820
(defun type type389,13936
(defun unabbreviated-type unabbreviated-type395,14126
(defun unabbreviate-type unabbreviate-type399,14219
(defun boundwfftype boundwfftype407,14428
(defwffop free-vars-offree-vars-of423,15031
(defun free-vars-of free-vars-of433,15289
(defwffrec free-vars free-vars435,15361
(defun free-vars free-vars439,15456
(defwffop bindingbinding450,15951
(defun binding binding458,16126
(defwffop bindvarbindvar463,16297
(defun bindvar bindvar470,16446
(defwffop bindheadbindhead475,16617
(defun bindhead bindhead481,16745
(defun fresh-var fresh-var486,16917
(defun fresh-var-1 fresh-var-1490,17053
(defun bind-var-wff bind-var-wff492,17102
(defun bind-var-wff-n bind-var-wff-n496,17244
(defun attach-head attach-head501,17389
(defwffop apply-wffapply-wff505,17510
(defun type-of-arg-1 type-of-arg-1512,17668
(defwffop type-of-arg-1type-of-arg-1516,17823
(defun function-of function-of523,18003
(defun fntype-list fntype-list529,18089
(defun cartsqproj-type cartsqproj-type535,18294
(defun inmost-car inmost-car541,18502
(defun apply-wff apply-wff546,18587
(defun apply-wff-n apply-wff-n551,18766
(defun ab-change ab-change554,18873
(defun ds-con-match ds-con-match566,19415
(defun match-con-rec match-con-rec581,19813
(defun dupwff dupwff595,20221
(defwffop dupwffdupwff599,20372
(defun get-all-defns get-all-defns614,20928
(defun get-all-defns-rec get-all-defns-rec627,21396

wffrec.lisp,219
(deffile wffrecwffrec19,646
(defmacro boolean-recursion-escape boolean-recursion-escape25,766
(defmacro boolean-recursion boolean-recursion40,1306
(defun essexist essexist54,1767
(defun essuniv essuniv58,1904

wffsav.lisp,437
(deffile wffsavwffsav19,694
(defvar default-lsp-file default-lsp-file26,838
(defmexpr append-wffsappend-wffs31,1081
(defun append-wffs append-wffs45,1655
(defun help-string-default help-string-default51,1927
(defmexpr append-wffappend-wff56,2068
(defun append-wff append-wff71,2764
(defwffop sv-wffsv-wff81,3078
(defedop savesave97,3785
(defun sv-wff sv-wff102,3861
(defun write-single-wff write-single-wff108,3960

wffsav-mac.lisp,211
(deffile wffsav-macwffsav-mac13,609
(defun weak-label-p weak-label-p20,764
(defcategory savedwffsavedwff23,843
(defun savedwff-mhelp savedwff-mhelp32,1046
(defun read-weak-label read-weak-label36,1179

wff-skolem.lisp,913
(deffile wff-skolemwff-skolem13,611
(defun make-skolem-fn make-skolem-fn20,757
(defwffop simul-substitute-l-term-varsimul-substitute-l-term-var33,1202
(defun simul-substitute-l-term-var simul-substitute-l-term-var46,1606
(defun simul-substitute-l-term-var-rec simul-substitute-l-term-var-rec49,1716
(defun simul-substitute-term-var simul-substitute-term-var75,2722
(defun simul-substitute-term-var-rec simul-substitute-term-var-rec78,2828
(defwffop skolems1skolems197,3497
(defedop sk1sk1109,3964
(defun skolems1 skolems1114,4040
(defun skolems1-main skolems1-main117,4114
(defwffop skolems3skolems3146,5088
(defedop sk3sk3161,5713
(defun skolems3 skolems3167,5790
(defun skolems3-main skolems3-main170,5860
(defun name-skolem-cap name-skolem-cap191,6503
(defedop clause-formclause-form200,6776
(defwffop clause-formclause-form205,6865
(defun clause-form clause-form214,7135

wff-skolem-mac.lisp,92
(deffile wff-skolem-macwff-skolem-mac19,674
(defflag name-skolem-fnname-skolem-fn32,975

wffsub1.lisp,982
(deffile wffsub1wffsub119,675
(defwffop substitute-term-varsubstitute-term-var26,835
(defun substitute-term-var substitute-term-var39,1201
(defun subst-term-var-rec subst-term-var-rec46,1491
(defwffop subst-some-occurrencessubst-some-occurrences63,2119
(defun subst-some-occurrences subst-some-occurrences75,2495
(defwffrec s-s-o-recs-s-o-rec79,2641
(defun s-s-o-rec s-s-o-rec83,2754
(defwffop subst-occssubst-occs103,3551
(defun subst-occs subst-occs117,4029
(defwffop r-prime-restrr-prime-restr135,4766
(defun r-prime-restr r-prime-restr144,5088
(defwffop same-modulo-equalitysame-modulo-equality157,5619
(defun same-modulo-equality same-modulo-equality167,5972
(defun subst-occs*** subst-occs***184,6727
(defun wff-length wff-length206,7569
(defun substitute-term-term substitute-term-term218,7883
(defun generate-eq-list generate-eq-list247,9197
(defun replace-wff-posn replace-wff-posn289,10497
(defun get-wff-posn get-wff-posn296,10718

wffsub2.lisp,429
(deffile wffsub2wffsub221,695
(defwffop substitute-l-term-varsubstitute-l-term-var28,855
(defun substitute-l-term-var substitute-l-term-var42,1240
(defwffrec subst-l-term-recsubst-l-term-rec45,1354
(defun subst-l-term-rec subst-l-term-rec50,1466
(defwffop do-primsubdo-primsub70,2311
(defun do-primsub do-primsub82,2733
(defwffrec do-primsub-recdo-primsub-rec87,2897
(defun do-primsub-rec do-primsub-rec91,2965

wfftst.lisp,3920
(deffile wfftstwfftst19,682
(defmacro defwfftest defwfftest28,843
(defutil defwfftestdefwfftest36,1014
(DEFWFFTEST tps-object tps-object41,1208
(defwfftest logconst-plogconst-p46,1405
(defun logconst-q logconst-q53,1563
(defun logconst-p logconst-p55,1611
(defwfftest propsym-ppropsym-p59,1701
(defun propsym-q propsym-q67,1879
(defun propsym-p propsym-p70,1971
(defwfftest pmpropsym-ppmpropsym-p75,2107
(defun pmpropsym-q pmpropsym-q84,2336
(defun pmpropsym-p pmpropsym-p86,2399
(defun pmprsym-p pmprsym-p91,2539
(defun pmprsym-q pmprsym-q94,2648
(defwfftest pmabbrev-ppmabbrev-p97,2716
(defun pmabbrev-q pmabbrev-q106,2958
(defun pmabbrev-p pmabbrev-p108,3021
(defun pmabbsym-p pmabbsym-p113,3161
(defun pmabbsym-q pmabbsym-q116,3265
(defwfftest abbrev-pabbrev-p120,3329
(defun abbrev-q abbrev-q128,3534
(defun abbrev-p abbrev-p130,3597
(defwfftest anyabbrev-panyabbrev-p135,3720
(defun anyabbrev-q anyabbrev-q138,3783
(defun anyabbrev-p anyabbrev-p140,3850
(defwfftest anypropsym-panypropsym-p142,3917
(defun anypropsym-q anypropsym-q145,3983
(defun anypropsym-p anypropsym-p147,4053
(defwfftest lsymbol-plsymbol-p149,4123
(defun lsymbol-q lsymbol-q156,4261
(defun lsymbol-p lsymbol-p158,4302
(defwfftest wff-applic-pwff-applic-p169,4610
(defun wff-applic-p wff-applic-p172,4715
(defwfftest boundwff-pboundwff-p178,4837
(defun boundwff-p boundwff-p188,5096
(defun boundwff-q boundwff-q197,5402
(defun boundwff-p boundwff-p204,5594
(defun binder-q binder-q213,5816
(defun binder-p binder-p215,5887
(defwfftest gwff-pgwff-p221,6052
(defvar gwff-p-looping gwff-p-looping224,6132
(defun gwff-p gwff-p226,6178
(defun go-fetch-gwff go-fetch-gwff240,6683
(defwffrec gwff-qgwff-q252,7264
(defun gwff-q gwff-q255,7302
(defwfftest gvar-pgvar-p262,7542
(defun gvar-p gvar-p265,7639
(defun gvar-q gvar-q266,7720
(defwfftest label-plabel-p270,7817
(defun not-true-or-nil not-true-or-nil276,8006
(defun label-p label-p283,8176
(defun label-q label-q286,8216
(defwfftest reduct-preduct-p290,8341
(defun reduct-p reduct-p293,8405
(defwfftest legal-type-plegal-type-p299,8570
(defun legal-type-p legal-type-p302,8632
(defwffrec legal-type-p1legal-type-p1305,8705
(defun legal-type-p1 legal-type-p1308,8750
(defun legal-boundwfftype-p1 legal-boundwfftype-p1318,9128
(defwffop infix-pinfix-p337,9799
(defun infix-p infix-p344,9955
(defwffop infix-op-pinfix-op-p350,10155
(defun infix-op-p infix-op-p357,10308
(defwffop type-equaltype-equal362,10445
(defun type-equal type-equal369,10628
(defwffop equal-type-pequal-type-p372,10726
(defun equal-type-p equal-type-p379,10903
(defwffop implies-pimplies-p389,11318
(defun implies-p implies-p396,11464
(defwffop equiv-pequiv-p402,11669
(defun equiv-p equiv-p409,11813
(defwffop and-pand-p415,12012
(defun and-p and-p422,12154
(defwffop or-por-p429,12348
(defun or-p or-p436,12488
(defwffop not-pnot-p442,12678
(defun not-p not-p449,12813
(defwffop ae-bd-wff-pae-bd-wff-p455,12968
(defun ae-bd-wff-p ae-bd-wff-p462,13141
(defwffop lambda-bd-plambda-bd-p470,13350
(defun lambda-bd-p lambda-bd-p477,13499
(defwffop free-infree-in485,13673
(defun free-in free-in492,13844
(defun free-for free-for499,14125
(defwffop a-bd-wff-pa-bd-wff-p511,14510
(defun a-bd-wff-p a-bd-wff-p518,14667
(defwffop e-bd-wff-pe-bd-wff-p525,14838
(defun e-bd-wff-p e-bd-wff-p532,14997
(defmacro infix-op infix-op539,15168
(defwffop equals-pequals-p542,15212
(defun equals-p equals-p549,15354
(defun equality-p equality-p555,15558
(defun contains-equality contains-equality567,16015
(defun contains-= contains-=574,16345
(defun contains-ext= contains-ext=577,16408
(defun contains-ext=i contains-ext=i580,16471
(defun real-ext=-p real-ext=-p583,16535
(defmacro ext=-p ext=-p597,17195
(defmacro ext=0-p ext=0-p600,17254

wfftyp.lisp,996
(deffile wfftypwfftyp13,604
(defmacro prtwff prtwff24,913
(defvar global-type global-type28,992
(defutil prtwffprtwff30,1018
(defcategory wffrec%wffrec%44,1673
(defcategory getgwfftypegetgwfftype55,1934
(defun get-gwff0 get-gwff067,2162
(defun getwff-subtype getwff-subtype72,2287
(defun get-only-rwff get-only-rwff77,2437
(defun getrwff getrwff84,2711
(defun good-occ good-occ90,2879
(defun typesym-p typesym-p92,2936
(defun get-real-typesym get-real-typesym110,3721
(defun get-real-typesym-aux get-real-typesym-aux115,3851
(defun next-proposed-tvar* next-proposed-tvar*125,4283
(defun printype printype138,4689
(defcategory wffopwffop145,4874
(defgwff-type wffop-typewffop-type175,5731
(defun wffop-ckfn wffop-ckfn180,5873
(defun wffop-getfn wffop-getfn183,5961
(defun typevar-in typevar-in191,6180
(defun typevar-in-typesym typevar-in-typesym201,6613
(defun not-typevar-in-wffset not-typevar-in-wffset211,6983
(defun typevar-p typevar-p221,7413

xterm.lisp,762
(deffile xtermxterm24,886
(defstyle xtermxterm32,1047
(defvar xterm-characters xterm-characters54,1729
(defvar xterm-bold-in-use xterm-bold-in-use55,1759
(defvar xterm-start-bold xterm-start-bold56,1790
(defvar xterm-end-bold xterm-end-bold57,1842
(defun pp-symbol-xterm pp-symbol-xterm60,1893
(defun pp-xterm-special-symbolpp-xterm-special-symbol80,2675
(defun pp-space-p-xterm pp-space-p-xterm91,3039
(defun pp-typesym-xterm pp-typesym-xterm107,3525
(defun print-greek-type-char print-greek-type-char123,3991
(defun xterm-bold-font xterm-bold-font137,4448
(defun xterm-normal-font xterm-normal-font143,4594
(defun pptyox pptyox151,4740
(defflag window-stylewindow-style269,7112
(defflag use-window-styleuse-window-style291,7974
