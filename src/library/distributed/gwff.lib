(:name ADDHYP1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "P(OI) a(I) IMPLIES FORALL x(I) Q(OI) x(I) IMPLIES.FORALL x(I) P(OI) x(I) IMPLIES Q(OI) a(I)"
:needed-objects   NIL
:mhelp "A gwff for testing add-hyp"
:other-attributes NIL
:other-remarks "
")


(:name ADDHYP2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "P(OI) a(I) IMPLIES FORALL x(I) Q(OI) x(I) IMPLIES.FORALL x(I) P(OI) x(I) IMPLIES.R(OI) x(I) IMPLIES Q(OI) a(I)"
:needed-objects   NIL
:mhelp "A gwff for testing add-hyp"
:other-attributes NIL
:other-remarks "
")


(:name ADDHYP3
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS x(I) P(OI) x(I) IMPLIES B(O) IMPLIES B(O) IMPLIES.Q(OI) x(I) IMPLIES EXISTS x(I) Q(OI) x(I)"
:needed-objects   NIL
:mhelp "a gwff for testing add-hyp"
:other-attributes NIL
:other-remarks "
")


(:name ADDHYP4
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "y(I) =(OII) y(I) IMPLIES B(O) IMPLIES.P(OA) x(A) IMPLIES EXISTS x(A) P(OA) x(A)"
:needed-objects   NIL
:mhelp "a gwff for testing add-hyp"
:other-attributes NIL
:other-remarks "
")


(:name ADDHYP5
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "TRUTH IMPLIES FORALL x(I) [f(II) x(I) =(OII) x(I)] IMPLIES.LAMBDA x(I) f(II) [f(II) x(I)] =(O(II)(II)) LAMBDA x(I) x(I) IMPLIES B(O) IMPLIES.P(OI) x(I) IMPLIES B(O)"
:needed-objects   NIL
:mhelp "a gwff for testing add-hyp"
:other-attributes NIL
:other-remarks "
")


(:name ADDHYP6
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS x(I) P(OI) x(I) IMPLIES.FORALL x(I) [P(OI) x(I) IMPLIES Q(OI) x(I)] IMPLIES EXISTS x(I) Q(OI) x(I)"
:needed-objects   NIL
:mhelp "a gwff for testing add-hyp where hyp is given by Rule C"
:other-attributes NIL
:other-remarks "
")


(:name ADDHYP7
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) P(OI) x(I) IMPLIES FORALL x(I) Q(OI) x(I) IMPLIES.R1(OI) x(I) OR R2(OI) x(I) OR R3(OI) x(I) IMPLIES C(O)"
:needed-objects   NIL
:mhelp "a gwff for testing add-hyp with cases"
:other-attributes NIL
:other-remarks "
")


(:name ADDHYP8
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) P(OI) x(I) IMPLIES FORALL x(I) Q(OI) x(I) IMPLIES.R1(OI) x(I) OR R2(OI) x(I) OR R3(OI) x(I) OR R4(OI) x(I) IMPLIES C(O)"
:needed-objects   NIL
:mhelp "a gwff for testing add-hyp with cases"
:other-attributes NIL
:other-remarks "
")


(:name ARR-COM-DMG5
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Sunday, March 12, 2000 at 18:50:29."
:description "p(O) AND [~a(O) OR ~b(O) OR.~c(O) OR ~d(O)] OR [s(O) IMPLIES t(O)] IMPLIES [~[a(O) AND b(O)] OR ~.c(O) AND d(O)] AND p(O) OR.s(O) IMPLIES t(O)"
:needed-objects   NIL
:mhelp "A propositional problem suggested by Jay Hunschel Kim"
:other-attributes NIL
:other-remarks "
")


(:name AX2DEP
:type GWFF
:context UNCLASSIFIED
:keywords NIL
:provability NIL
:proof-date NIL
:description "Q0RULE-R(O) AND Q0AXIOM1(O) AND Q0AXIOM3(O) IMPLIES Q0AXIOM2(O)"
:needed-objects   (Q0RULE-R Q0AXIOM1 Q0AXIOM2 Q0AXIOM3)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name BAFFLER-VARIANT
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, February  6, 2001 at 16:59:15."
:description "EXISTS y(I) FORALL x(I).P(OI) y(I) IMPLIES P(OI).f(III) y(I) x(I)"
:needed-objects   NIL
:mhelp "A variant of X2119, where the exp var
shows up in the second exp term."
:other-attributes NIL
:other-remarks "
")


(:name BAFFLER1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS y(I) FORALL x(I).P1(OI) x(I) IMPLIES P1(OI) y(I)"
:needed-objects   NIL
:mhelp "An example where we need to duplicate in order to
instantiate with a selected var.  Very similar to X2119.
See also BAFFLER2 & BAFFLER3 to see how this works for a general n (where
we need to duplicate n times)."
:other-attributes NIL
:other-remarks "
")


(:name BAFFLER2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS y(I) FORALL x(I).P1(OI) x(I) AND [P1(OI) y(I) IMPLIES P2(OI) x(I)] IMPLIES P2(OI) y(I)"
:needed-objects   NIL
:mhelp "An example where we need to duplicate twice to use
selected vars as expansion terms.  See also BAFFLER1 & BAFFLER3."
:other-attributes NIL
:other-remarks "
")


(:name BAFFLER3
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS y(I) FORALL x(I).P1(OI) x(I) AND [P1(OI) y(I) IMPLIES P2(OI) x(I)] AND [P2(OI) y(I) IMPLIES P3(OI) x(I)] IMPLIES P3(OI) y(I)"
:needed-objects   NIL
:mhelp "An example where we need to duplicate three times to use
selected vars as expansion terms.  See also BAFFLER1 & BAFFLER2."
:other-attributes NIL
:other-remarks "
")


(:name BLEDSOE-FENG-6
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Friday, May 19, 2000 at 23:39:32."
:description "P(OII) a(I) b(I) AND FORALL E(OI) Q(O(OI)I) b(I) E(OI) IMPLIES EXISTS A(OI) FORALL g(I).A(OI) g(I) IMPLIES EXISTS x(I) [P(OII) g(I) x(I) AND Q(O(OI)I) x(I) A(OI)] AND A(OI) a(I)"
:needed-objects   NIL
:mhelp "Set Var, JAR paper, p. 299, Example 6: BLEDSOE-FENG-6 (I created this, to distinguish it from BLEDSOE6, apparently from another source)"
:other-attributes NIL
:other-remarks "
")


(:name BLEDSOE-FENG-7
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Friday, May 19, 2000 at 23:55:51."
:description "EXISTS A(OI).~A(OI) a(I)"
:needed-objects   NIL
:mhelp "Set Var paper in JAR, p. 299, Example 7: BLEDSOE-FENG-7 (Chad created this, to distinguish it from BLEDSOE7, apparently from another source)
         (DOES NOT REQUIRE A PRIMSUB)
         Extremely trivial!  Just says there is some set that doesn't contain a given object a -- so the empty set works.
"
:other-attributes NIL
:other-remarks "
")


(:name BLEDSOE-FENG-8
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Saturday, May 20, 2000 at  0:04:59."
:description "<(OII) -2(I) 0(I) IMPLIES.FORALL u(I) FORALL v(I) [<(OII) u(I) 0(I) IMPLIES ~.u(I) =(OII) absval(II) v(I)] IMPLIES EXISTS A(OI).FORALL y(I) [~A(OI).absval(II) y(I)] AND A(OI) -2(I)"
:needed-objects   NIL
:mhelp "Set Var JAR paper, p. 299, Example 8: BLEDSOE-FENG-8 (note that we have to include -2 < 0 in the hyp)
There is a set containing no nonnegative numbers and containing -2.
Bledsoe's solution is the set of negative numbers, by saying the set of z not equal to any [absval y]"
:other-attributes NIL
:other-remarks "
")


(:name BLEDSOE-FENG-9
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "~<(OII) 0(I) 0(I) AND ~<(OII) [div(III) 0(I) 2(I)] 0(I) AND ~<(OII) [*(III) 2(I) 0(I)] 0(I) IMPLIES EXISTS A(OI).FORALL x(I) FORALL y(I) [A(OI) x(I) AND A(OI) y(I) IMPLIES ~<(OII) [div(III) x(I) 2(I)] 0(I) AND ~<(OII) y(I) [div(III) x(I) 2(I)] AND ~<(OII) [*(III) 2(I) x(I)] y(I)] AND A(OI) 0(I)"
:needed-objects   NIL
:mhelp "Set Var JAR, p. 299, Example 9: The soln is A:={0}"
:other-attributes NIL
:other-remarks "
")


(:name BLEDSOE-FENG-SV-10
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER NEEDS-SETSUB)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, April  9, 2001 at 16:19:29."
:description "FORALL D(OI) FORALL G(O(OI)) [G(O(OI)) SUBSET(O(O(OI))(O(OI))) OPEN(O(OI)) AND D(OI) =(O(OI)(OI)) SETUNION(OI(O(OI))) G(O(OI)) IMPLIES OPEN(O(OI)) D(OI)] IMPLIES FORALL B(OI).FORALL x(I) [B(OI) x(I) IMPLIES EXISTS D(OI).OPEN(O(OI)) D(OI) AND D(OI) x(I) AND D(OI) SUBSET(O(OI)(OI)) B(OI)] IMPLIES OPEN(O(OI)) B(OI)"
:needed-objects   NIL
:mhelp "Example 10 from Bledsoe and Feng's SET VAR paper from JAR, p. 308.
A simple topology theorem.  If a set B has the property that every x in B has a nbhd D subset B,
then B is open.  This requires a primsub corresponding to the set of all subsets of B.
Note that we do not have to include the 'set theory axioms' because we are working in type theory.
Also, I have stated closure of open sets under unions with an equation D = SETUNION G
as did Bledsoe and Feng.  
This is necessary to prevent having to do equational reasoning
that TPS cannot currently do.
(Actually, Bledsoe and Feng assume 'Lemma 1' which amounts
to the same thing as closure under unions, except with the quantifier on G pushed into
the antecedent of an implication.)"
:other-attributes NIL
:other-remarks "
")


(:name BLEDSOE-FENG-SV-EO1-W-LEM
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) [EXISTS u(I) [x(I) =(OII) *(III) 2(I) u(I)] EQUIV ~EXISTS v(I).s(II) x(I) =(OII) *(III) 2(I) v(I)] IMPLIES EXISTS A(OI) FORALL x(I).A(OI) x(I) EQUIV ~A(OI).s(II) x(I)"
:needed-objects   NIL
:mhelp "Set-Var JAR paper by Bledoe and Feng,
p. 302, Example EO1: BLEDSOE-FENG-SV-EO1 is not a theorem!  We need to assume
   the 'Lemma' forall x [exists u [x = [* 2 u]] equiv ~exists v [[s x] = [* 2 v]]]
   in the hyp.  This version is BLEDSOE-FENG-SV-EO1-W-LEM
"
:other-attributes NIL
:other-remarks "
")


(:name BLEDSOE-FENG-SV-IMV-SOL-2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL f(II) FORALL 0(I).FORALL A(OI) [EXISTS l(I) A(OI) l(I) AND EXISTS u(I) FORALL x(I) [A(OI) x(I) IMPLIES <(OII) x(I) u(I) OR x(I) =(OII) u(I)] IMPLIES EXISTS l(I).FORALL x(I) [A(OI) x(I) IMPLIES <(OII) x(I) l(I) OR x(I) =(OII) l(I)] AND FORALL y(I).FORALL x(I) [A(OI) x(I) IMPLIES <(OII) x(I) y(I) OR x(I) =(OII) y(I)] IMPLIES <(OII) l(I) y(I) OR l(I) =(OII) y(I)] AND FORALL x(I) [<(OII) 0(I) [f(II) x(I)] IMPLIES EXISTS t(I).<(OII) t(I) x(I) AND FORALL s(I).<(OII) t(I) s(I) AND <(OII) s(I) x(I) IMPLIES <(OII) 0(I).f(II) s(I)] AND FORALL x(I) [<(OII) [f(II) x(I)] 0(I) IMPLIES EXISTS t(I).<(OII) x(I) t(I) AND FORALL s(I).<(OII) s(I) t(I) AND <(OII) x(I) s(I) IMPLIES <(OII) [f(II) s(I)] 0(I)] AND TRANSITIVE(O(OII)) <(OII) AND FORALL x(I) [~<(OII) x(I) x(I)] AND FORALL x(I) FORALL y(I) [<(OII) x(I) y(I) OR <(OII) y(I) x(I) OR x(I) =(OII) y(I)] AND <(OII) a(I) b(I) AND <(OII) [f(II) a(I)] 0(I) AND <(OII) 0(I) [f(II) b(I)] IMPLIES EXISTS x(I).<(OII) a(I) x(I) AND <(OII) x(I) b(I) AND ~<(OII) [f(II) x(I)] 0(I) AND ~<(OII) 0(I).f(II) x(I)"
:needed-objects   (TRANSITIVE)
:mhelp "A revised version of BLEDSOE-FENG-SV-IMV-SOL, the intermediate value theorem from
Bledsoe and Feng's Set Var paper.  The original BLEDSOE-FENG-SV-IMV-SOL in the TPS library
uses r ambiguously as < and <=.  If we interpret r as <=,
then the two cty lemma assumptions become degenerate and imply nothing.  If we interpret r as <, then
we obviously can't prove f l < 0 and f l > 0.  So, it was not a theorem.
Also, the hyp about existence of sups used r as <=.
The current version interprets r as <.  In fact, I used the symbol < to make this clear.
Finally, I added hypotheses corresponding to < being a total order.
Bledsoe's prover builds in some inequality reasoning, so we may need this."
:other-attributes NIL
:other-remarks "
")


(:name BLEDSOE4-W-AX
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Friday, May 19, 2000 at 23:32:19."
:description "FORALL x(I) FORALL y(I) [<(OII) x(I) y(I) IMPLIES ~.x(I) =(OII) y(I)] IMPLIES.<(OII) a(I) b(I) AND <(OII) b(I) c(I) IMPLIES EXISTS A(OI).~A(OI) a(I) AND A(OI) b(I) AND ~A(OI) c(I)"
:needed-objects   NIL
:mhelp "BLEDSOE4 (p. 296, Example 4 of the Set-Var paper in JAR) is not a theorem without
assuming < implies not =.  This gwff (BLEDSOE4-W-AX) puts this axiom into the hyp."
:other-attributes NIL
:other-remarks "
")


(:name BLEDSOE5
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "P(OI) [f(II) b(I)] IMPLIES EXISTS s(I) EXISTS A(OI).FORALL x(I) [A(OI) x(I) IMPLIES P(OI) x(I)] AND A(OI).f(II) s(I)"
:needed-objects   NIL
:mhelp "Set Var paper from JAR p. 298, Example 5: BLEDSOE5 (I create this gwff in the lib
                        -- there are BLEDSOE5{A-F} in andrews lib, but they appear to be unrelated?)"
:other-attributes NIL
:other-remarks "
")


(:name BOOL25
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL U(A) [~X(OA) U(A) EQUIV.Y(OA) U(A) EQUIV Z(OA) U(A)] IMPLIES X(OA) =(O(OA)(OA)) LAMBDA U(A).~.Y(OA) U(A) EQUIV Z(OA) U(A)"
:needed-objects   NIL
:mhelp "JFM Vol 1 Bool.1 Thm 25.
If for every x holds x in X iff x in Y iff x in Z, then
X = Y symm-diff Z.
This requires extensionality, but only trivially.
TPS can prove it.
"
:other-attributes NIL
:other-remarks "
")


(:name COM-DMG02
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Sunday, March 12, 2000 at 18:47:02."
:description "~[c(O) AND d(O)] OR ~[a(O) AND b(O)] OR s(O) IMPLIES s(O) OR.~[a(O) AND b(O)] OR ~.c(O) AND d(O)"
:needed-objects   NIL
:mhelp "A propositional problem suggested by Jay Hunschel Kim"
:other-attributes NIL
:other-remarks "
")


(:name DMG7
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Sunday, March 12, 2000 at 18:43:04."
:description "~[~[[~[p(O) AND q(O)] OR ~.s(O) AND t(O)] AND q(O)] OR ~.s(O) AND t(O)] OR ~q(O) OR [~s(O) OR ~t(O)] IMPLIES ~[[~[[~[p(O) AND q(O)] OR ~.s(O) AND t(O)] AND q(O)] OR ~.s(O) AND t(O)] AND q(O)] OR ~.s(O) AND t(O)"
:needed-objects   NIL
:mhelp "A propositional problem suggested by Jay Hunschel Kim"
:other-attributes NIL
:other-remarks "
")


(:name DMG8
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Sunday, March 12, 2000 at 18:46:07."
:description "~[~[[~[[~[p(O) AND q(O)] OR ~.s(O) AND t(O)] AND q(O)] OR ~.s(O) AND t(O)] AND q(O)] OR ~.s(O) AND t(O)] OR ~q(O) OR [~s(O) OR ~t(O)] IMPLIES ~[[~[[~[[~[p(O) AND q(O)] OR ~.s(O) AND t(O)] AND q(O)] OR ~.s(O) AND t(O)] AND q(O)] OR ~.s(O) AND t(O)] AND q(O)] OR ~.s(O) AND t(O)"
:needed-objects   NIL
:mhelp "A propositional problem suggested by Jay Hunschel Kim"
:other-attributes NIL
:other-remarks "
")


(:name DOMLEMMA5
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-TOPOLOGY(O(O(OA))(O(OA))) A(O(OA)).LAMBDA X(OA).A(O(OA)) X(OA) AND X(OA) t(A)"
:needed-objects   (SET-TOPOLOGY)
:mhelp "The set of all sets X with a fixed t in X is open.
This is a consequence of DOMLEMMA1 and DOMLEMMA4."
:other-attributes NIL
:other-remarks "
")


(:name EXISTS-CART-SET-PROD
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, July 17, 2001 at 12:48:28."
:description "EXISTS CROSS(O(I(III))(OI)(OI)) FORALL A(OI) FORALL B(OI) FORALL a(I) FORALL b(I).CROSS(O(I(III))(OI)(OI)) A(OI) B(OI) [a(I) PAIR(I(III)II) b(I)] EQUIV A(OI) a(I) AND B(OI) b(I)"
:needed-objects   (PAIR)
:mhelp "Using the definition of pairs of I and I as an object
of type (I(III)), we can take products of sets (OI) and (OI)"
:other-attributes NIL
:other-remarks "
")


(:name FSTPF
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL z(O(OBA)).PREDPROD(O(O(OBA))(OB)(OA)) P(OA) Q(OB) z(O(OBA)) IMPLIES P(OA).PREDFST(A(O(OBA))(OB)(OA)) P(OA) Q(OB) z(O(OBA))"
:needed-objects   (PREDPROD PREDFST)
:mhelp "Theorem that [PREDPROD P Q z] implies [P [PREDFST P Q z]]"
:other-attributes NIL
:other-remarks "
")


(:name LEM562A
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL U(O(OB)) [EXISTS Z(OB) U(O(OB)) Z(OB) AND U(O(OB)) SUBSET(O(O(OB))(O(OB))) W(O(OB)) IMPLIES W(O(OB)).SETINTERSECT(OB(O(OB))) U(O(OB))] AND FORALL x(A) EXISTS V(OB) [W(O(OB)) V(OB) AND x(A) =(OAA) h(A(OB)) V(OB)] IMPLIES EXISTS R(OAA) WELL-ORD(O(OAA)) R(OAA)"
:needed-objects   (WELL-ORD)
:mhelp "A lemma I think will help us prove THM562 (AC17(A) => WO(A)).
If a set W of sets is well ordered by inclusion, and f is a map from the W onto A,
then we can well order A."
:other-attributes NIL
:other-remarks "
")


(:name NNF-EXAMPLE
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "~FORALL x(I) [A(OI) x(I) IMPLIES EXISTS y(I).B(OII) x(I) y(I) AND C(OI) y(I)] IMPLIES EXISTS u(I).A(OI) u(I) AND ~EXISTS v(I).~.B(OII) u(I) v(I) IMPLIES ~C(OI) v(I)"
:needed-objects   NIL
:mhelp "A simple nnf example"
:other-attributes NIL
:other-remarks "
")


(:name SET76
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[LAMBDA P3(OI) LAMBDA Q3(OI) FORALL Z3(I).Q3(OI) Z3(I) IMPLIES P3(OI) Z3(I)] A(OI).LAMBDA Z(I) FALSEHOOD"
:needed-objects   NIL
:mhelp "Set76 from Mizar.
The empty set is a subset of any other set A.
This theorem does not require extensionality."
:other-attributes NIL
:other-remarks "
")


(:name SET79
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[LAMBDA X1(OI) LAMBDA Y1(OI) FORALL Z1(I).X1(OI) Z1(I) IMPLIES Y1(OI) Z1(I)] A(OI) B(OI) IMPLIES [LAMBDA X1(O(OI)) LAMBDA Y1(O(OI)) FORALL Z1(OI).X1(O(OI)) Z1(OI) IMPLIES Y1(O(OI)) Z1(OI)] [[LAMBDA P3(OI) LAMBDA Q3(OI) FORALL Z3(I).Q3(OI) Z3(I) IMPLIES P3(OI) Z3(I)] A(OI)].[LAMBDA P3(OI) LAMBDA Q3(OI) FORALL Z3(I).Q3(OI) Z3(I) IMPLIES P3(OI) Z3(I)] B(OI)"
:needed-objects   NIL
:mhelp "Set79 from Mizar.
forall sets A B: (implies (subset A B) (subset (potset A) (potset B))).
Does not require extensionality."
:other-attributes NIL
:other-remarks "
")


(:name SET80
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[LAMBDA P3(OI) LAMBDA Q3(OI) FORALL Z3(I).Q3(OI) Z3(I) IMPLIES P3(OI) Z3(I)] A(OI) A(OI)"
:needed-objects   NIL
:mhelp "Set80 from Mizar.
forall sets A: (elem (set A) (potset A))
Does not require extensionality."
:other-attributes NIL
:other-remarks "
")


(:name SET81
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[LAMBDA X1(O(OI)) LAMBDA Y1(O(OI)) FORALL Z1(OI).X1(O(OI)) Z1(OI) IMPLIES Y1(O(OI)) Z1(OI)] [[LAMBDA X2(O(OI)) LAMBDA Y2(O(OI)) LAMBDA Z2(OI).X2(O(OI)) Z2(OI) OR Y2(O(OI)) Z2(OI)] [[LAMBDA P3(OI) LAMBDA Q3(OI) FORALL Z3(I).Q3(OI) Z3(I) IMPLIES P3(OI) Z3(I)] A(OI)].[LAMBDA P4(OI) LAMBDA Q4(OI) FORALL Z4(I).Q4(OI) Z4(I) IMPLIES P4(OI) Z4(I)] B(OI)].[LAMBDA P5(OI) LAMBDA Q5(OI) FORALL Z5(I).Q5(OI) Z5(I) IMPLIES P5(OI) Z5(I)].[LAMBDA X6(OI) LAMBDA Y6(OI) LAMBDA Z6(I).X6(OI) Z6(I) OR Y6(OI) Z6(I)] A(OI) B(OI)"
:needed-objects   NIL
:mhelp "Set81 from Mizar.
forall sets A B:  (subset (union (potset A) (potset B)) (potset (union A B))) 
Does not require extensionality."
:other-attributes NIL
:other-remarks "
")


(:name STRANGE-HO-EXAMPLE
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S(O(OII)) [STRANGE-HO-ABBR(OII(O(OII))) S(O(OII))] AND STRANGE-HO-ABBR(OII(O(OII))) S(O(OII)) x(I) y(I) IMPLIES STRANGE-HO-ABBR(OII(O(OII))) S(O(OII)) y(I) x(I)"
:needed-objects   (STRANGE-HO-ABBR)
:mhelp "A strange example of a theorem in which we want to mate a node
with a node that occurs beneath it.  This shows why we may not want to ban the connections
stored in the variable *banned-conns-list* when using DUAL instantiation."
:other-attributes NIL
:other-remarks "
")


(:name SV1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "P(O(OI)) [LAMBDA x(I).A(OI) x(I) OR B(OI) x(I)] IMPLIES EXISTS u(OI).P(O(OI)) u(OI) AND A(OI) SUBSET(O(OI)(OI)) u(OI)"
:needed-objects   NIL
:mhelp "Trivial setvar example using unification"
:other-attributes NIL
:other-remarks "
")


(:name THM145
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL R(OAA) FORALL U(A(OA)).TRANSITIVE(O(OAA)) R(OAA) AND FORALL s(OA) [FORALL z(A) [s(OA) z(A) IMPLIES R(OAA) z(A).U(A(OA)) s(OA)] AND FORALL j(A).FORALL k(A) [s(OA) k(A) IMPLIES R(OAA) k(A) j(A)] IMPLIES R(OAA) [U(A(OA)) s(OA)] j(A)] IMPLIES FORALL f(AA).FORALL x(A) FORALL y(A) [R(OAA) x(A) y(A) IMPLIES R(OAA) [f(AA) x(A)].f(AA) y(A)] IMPLIES EXISTS w(A).R(OAA) w(A) [f(AA) w(A)] AND R(OAA) [f(AA) w(A)] w(A)"
:needed-objects   (TRANSITIVE)
:mhelp "Tarski's (actually Knaster's) Fixed Point Theorem for Lattices;
formulation due to Coquand;
abstract version of THM2;
In a complete lattice, every monotone function has a fixed point;
U s is the least upper bound of the set S;
R is a reflexive ordering, but we seem not to need reflexivity.
find the fixed point [LAMBDA x(A). R(OAA) x .f x]

Renamed THM145 (was T145) after proof found."
:other-attributes NIL
:other-remarks "
")


(:name THM1A
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Friday, January 18, 2002 at 17:59:37."
:description "FORALL K(OI(OI)).EXISTS X(OI) EXISTS Y(OI) [X(OI) SUBSET(O(OI)(OI)) Y(OI) AND ~.K(OI(OI)) X(OI) SUBSET(O(OI)(OI)) K(OI(OI)) Y(OI)] OR EXISTS U(OI).K(OI(OI)) U(OI) =(O(OI)(OI)) U(OI)"
:needed-objects   NIL
:mhelp "THM1 without extensionality in the hyp."
:other-attributes NIL
:other-remarks "
")


(:name THM262-C-EXT
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OA) FORALL a(OA) [FORALL b(A) [p(OA) b(A) =(OOO) a(OA) b(A)] IMPLIES FORALL P(O(OA)).P(O(OA)) p(OA) IMPLIES P(O(OA)) a(OA)] IMPLIES FORALL P(O(OA)).PARTITION-C(O(O(OA))) P(O(OA)) IMPLIES EXISTS Q(OAA).EQUIVALENCE-REL(O(OAA)) Q(OAA) AND EQUIVALENCE-CLASSES(O(OA)(OAA)) Q(OAA) =(O(O(OA))(O(OA))) P(O(OA))"
:needed-objects   (PARTITION-C EQUIVALENCE-CLASSES EQUIVALENCE-REL)
:mhelp "THM262 with alternative defn of partition"
:other-attributes NIL
:other-remarks "
")


(:name THM262-C-EXT2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL q1(OA) FORALL q2(OA) [q1(OA) =(O(OA)(OA)) q2(OA) AND P(O(OA)) q1(OA) IMPLIES P(O(OA)) q2(OA)] IMPLIES.PARTITION-C(O(O(OA))) P(O(OA)) IMPLIES EXISTS Q(OAA).EQUIVALENCE-REL(O(OAA)) Q(OAA) AND EQUIVALENCE-CLASSES(O(OA)(OAA)) Q(OAA) =(O(O(OA))(O(OA))) P(O(OA))"
:needed-objects   (PARTITION-C EQUIVALENCE-CLASSES EQUIVALENCE-REL)
:mhelp "THM262 with alternative defn of partition and instantiation of extensionality"
:other-attributes NIL
:other-remarks "
")


(:name THM262-D-EXT
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OA) FORALL a(OA) [FORALL b(A) [p(OA) b(A) =(OOO) a(OA) b(A)] IMPLIES FORALL P(O(OA)).P(O(OA)) p(OA) IMPLIES P(O(OA)) a(OA)] IMPLIES FORALL P(O(OA)).PARTITION-C(O(O(OA))) P(O(OA)) IMPLIES EXISTS Q(OAA).EQUIVALENCE-CLASSES(O(OA)(OAA)) Q(OAA) =(O(O(OA))(O(OA))) P(O(OA))"
:needed-objects   (PARTITION-C EQUIVALENCE-CLASSES)
:mhelp "THM262 without constraint that Q be an equiv reln"
:other-attributes NIL
:other-remarks "
")


(:name THM262-D-EXT2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL q1(OA) FORALL q2(OA) [q1(OA) =(O(OA)(OA)) q2(OA) AND P(O(OA)) q1(OA) IMPLIES P(O(OA)) q2(OA)] IMPLIES.PARTITION-C(O(O(OA))) P(O(OA)) IMPLIES EXISTS Q(OAA).EQUIVALENCE-CLASSES(O(OA)(OAA)) Q(OAA) =(O(O(OA))(O(OA))) P(O(OA))"
:needed-objects   (PARTITION-C EQUIVALENCE-CLASSES)
:mhelp "THM262 without constraint that Q be an equiv reln and instation of extensionality"
:other-attributes NIL
:other-remarks "
")


(:name THM262-EXT2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL q1(OA) FORALL q2(OA) [q1(OA) =(O(OA)(OA)) q2(OA) AND P(O(OA)) q1(OA) IMPLIES P(O(OA)) q2(OA)] IMPLIES.PARTITION(O(O(OA))) P(O(OA)) IMPLIES EXISTS Q(OAA).EQUIVALENCE-REL(O(OAA)) Q(OAA) AND EQUIVALENCE-CLASSES(O(OA)(OAA)) Q(OAA) =(O(O(OA))(O(OA))) P(O(OA))"
:needed-objects   (PARTITION EQUIVALENCE-REL EQUIVALENCE-CLASSES)
:mhelp "THM262 with specific instance of extensionality"
:other-attributes NIL
:other-remarks "
")


(:name THM500
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:30:25."
:description "%(OA(OB)(AB)) g(AB) [SETPAIR(OBBB) x(B) y(B)] =(O(OA)(OA)) SETPAIR(OAAA) [g(AB) x(B)].g(AB) y(B)"
:needed-objects   (SETPAIR)
:mhelp "Theorem relating SETPAIR to %"
:other-attributes NIL
:other-remarks "
")


(:name THM500C-WFF
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:30:25."
:description "SETPAIR(OAAA) [g(AB) x(B)] [g(AB) y(B)] z(A) IMPLIES %(OA(OB)(AB)) g(AB) [SETPAIR(OBBB) x(B) y(B)] z(A)"
:needed-objects   (SETPAIR)
:mhelp "This caused a problem translating to nat ded proof"
:other-attributes NIL
:other-remarks "
")


(:name THM501
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL S(O(OI)) [S(O(OI)) SUBSET(O(O(OI))(O(OI))) T(O(OI)) IMPLIES T(O(OI)).SETUNION(OI(O(OI))) S(O(OI))] IMPLIES FORALL U(OI) FORALL V(OI).T(O(OI)) U(OI) AND T(O(OI)) V(OI) IMPLIES T(O(OI)).U(OI) UNION(OI(OI)(OI)) V(OI)"
:needed-objects   NIL
:mhelp "A very basic example of a theorem requiring both
extensional and Liebniz equality.  This is a simplification
of thm4."
:other-attributes NIL
:other-remarks "
")


(:name THM502
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) FORALL Y(OA) FORALL Z(OA).X(OA) SUBSET(O(OA)(OA)) Y(OA) AND X(OA) SUBSET(O(OA)(OA)) Z(OA) AND Y(OA) INTERSECT(OA(OA)(OA)) Z(OA) =(O(OA)(OA)) NULLSET(OA) AND P(O(OA)) [Y(OA) INTERSECT(OA(OA)(OA)) Z(OA)] IMPLIES X(OA) =(O(OA)(OA)) NULLSET(OA) AND P(O(OA)) NULLSET(OA)"
:needed-objects   (NULLSET)
:mhelp "Modification of BOOL-PROP-51"
:other-attributes NIL
:other-remarks "
")


(:name THM503
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "P(O(OI)) S(OI) AND T(OI) X(I) AND S(OI) =(O(OI)(OI)) T(OI) IMPLIES P(O(OI)) T(OI) AND S(OI) X(I)"
:needed-objects   NIL
:mhelp "A simple example which can be proven with rewrite-equalities
set to BOTH"
:other-attributes NIL
:other-remarks "
")


(:name THM504
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL Q(O(AB)) [Q(O(AB)) f(AB) IMPLIES Q(O(AB)) g(AB)] OR FORALL x(B) [f(AB) x(B) =(OAA) g(AB) x(B)] IMPLIES f(AB) =(O(AB)(AB)) g(AB)"
:needed-objects   NIL
:mhelp "This theorem could be used to justify going from Leibniz OR Ext= to
equality."
:other-attributes NIL
:other-remarks "
")


(:name THM505
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL Q(OO) [Q(OO) A(O) IMPLIES Q(OO) B(O)] OR [A(O) EQUIV B(O)] IMPLIES A(O) =(OOO) B(O)"
:needed-objects   NIL
:mhelp "This theorem could be used to justify going from Leibniz OR Ext=0 to
equality."
:other-attributes NIL
:other-remarks "
")


(:name THM506
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL s(OB) FORALL p(OAAB).FORALL x(B) [s(OB) x(B) IMPLIES PER(O(OAA)).p(OAAB) x(B)] IMPLIES PER(O(O(AB)(AB))).IND-PER(O(AB)(AB)(OAAB)(OB)) s(OB) p(OAAB)"
:needed-objects   (PER IND-PER)
:mhelp "Proof that IND-PER s p is a per, given that p is a per."
:other-attributes NIL
:other-remarks "
")


(:name THM507
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OAA) FORALL p2(OBBA).PER(O(OAA)) p(OAA) AND PER-IND-PER(O(OBBA)(OAA)) p(OAA) p2(OBBA) IMPLIES PER(O(O(BA)(BA))).PER-DEP-PROD(O(BA)(BA)(OBBA)(OAA)) p(OAA) p2(OBBA)"
:needed-objects   (PER PER-IND-PER PER-DEP-PROD)
:mhelp "Checks that the PER-DEP-PROD (dependent product)
of a PER and a PER-IND-PER (per indexed by the first per)
gives a per."
:other-attributes NIL
:other-remarks "
")


(:name THM508
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) [f(II) x(I) =(OII) g(II) x(I)] IMPLIES.p(O(II)) [LAMBDA x(I) f(II) x(I)] IMPLIES.q(OI) x(I) IMPLIES p(O(II)).LAMBDA x(I) g(II) x(I)"
:needed-objects   NIL
:mhelp "This is an example which demonstrates that subst=, subst=l, and subst=r, are
actually more restrictive with respect to variables than they need be.
The point is that we end up in a situation where the x is free in a hypothesis
of the planned conclusion (because it is free in q x), but is not free in
the hypotheses of either of the lines used to justify the planned lines
using subst= (or one of its variants).  So, the application should be legal,
although it is not recognized as being legal.  The problem seems to be that
free-in-hyps uses rule-hupper instead of rule-hlower.  I'm reluctant to change
something so fundamental though."
:other-attributes NIL
:other-remarks "
")


(:name THM509
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(A) [P(OAA) x(A) x(A) IMPLIES Q(OBBA) x(A) [f(BA) x(A)].g(BA) x(A)] IMPLIES.FORALL x(A) FORALL y(A) [P(OAA) x(A) y(A) IMPLIES Q(OBBA) x(A) [f(BA) x(A)].f(BA) y(A)] IMPLIES.PER(O(OAA)) P(OAA) IMPLIES.PER-IND-PER(O(OBBA)(OAA)) P(OAA) Q(OBBA) IMPLIES PER-DEP-PROD(O(BA)(BA)(OBBA)(OAA)) P(OAA) Q(OBBA) f(BA) g(BA)"
:needed-objects   (PER PER-DEP-PROD PER-IND-PER)
:mhelp "A Theorem about dependent products of
pers, which allows us to infer that two functions are related under
certain conditions.  The theorem is used as part of the translation
from dependent type theory to simple type theory (in particular the
building of proofs for lambda abstractions at the object level)."
:other-attributes NIL
:other-remarks "
")


(:name THM510
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OAA).PER(O(OAA)) p(OAA) IMPLIES FORALL x(A) FORALL y(A).p(OAA) x(A) y(A) IMPLIES p(OAA) x(A) x(A)"
:needed-objects   (PER)
:mhelp "If p is a PER and p x y, then x is in the domain of p
(i.e., p x x)."
:other-attributes NIL
:other-remarks "
")


(:name THM511
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "[EQRELN(O(OAA)) =(OAA)]"
:needed-objects   (EQRELN)
:mhelp "= is an equivalence relation"
:other-attributes NIL
:other-remarks "
")


(:name THM512
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OA) FORALL e(O(BA)(BA)A).FORALL x(A) [p(OA) x(A) IMPLIES EQRELN(O(O(BA)(BA))).e(O(BA)(BA)A) x(A)] IMPLIES EQRELN(O(O(BA)(BA))).LAMBDA y(BA) LAMBDA z(BA) FORALL x(A).p(OA) x(A) IMPLIES e(O(BA)(BA)A) x(A) y(BA) z(BA)"
:needed-objects   (EQRELN)
:mhelp "The intersection of an indexed family of equivalence relations
 is an equivalence relation."
:other-attributes NIL
:other-remarks "
")


(:name THM513
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OAA).EQRELN(O(OAA)) r(OAA) IMPLIES FORALL x(A) r(OAA) x(A) x(A)"
:needed-objects   (EQRELN)
:mhelp "Equivalence Relations are Reflexive"
:other-attributes NIL
:other-remarks "
")


(:name THM514
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OAA).EQRELN(O(OAA)) r(OAA) IMPLIES FORALL x(A) FORALL y(A) FORALL z(A).r(OAA) x(A) y(A) IMPLIES.r(OAA) y(A) z(A) IMPLIES r(OAA) x(A) z(A)"
:needed-objects   (EQRELN)
:mhelp "Equivalence Relations are Transitive"
:other-attributes NIL
:other-remarks "
")


(:name THM515
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability "Interactive natural deduction proof"
:proof-date "Wednesday, July 28, 1999 at 11:38:12."
:description "EQUALPERS(O(O(OAA)(OAA))(O(OAA)(OAA))) EQUALPERS(O(OAA)(OAA)) EQUALPERS(O(OAA)(OAA))"
:needed-objects   (EQUALPERS)
:mhelp "EQUALPERS is itself a PER, and is equal to itself."
:other-attributes NIL
:other-remarks "
")


(:name THM516
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OAA) FORALL q(OAA) FORALL r(OBBA).EQUALPERS(O(OAA)(OAA)) p(OAA) q(OAA) IMPLIES.FORALL x(A) FORALL y(A) [p(OAA) x(A) y(A) IMPLIES EQUALPERS(O(OBB)(OBB)) [r(OBBA) x(A)].r(OBBA) y(A)] IMPLIES EQUALPERS(O(O(BA)(BA))(O(BA)(BA))) [PER-DEP-PROD(O(BA)(BA)(OBBA)(OAA)) p(OAA) r(OBBA)].PER-DEP-PROD(O(BA)(BA)(OBBA)(OAA)) q(OAA) r(OBBA)"
:needed-objects   (EQUALPERS PER-DEP-PROD)
:mhelp "Conditions under which PER-DEP-PROD p r is EQUALPER to PER-DEP-PROD q s"
:other-attributes NIL
:other-remarks "
")


(:name THM517
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OAA) FORALL q(OAA) FORALL r(OBBA) FORALL s(OBBA).EQUALPERS(O(OAA)(OAA)) p(OAA) q(OAA) IMPLIES.FORALL x(A) FORALL y(A) [p(OAA) x(A) y(A) IMPLIES EQUALPERS(O(OBB)(OBB)) [r(OBBA) x(A)].r(OBBA) y(A)] IMPLIES.FORALL x(A) [p(OAA) x(A) x(A) IMPLIES EQUALPERS(O(OBB)(OBB)) [r(OBBA) x(A)].s(OBBA) x(A)] IMPLIES EQUALPERS(O(O(BA)(BA))(O(BA)(BA))) [PER-DEP-PROD(O(BA)(BA)(OBBA)(OAA)) p(OAA) r(OBBA)].PER-DEP-PROD(O(BA)(BA)(OBBA)(OAA)) q(OAA) s(OBBA)"
:needed-objects   (EQUALPERS PER-DEP-PROD)
:mhelp "Conditions under which PER-DEP-PROD p r is EQUALPER to PER-DEP-PROD q s"
:other-attributes NIL
:other-remarks "
")


(:name THM518
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OAA) FORALL q(OBBA) FORALL f(BA) FORALL g(BA).FORALL x(A) [p(OAA) x(A) x(A) IMPLIES q(OBBA) x(A) [f(BA) x(A)].g(BA) x(A)] IMPLIES.FORALL x(A) FORALL y(A) [p(OAA) x(A) y(A) IMPLIES q(OBBA) x(A) [f(BA) x(A)].f(BA) y(A)] IMPLIES.EQUALPERS(O(OAA)(OAA)) p(OAA) p(OAA) IMPLIES.FORALL x(A) FORALL y(A) [p(OAA) x(A) y(A) IMPLIES EQUALPERS(O(OBB)(OBB)) [q(OBBA) x(A)].q(OBBA) y(A)] IMPLIES PER-DEP-PROD(O(BA)(BA)(OBBA)(OAA)) p(OAA) q(OBBA) f(BA) g(BA)"
:needed-objects   (EQUALPERS PER-DEP-PROD)
:mhelp "Conditions under which two functions are related by [PER-DEP-PROD p q]"
:other-attributes NIL
:other-remarks "
")


(:name THM519
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Saturday, August  7, 1999 at 14:20:30."
:description "EQUALPERS(O(OOO)(OOO)) [LAMBDA x(O) LAMBDA y(O) TRUTH].LAMBDA x(O) LAMBDA y(O) TRUTH"
:needed-objects   (EQUALPERS)
:mhelp "The per relating everything of type O to everything else of type O
is a per and is equal to itself."
:other-attributes NIL
:other-remarks "
")


(:name THM520
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OAA).EQUALPERS(O(OAA)(OAA)) p(OAA) p(OAA) IMPLIES FORALL x(A) FORALL y(A).p(OAA) x(A) y(A) IMPLIES p(OAA) x(A) x(A)"
:needed-objects   (EQUALPERS)
:mhelp "Like THM510, but using EQUALPERS p p instead of PER p.
If p is a per (and equal to itself), and p x y, then p x x.
(Related implies inhabitation.)"
:other-attributes NIL
:other-remarks "
")


(:name THM521
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Interactive natural deduction proof"
:proof-date "Monday, September 27, 1999 at 12:46:09."
:description "FORALL X(OA) FORALL Y(OA) [X(OA) SUBSET(O(OA)(OA)) Y(OA) IMPLIES F(OA(OA)) X(OA) SUBSET(O(OA)(OA)) F(OA(OA)) Y(OA)] IMPLIES F(OA(OA)) [SETINTERSECT(OA(O(OA))).LAMBDA X(OA).F(OA(OA)) X(OA) SUBSET(O(OA)(OA)) X(OA)] SUBSET(O(OA)(OA)) SETINTERSECT(OA(O(OA))).LAMBDA X(OA).F(OA(OA)) X(OA) SUBSET(O(OA)(OA)) X(OA)"
:needed-objects   NIL
:mhelp "A theorem about monotone functions and pre-fixed points
from Dana Scott's Domain Theory course.

If F is monotone wrt subset, then the set of prefixed points
is closed under arbitrary intersection."
:other-attributes NIL
:other-remarks "
")


(:name THM522
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, November  1, 1999 at 16:26:12."
:description "FORALL r(OAA) FORALL x(A) FORALL y(A).SCLOSURE(OAA(OAA)) r(OAA) x(A) y(A) EQUIV FORALL p(OAA).r(OAA) SUBRELATION(O(OAA)(OAA)) p(OAA) AND SYMMETRIC(O(OAA)) p(OAA) IMPLIES p(OAA) x(A) y(A)"
:needed-objects   (SYMMETRIC SCLOSURE SUBRELATION)
:mhelp "Theorem about Symmetric closure of relations,
compare to THM146 and THM152 (for Transitive closure)."
:other-attributes NIL
:other-remarks "
")


(:name THM523
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, November  1, 1999 at 16:29:48."
:description "FORALL r(OAA) FORALL x(A) FORALL y(A).RCLOSURE(OAA(OAA)) r(OAA) x(A) y(A) EQUIV FORALL p(OAA).r(OAA) SUBRELATION(O(OAA)(OAA)) p(OAA) AND REFLEXIVE(O(OAA)) p(OAA) IMPLIES p(OAA) x(A) y(A)"
:needed-objects   (REFLEXIVE RCLOSURE SUBRELATION)
:mhelp "Theorem about Reflexive closure of relations,
compare to THM146 and THM152 (for Transitive closure)."
:other-attributes NIL
:other-remarks "
")


(:name THM524
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OAA) TRANSITIVE(O(OAA)).TCLOSURE152(OAA(OAA)) r(OAA)"
:needed-objects   (TRANSITIVE TCLOSURE152)
:mhelp "Transitive closure (defined as in THM152) is transitive."
:other-attributes NIL
:other-remarks "
")


(:name THM525
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OAA).r(OAA) SUBRELATION(O(OAA)(OAA)) TCLOSURE152(OAA(OAA)) r(OAA) AND TRANSITIVE(O(OAA)).TCLOSURE152(OAA(OAA)) r(OAA)"
:needed-objects   (TRANSITIVE TCLOSURE152 SUBRELATION)
:mhelp "Transitive closure (defined as in THM152) i
 
s a larger relation
and is transitive (see THM524)."
:other-attributes NIL
:other-remarks "
")


(:name THM526
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OAA) FORALL x(A) FORALL y(A).PERCLOSURE(OAA(OAA)) r(OAA) x(A) y(A) EQUIV FORALL p(OAA).r(OAA) SUBRELATION(O(OAA)(OAA)) p(OAA) AND PER(O(OAA)) p(OAA) IMPLIES p(OAA) x(A) y(A)"
:needed-objects   (PERCLOSURE SUBRELATION PER)
:mhelp "Characterization of PER closure, analogous to THM146 and THM152"
:other-attributes NIL
:other-remarks "
")


(:name THM526-2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OAA) [r(OAA) SUBRELATION(O(OAA)(OAA)) p(OAA) AND PER(O(OAA)) p(OAA) IMPLIES p(OAA) x(A) y(A)] IMPLIES PERCLOSURE(OAA(OAA)) r(OAA) x(A) y(A)"
:needed-objects   (SUBRELATION PER PERCLOSURE)
:mhelp "The half of THM526 requiring a primsub."
:other-attributes NIL
:other-remarks "
")


(:name THM527
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "CLOSEDUNDER(O(AA)(OA)) [LEASTCLOSEDUNDER(OA(AA)) f(AA)] f(AA)"
:needed-objects   (CLOSEDUNDER LEASTCLOSEDUNDER)
:mhelp "The intersection of all sets closed under a function is closed under the function.
This is a basic principal which allows us to define inductive sets in
higher order logic.

Ooops.  Forgot to include the requirement that the set be nonempty."
:other-attributes NIL
:other-remarks "
")


(:name THM529
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SURJECTIVE(O(OBA)) f(OBA) IMPLIES EXISTS g(OB(OA)) EXISTS h(OA(OB)).MAPS(O(O(OB))(O(OA))(OB(OA))) g(OB(OA)) [IMAGE(O(OA)(OAA)).KER(OAA(OBA)) f(OBA)] [LAMBDA z(OB) TRUTH] AND MAPS(O(O(OA))(O(OB))(OA(OB))) h(OA(OB)) [LAMBDA z(OB) TRUTH] [IMAGE(O(OA)(OAA)).KER(OAA(OBA)) f(OBA)] AND FORALL y(OB) [g(OB(OA)) [h(OA(OB)) y(OB)] =(O(OB)(OB)) y(OB)] AND FORALL x(OA).IMAGE(O(OA)(OAA)) [KER(OAA(OBA)) f(OBA)] x(OA) IMPLIES h(OA(OB)) [g(OB(OA)) x(OA)] =(O(OA)(OA)) x(OA)"
:needed-objects   (MAPS IMAGE KER SURJECTIVE)
:mhelp "A version of the first homomorphism theorem just in terms of sets and equivalence relations.
        See Benji Shults' message of 12 Feb 1998

 Wos' 8th research problem: 'an inference rule
for set thery?'  In the statement of this problem, he gives
a challenge problem:

  G/Ker(f) is isomorphic to H where f : G -> H is an onto
  homomorphism

Note: could just formulate this in terms of an equivalence relation
and its quotient set."
:other-attributes NIL
:other-remarks "
")


(:name THM530
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Saturday, November  6, 1999 at 15:15:22."
:description "FORALL PROP(O(OAA)) FORALL F(O(OAA)).CLOSURE(OAA(OAA)(O(OAA))) PROP(O(OAA)) [PAIRSETUNION(OAA(O(OAA))) F(O(OAA))] =(O(OAA)(OAA)) CLOSURE(OAA(OAA)(O(OAA))) PROP(O(OAA)).PAIRSETUNION(OAA(O(OAA))).LAMBDA S(OAA) EXISTS R(OAA).F(O(OAA)) R(OAA) AND S(OAA) =(O(OAA)(OAA)) CLOSURE(OAA(OAA)(O(OAA))) PROP(O(OAA)) R(OAA)"
:needed-objects   (CLOSURE PAIRSETUNION)
:mhelp "Generalization of THM252 to arbitrary unions"
:other-attributes NIL
:other-remarks "
")


(:name THM531
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FINITE1(O(OA)) C(OA) AND B(OA) SUBSET(O(OA)(OA)) C(OA) IMPLIES FINITE1(O(OA)) B(OA)"
:needed-objects   (FINITE1)
:mhelp "Any subset of a finite set is finite."
:other-attributes NIL
:other-remarks "
")


(:name THM531B
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FINITE C(OI) AND B(OI) SUBSET(O(OI)(OI)) C(OI) IMPLIES FINITE B(OI)"
:needed-objects   NIL
:mhelp "Subset of finite set is finite, with FINITE definition of finite."
:other-attributes NIL
:other-remarks "
")


(:name THM531C
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FINITESET(O(OA)) C(OA) AND B(OA) SUBSET(O(OA)(OA)) C(OA) IMPLIES FINITESET(O(OA)) B(OA)"
:needed-objects   (FINITESET)
:mhelp "Every subset of a finite set is finite, using Dana Scott's FINITESET definition of finite
(close to FINITE1, but slightly different)."
:other-attributes NIL
:other-remarks "
")


(:name THM531D
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FINITE-SET-EXT(O(OA)) C(OA) AND B(OA) SUBSET(O(OA)(OA)) C(OA) IMPLIES FINITE-SET-EXT(O(OA)) B(OA)"
:needed-objects   (FINITE-SET-EXT)
:mhelp "Every subset of a finite set is finite -- using FINITE-SET-EXT"
:other-attributes NIL
:other-remarks "
")


(:name THM531E
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, November 30, 1999 at 16:35:07."
:description "FINITE-SET-SUBSET-EXT(O(OA)) C(OA) AND B(OA) SUBSET(O(OA)(OA)) C(OA) IMPLIES FINITE-SET-SUBSET-EXT(O(OA)) B(OA)"
:needed-objects   (FINITE-SET-SUBSET-EXT)
:mhelp "Subset of a finite set is finite, using FINITE-SET-SUBSET-EXT.
This one has an easy proof."
:other-attributes NIL
:other-remarks "
")


(:name THM532
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL s(O(OB)) [FORALL X(OB) [s(O(OB)) X(OB) IMPLIES EXISTS y(B) X(OB) y(B)] IMPLIES EXISTS f(B(OB)) FORALL X(OB).s(O(OB)) X(OB) IMPLIES X(OB).f(B(OB)) X(OB)] IMPLIES FORALL r(OBA) EXISTS g(BA) FORALL x(A).EXISTS y(B) r(OBA) x(A) y(B) IMPLIES r(OBA) x(A).g(BA) x(A)"
:needed-objects   NIL
:mhelp "AC1  =>  AC3 from Rubin and Rubin.
TPS can prove this automatically using Matt's Procedure"
:other-attributes NIL
:other-remarks "
")


(:name THM533
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OA(OA)) EXISTS g(A(OA)) FORALL x(OA) [EXISTS y(A) r(OA(OA)) x(OA) y(A) IMPLIES r(OA(OA)) x(OA).g(A(OA)) x(OA)] IMPLIES FORALL s(O(OA)).FORALL X(OA) [s(O(OA)) X(OA) IMPLIES EXISTS t(A) X(OA) t(A)] IMPLIES EXISTS f(A(OA)) FORALL X(OA).s(O(OA)) X(OA) IMPLIES X(OA).f(A(OA)) X(OA)"
:needed-objects   NIL
:mhelp "AC3 => AC1 from Rubin and Rubin."
:other-attributes NIL
:other-remarks "
")


(:name THM534
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, November 23, 1999 at  1:25:54."
:description "FORALL s(O(OA)) [FORALL X(OA) [s(O(OA)) X(OA) IMPLIES EXISTS t(A) X(OA) t(A)] IMPLIES EXISTS f(A(OA)) FORALL X(OA).s(O(OA)) X(OA) IMPLIES X(OA).f(A(OA)) X(OA)] IMPLIES FORALL g(OA(A(OA))).FORALL h(A(OA)) EXISTS u(A) g(OA(A(OA))) h(A(OA)) u(A) IMPLIES EXISTS f(A(OA)) g(OA(A(OA))) f(A(OA)).f(A(OA)).g(OA(A(OA))) f(A(OA))"
:needed-objects   NIL
:mhelp "AC1 => AC17 from Rubin and Rubin"
:other-attributes NIL
:other-remarks "
")


(:name THM535
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL s(O(O(OA))) [FORALL X(O(OA)) [s(O(O(OA))) X(O(OA)) IMPLIES EXISTS t(OA) X(O(OA)) t(OA)] IMPLIES EXISTS f(OA(O(OA))) FORALL X(O(OA)).s(O(O(OA))) X(O(OA)) IMPLIES X(O(OA)).f(OA(O(OA))) X(O(OA))] IMPLIES FORALL A(O(O(OA))).EXISTS X(O(OA)) A(O(O(OA))) X(O(OA)) AND FORALL X(O(OA)) [A(O(O(OA))) X(O(OA)) IMPLIES EXISTS u(OA) X(O(OA)) u(OA)] IMPLIES LAMBDA x(A) FORALL a(O(OA)) [A(O(O(OA))) a(O(OA)) IMPLIES EXISTS b(OA).a(O(OA)) b(OA) AND b(OA) x(A)] =(O(OA)(OA)) LAMBDA x(A) EXISTS f(OA(O(OA))) FORALL a(O(OA)).A(O(O(OA))) a(O(OA)) IMPLIES a(O(OA)) [f(OA(O(OA))) a(O(OA))] AND f(OA(O(OA))) a(O(OA)) x(A)"
:needed-objects   NIL
:mhelp "AC1(OA) => AC19(A) from Rubin and Rubin."
:other-attributes NIL
:other-remarks "
")


(:name THM535B
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS f(OA(O(OA))) FORALL X(O(OA)) [EXISTS t(OA) X(O(OA)) t(OA) IMPLIES X(O(OA)).f(OA(O(OA))) X(O(OA))] IMPLIES FORALL A(O(O(OA))).EXISTS X(O(OA)) A(O(O(OA))) X(O(OA)) AND FORALL X(O(OA)) [A(O(O(OA))) X(O(OA)) IMPLIES EXISTS u(OA) X(O(OA)) u(OA)] IMPLIES LAMBDA x(A) FORALL a(O(OA)) [A(O(O(OA))) a(O(OA)) IMPLIES EXISTS b(OA).a(O(OA)) b(OA) AND b(OA) x(A)] =(O(OA)(OA)) LAMBDA x(A) EXISTS f(OA(O(OA))) FORALL a(O(OA)).A(O(O(OA))) a(O(OA)) IMPLIES a(O(OA)) [f(OA(O(OA))) a(O(OA))] AND f(OA(O(OA))) a(O(OA)) x(A)"
:needed-objects   NIL
:mhelp "AC1(OA) => AC19(A) from Rubin and Rubin, with AC1 given as global choice function at type (OA).
This makes a difference to TPS since the HO variables to which we need to apply primsubs
will occur as head variables to positive and negative leaves."
:other-attributes NIL
:other-remarks "
")


(:name THM536
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL R(O(OA)(OA)) [PAR-ORD(O(O(OA)(OA))) R(O(OA)(OA)) IMPLIES EXISTS S(O(OA)) MAXIMAL(O(O(OA))(O(O(OA)))(O(O(OA))(O(OA)))) [LAMBDA X(O(OA)) LAMBDA Y(O(OA)).X(O(OA)) SUBSET(O(O(OA))(O(OA))) Y(O(OA))] [LAMBDA W(O(OA)) FORALL x(OA) FORALL y(OA).W(O(OA)) x(OA) AND W(O(OA)) y(OA) IMPLIES R(O(OA)(OA)) x(OA) y(OA) OR R(O(OA)(OA)) y(OA) x(OA)] S(O(OA))] IMPLIES FORALL X2(O(OA)) EXISTS M(O(OA)) MAXIMAL(O(O(OA))(O(O(OA)))(O(O(OA))(O(OA)))) [LAMBDA X1(O(OA)) LAMBDA Y1(O(OA)).X1(O(OA)) SUBSET(O(O(OA))(O(OA))) Y1(O(OA))] [LAMBDA W(O(OA)).W(O(OA)) SUBSET(O(O(OA))(O(OA))) X2(O(OA)) AND FORALL U(OA) FORALL V(OA).W(O(OA)) U(OA) AND W(O(OA)) V(OA) IMPLIES U(OA) SUBSET(O(OA)(OA)) V(OA) OR V(OA) SUBSET(O(OA)(OA)) U(OA)] M(O(OA))"
:needed-objects   (PAR-ORD MAXIMAL)
:mhelp "M5(OA) => M6(A) from Rubin and Rubin, a 'clear' implication from p. 34.
The converse -- up to types -- (Theorem 4.4 on p. 35, THM540 in TPS) is more difficult."
:other-attributes NIL
:other-remarks "
")


(:name THM537
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FINITE1(O(OI)) A(OI) IMPLIES FINITE A(OI)"
:needed-objects   (FINITE1)
:mhelp "Half of equivalence of two definitions of finite"
:other-attributes NIL
:other-remarks "
")


(:name THM538
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FINITE A(OI) IMPLIES FINITE1(O(OI)) A(OI)"
:needed-objects   (FINITE1)
:mhelp "Half of equivalence of two definitions of finite"
:other-attributes NIL
:other-remarks "
")


(:name THM539
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS f(A(OA)) FORALL X(OA) [EXISTS t(A) X(OA) t(A) IMPLIES X(OA).f(A(OA)) X(OA)] IMPLIES EXISTS R(OAA).FORALL x(A) FORALL y(A) [R(OAA) x(A) y(A) AND R(OAA) y(A) x(A) IMPLIES x(A) =(OAA) y(A)] AND FORALL S(OA).EXISTS u(A) S(OA) u(A) IMPLIES EXISTS v(A).S(OA) v(A) AND FORALL z(A) R(OAA) v(A) z(A)"
:needed-objects   NIL
:mhelp "Choice function at A implies existence of a well-founded antisymmetric relation at A
(approximation of result that Choice => existence of well-orderings)."
:other-attributes NIL
:other-remarks "
")


(:name THM540
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X2(O(OA)) EXISTS M(O(OA)) MAXIMAL(O(O(OA))(O(O(OA)))(O(O(OA))(O(OA)))) [LAMBDA X1(O(OA)) LAMBDA Y1(O(OA)).X1(O(OA)) SUBSET(O(O(OA))(O(OA))) Y1(O(OA))] [LAMBDA W(O(OA)).W(O(OA)) SUBSET(O(O(OA))(O(OA))) X2(O(OA)) AND FORALL U(OA) FORALL V(OA).W(O(OA)) U(OA) AND W(O(OA)) V(OA) IMPLIES U(OA) SUBSET(O(OA)(OA)) V(OA) OR V(OA) SUBSET(O(OA)(OA)) U(OA)] M(O(OA)) IMPLIES FORALL R(OAA).PAR-ORD(O(OAA)) R(OAA) IMPLIES EXISTS S(OA) MAXIMAL(O(OA)(O(OA))(O(OA)(OA))) [LAMBDA X(OA) LAMBDA Y(OA).X(OA) SUBSET(O(OA)(OA)) Y(OA)] [LAMBDA W(OA) FORALL x(A) FORALL y(A).W(OA) x(A) AND W(OA) y(A) IMPLIES R(OAA) x(A) y(A) OR R(OAA) y(A) x(A)] S(OA)"
:needed-objects   (PAR-ORD MAXIMAL)
:mhelp "M5(A) => M6(A), Thm 4.4 from Rubin and Rubin.  Converse of THM536."
:other-attributes NIL
:other-remarks "
")


(:name THM541
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, November 25, 1999 at 18:51:34."
:description "EXISTS f(A(OA)) FORALL X(OA) [EXISTS t(A) X(OA) t(A) IMPLIES X(OA).f(A(OA)) X(OA)] EQUIV FORALL s(O(OA)).FORALL X(OA) [s(O(OA)) X(OA) IMPLIES EXISTS t(A) X(OA) t(A)] IMPLIES EXISTS f(A(OA)) FORALL X(OA).s(O(OA)) X(OA) IMPLIES X(OA).f(A(OA)) X(OA)"
:needed-objects   NIL
:mhelp "Equivalence of global choice at type A (usual way of expressing AC in type theory)
and AC1 from Rubin and Rubin."
:other-attributes NIL
:other-remarks "
")


(:name THM542
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, December  2, 1999 at 22:00:55."
:description "WELL-ORD(O(OAA)) R(OAA) IMPLIES REFLEXIVE(O(OAA)) R(OAA)"
:needed-objects   (WELL-ORD REFLEXIVE)
:mhelp "A well-ordering is reflexive"
:other-attributes NIL
:other-remarks "
")


(:name THM543
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "WELL-ORD(O(OAA)) R(OAA) IMPLIES FORALL x(A) FORALL y(A).R(OAA) x(A) y(A) OR R(OAA) y(A) x(A)"
:needed-objects   (WELL-ORD)
:mhelp "A well ordering is connected."
:other-attributes NIL
:other-remarks "
")


(:name THM544
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "WELL-ORD(O(OAA)) R(OAA) IMPLIES ANTISYMMETRIC(O(OAA)) R(OAA)"
:needed-objects   (WELL-ORD ANTISYMMETRIC)
:mhelp "A well ordering is anti-symmetric."
:other-attributes NIL
:other-remarks "
")


(:name THM545
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "WELL-ORD(O(OAA)) R(OAA) IMPLIES TRANSITIVE(O(OAA)) R(OAA)"
:needed-objects   (WELL-ORD TRANSITIVE)
:mhelp "A well ordering is transitive."
:other-attributes NIL
:other-remarks "
")


(:name THM546
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "WELL-ORD(O(OAA)) R(OAA) IMPLIES LIN-ORD(O(OAA)) R(OAA)"
:needed-objects   (WELL-ORD LIN-ORD)
:mhelp "A well ordering is a linear ordering.
Sums up THM542, THM543, THM544, THM545."
:other-attributes NIL
:other-remarks "
")


(:name THM547
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) FORALL y(A) [FORALL z(A) [X(OA) z(A) EQUIV y(A) =(OAA) z(A)] IMPLIES IOTA(A(OA)) X(OA) =(OAA) y(A)] AND EXISTS R(OAA) WELL-ORD(O(OAA)) R(OAA) IMPLIES EXISTS f(A(OA)) FORALL X(OA).EXISTS t(A) X(OA) t(A) IMPLIES X(OA).f(A(OA)) X(OA)"
:needed-objects   (WELL-ORD)
:mhelp "Axiom of Description at type A + Well-Ordering at type A implies AC at type A"
:other-attributes NIL
:other-remarks "
")


(:name THM548
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS W(OAA) WELL-ORD(O(OAA)) W(OAA) AND PAR-ORD(O(OAA)) R(OAA) IMPLIES EXISTS S(OA).FORALL x(A) FORALL y(A) [S(OA) x(A) AND S(OA) y(A) IMPLIES R(OAA) x(A) y(A) OR R(OAA) y(A) x(A)] AND FORALL T(OA).FORALL x(A) FORALL y(A) [T(OA) x(A) AND T(OA) y(A) IMPLIES R(OAA) x(A) y(A) OR R(OAA) y(A) x(A)] AND FORALL x(A) [S(OA) x(A) IMPLIES T(OA) x(A)] IMPLIES FORALL x(A).T(OA) x(A) IMPLIES S(OA) x(A)"
:needed-objects   (WELL-ORD PAR-ORD)
:mhelp "Well-Ordering at type A implies M5(A).  Similar to
Thm 4.6 in Rubin and Rubin"
:other-attributes NIL
:other-remarks "
")


(:name THM549
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FINITE-SET-EXT(O(OA)) B(OA) AND FINITE-SET-EXT(O(OA)) C(OA) IMPLIES FINITE-SET-EXT(O(OA)).B(OA) UNION(OA(OA)(OA)) C(OA)"
:needed-objects   (FINITE-SET-EXT)
:mhelp "Union of finite sets is finite, using definition FINITE-SET-EXT
for finite sets, which gets around the need for extensionality in proofs."
:other-attributes NIL
:other-remarks "
")


(:name THM550
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS c(A(OA)) FORALL X(OA) [EXISTS t(A) X(OA) t(A) IMPLIES X(OA).c(A(OA)) X(OA)] IMPLIES EXISTS R(OAA) WELL-ORD(O(OAA)) R(OAA)"
:needed-objects   (WELL-ORD)
:mhelp "AC => WO based on notes Peter Andrews just handed me
which are based on Zermelo's proof that AC => WO."
:other-attributes NIL
:other-remarks "
")


(:name THM551
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FINITE1(O(OA)) C(OA) IMPLIES FINITE-SET-EXT(O(OA)) C(OA)"
:needed-objects   (FINITE1 FINITE-SET-EXT)
:mhelp "Part of another equivalence of defns of finite sets.
See also THM537 and THM538."
:other-attributes NIL
:other-remarks "
")


(:name THM552
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "LC-RELN(O(OAA)) R(OAA) AND EXISTS f(OBA) RS-INJ-FN-GRAPH(O(OBA)(OBB)(OAA)) R(OAA) S(OBB) f(OBA) IMPLIES EXISTS g(OAB) RS-SURJ-FN-GRAPH(O(OAB)(OAA)) R(OAA) g(OAB)"
:needed-objects   (LC-RELN RS-INJ-FN-GRAPH RS-SURJ-FN-GRAPH)
:mhelp "Generalization of the theorem that if there exists (a graph of) an injective
function from type A to type B, then there exists (a graph of) a surjective function from type B to type A."
:other-attributes NIL
:other-remarks "
")


(:name THM552A
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL u(A) FORALL v(A) FORALL w(A) [R(OAA) u(A) v(A) AND R(OAA) w(A) v(A) IMPLIES R(OAA) u(A) w(A)] AND REFLEXIVE(O(OAA)) R(OAA) IMPLIES.EXISTS f(OBA) [FORALL x(A) EXISTS y(B) f(OBA) x(A) y(B) AND FORALL x(A) FORALL y1(B) FORALL y2(B) [f(OBA) x(A) y1(B) AND f(OBA) x(A) y2(B) IMPLIES S(OBB) y1(B) y2(B)] AND FORALL x1(A) FORALL x2(A) FORALL y(B).f(OBA) x1(A) y(B) AND f(OBA) x2(A) y(B) IMPLIES R(OAA) x1(A) x2(A)] IMPLIES EXISTS g(OAB).FORALL x(A) EXISTS y(B) g(OAB) y(B) x(A) AND FORALL y(B) FORALL x1(A) FORALL x2(A) [g(OAB) y(B) x1(A) AND g(OAB) y(B) x2(A) IMPLIES R(OAA) x1(A) x2(A)] AND FORALL y(B) EXISTS x(A) g(OAB) y(B) x(A)"
:needed-objects   (REFLEXIVE)
:mhelp "Here are versions of THM552 without abbr's and with instantiations for g:
I once was able to prove the instantiated version w/num-of-dups = ms98-num-of-dups = 1
and max-mates = 2 in MS98-1."
:other-attributes NIL
:other-remarks "
")


(:name THM552B
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL u(A) FORALL v(A) FORALL w(A) [R(OAA) u(A) v(A) AND R(OAA) w(A) v(A) IMPLIES R(OAA) u(A) w(A)] AND REFLEXIVE(O(OAA)) R(OAA) IMPLIES.FORALL x(A) EXISTS y(I) f(OIA) x(A) y(I) AND FORALL x(A) FORALL y1(I) FORALL y2(I) [f(OIA) x(A) y1(I) AND f(OIA) x(A) y2(I) IMPLIES S(OII) y1(I) y2(I)] AND FORALL x1(A) FORALL x2(A) FORALL y(I) [f(OIA) x1(A) y(I) AND f(OIA) x2(A) y(I) IMPLIES R(OAA) x1(A) x2(A)] IMPLIES FORALL x(A) EXISTS y(I) [LAMBDA y(I) LAMBDA x(A) FORALL w(A).f(OIA) x(A) y(I) OR ~f(OIA) w(A) y(I) AND R(OAA) x(A) z(A)] y(I) x(A) AND FORALL y(I) FORALL x1(A) FORALL x2(A) [[LAMBDA y(I) LAMBDA x(A) FORALL w(A).f(OIA) x(A) y(I) OR ~f(OIA) w(A) y(I) AND R(OAA) x(A) z(A)] y(I) x1(A) AND [LAMBDA y(I) LAMBDA x(A) FORALL w(A).f(OIA) x(A) y(I) OR ~f(OIA) w(A) y(I) AND R(OAA) x(A) z(A)] y(I) x2(A) IMPLIES R(OAA) x1(A) x2(A)] AND FORALL y(I) EXISTS x(A) [LAMBDA y(I) LAMBDA x(A) FORALL w(A).f(OIA) x(A) y(I) OR ~f(OIA) w(A) y(I) AND R(OAA) x(A) z(A)] y(I) x(A)"
:needed-objects   (REFLEXIVE)
:mhelp "instantiated"
:other-attributes NIL
:other-remarks "
")


(:name THM552C
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL u(A) FORALL v(A) FORALL w(A) [R(OAA) u(A) v(A) AND R(OAA) w(A) v(A) IMPLIES R(OAA) u(A) w(A)] AND REFLEXIVE(O(OAA)) R(OAA) IMPLIES.FORALL x(A) EXISTS y(B) f(OBA) x(A) y(B) AND FORALL x(A) FORALL y1(B) FORALL y2(B) [f(OBA) x(A) y1(B) AND f(OBA) x(A) y2(B) IMPLIES S(OBB) y1(B) y2(B)] AND FORALL x1(A) FORALL x2(A) FORALL y(B) [f(OBA) x1(A) y(B) AND f(OBA) x2(A) y(B) IMPLIES R(OAA) x1(A) x2(A)] IMPLIES FORALL x(A) EXISTS y(B) [LAMBDA y(B) LAMBDA x(A) FORALL w(A).f(OBA) x(A) y(B) OR ~f(OBA) w(A) y(B) AND R(OAA) x(A) z(A)] y(B) x(A)"
:needed-objects   (REFLEXIVE)
:mhelp "breaking down obligations"
:other-attributes NIL
:other-remarks "
")


(:name THM552D
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL u(A) FORALL v(A) FORALL w(A) [R(OAA) u(A) v(A) AND R(OAA) w(A) v(A) IMPLIES R(OAA) u(A) w(A)] AND REFLEXIVE(O(OAA)) R(OAA) IMPLIES.FORALL x(A) EXISTS y(B) f(OBA) x(A) y(B) AND FORALL x(A) FORALL y1(B) FORALL y2(B) [f(OBA) x(A) y1(B) AND f(OBA) x(A) y2(B) IMPLIES S(OBB) y1(B) y2(B)] AND FORALL x1(A) FORALL x2(A) FORALL y(B) [f(OBA) x1(A) y(B) AND f(OBA) x2(A) y(B) IMPLIES R(OAA) x1(A) x2(A)] IMPLIES FORALL y(B) FORALL x1(A) FORALL x2(A).[LAMBDA y(B) LAMBDA x(A) FORALL w(A).f(OBA) x(A) y(B) OR ~f(OBA) w(A) y(B) AND R(OAA) x(A) z(A)] y(B) x1(A) AND [LAMBDA y(B) LAMBDA x(A) FORALL w(A).f(OBA) x(A) y(B) OR ~f(OBA) w(A) y(B) AND R(OAA) x(A) z(A)] y(B) x2(A) IMPLIES R(OAA) x1(A) x2(A)"
:needed-objects   (REFLEXIVE)
:mhelp "an obligation"
:other-attributes NIL
:other-remarks "
")


(:name THM552E
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL u(A) FORALL v(A) FORALL w(A) [R(OAA) u(A) v(A) AND R(OAA) w(A) v(A) IMPLIES R(OAA) u(A) w(A)] AND REFLEXIVE(O(OAA)) R(OAA) IMPLIES.FORALL x(A) EXISTS y(B) f(OBA) x(A) y(B) AND FORALL x(A) FORALL y1(B) FORALL y2(B) [f(OBA) x(A) y1(B) AND f(OBA) x(A) y2(B) IMPLIES S(OBB) y1(B) y2(B)] AND FORALL x1(A) FORALL x2(A) FORALL y(B) [f(OBA) x1(A) y(B) AND f(OBA) x2(A) y(B) IMPLIES R(OAA) x1(A) x2(A)] IMPLIES FORALL y(B) EXISTS x(A) [LAMBDA y(B) LAMBDA x(A) FORALL w(A).f(OBA) x(A) y(B) OR ~f(OBA) w(A) y(B) AND R(OAA) x(A) z(A)] y(B) x(A)"
:needed-objects   (REFLEXIVE)
:mhelp "an obligation"
:other-attributes NIL
:other-remarks "
")


(:name THM553
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Friday, December 10, 1999 at 11:54:11."
:description "LIN-ORD(O(OAA)) R(OAA) AND DOWN-CLOSED(O(OA)(OAA)) R(OAA) S(OA) AND DOWN-CLOSED(O(OA)(OAA)) R(OAA) T(OA) IMPLIES S(OA) SUBSET(O(OA)(OA)) T(OA) OR T(OA) SUBSET(O(OA)(OA)) S(OA)"
:needed-objects   (LIN-ORD DOWN-CLOSED)
:mhelp "Downward closed subsets of a linear order are comparable -- actually
this only requires the relation to satisfy comparability, not the partial order properties."
:other-attributes NIL
:other-remarks "
")


(:name THM554
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS S(OAB) INJ-FN-GRAPH(O(OAB)) S(OAB) IMPLIES EXISTS R(OBA) SURJ-FN-GRAPH(O(OBA)) R(OBA)"
:needed-objects   (INJ-FN-GRAPH SURJ-FN-GRAPH)
:mhelp "if there is an injection from A to B, then there is a surjection from B to A"
:other-attributes NIL
:other-remarks "
")


(:name THM555
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "DISJ-COLL-NONEMPTY-SETS(O(O(OA))) P(O(OA)) IMPLIES EXISTS S(OA).P(O(OA)) PARTITIONS(O(OA)(O(OA))) S(OA)"
:needed-objects   (PARTITIONS DISJ-COLL-NONEMPTY-SETS)
:mhelp "A disjoint collection of nonempty sets partitions some set."
:other-attributes NIL
:other-remarks "
")


(:name THM556
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "DISJ-COLL-NONEMPTY-SETS(O(O(OA))) P(O(OA)) IMPLIES EXISTS R(OAA).PER(O(OAA)) R(OAA) AND EQUIVALENCE-CLASSES(O(OA)(OAA)) R(OAA) =(O(O(OA))(O(OA))) P(O(OA))"
:needed-objects   (DISJ-COLL-NONEMPTY-SETS PER EQUIVALENCE-CLASSES)
:mhelp "Disjoint collections of nonempty sets determine a per."
:other-attributes NIL
:other-remarks "
")


(:name THM557
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, December 13, 1999 at 21:24:14."
:description "[LC-RELN(O(OAA)) =(OAA)]"
:needed-objects   (LC-RELN)
:mhelp "equality is an LC-RELN

This is an example in which TRUTHVALUES-HACK must be set to T."
:other-attributes NIL
:other-remarks "
")


(:name THM558
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PARTITION(O(O(OA))) [EQUIVALENCE-CLASSES(O(OA)(OAA)) Q(OAA)] IMPLIES EQUIVALENCE-REL(O(OAA)) Q(OAA)"
:needed-objects   (EQUIVALENCE-REL EQUIVALENCE-CLASSES PARTITION)
:mhelp "If the 'equivalence classes' of a relation
form a partition, then the relation is an equivalence relation."
:other-attributes NIL
:other-remarks "
")


(:name THM559
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "COVERING(O(O(OA))) [EQUIVALENCE-CLASSES(O(OA)(OAA)) Q(OAA)] IMPLIES EQUIVALENCE-REL(O(OAA)) Q(OAA)"
:needed-objects   (COVERING EQUIVALENCE-REL EQUIVALENCE-CLASSES)
:mhelp "If the 'equivalence classes' of a binary relation covers a type, then
the relation is, in fact, an equivalence relation."
:other-attributes NIL
:other-remarks "
")


(:name THM559A
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "CHOICE-COVERING(O(O(OA))) [EQUIVALENCE-CLASSES(O(OA)(OAA)) Q(OAA)] IMPLIES EQUIVALENCE-REL(O(OAA)) Q(OAA)"
:needed-objects   (CHOICE-COVERING EQUIVALENCE-CLASSES EQUIVALENCE-REL)
:mhelp "As in thm559, but for coverings with a choice function.
The real reason for this is because duplicating outermost quantifiers
is not enough to prove thm559, unless skolemization is used and there
are translation problems with skolemization and MS98."
:other-attributes NIL
:other-remarks "
")


(:name THM560
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OA(OA)) EXISTS g(A(OA)) FORALL x(OA) [EXISTS y(A) r(OA(OA)) x(OA) y(A) IMPLIES r(OA(OA)) x(OA).g(A(OA)) x(OA)] EQUIV FORALL s(O(OA)).FORALL X(OA) [s(O(OA)) X(OA) IMPLIES EXISTS t(A) X(OA) t(A)] IMPLIES EXISTS f(A(OA)) FORALL X(OA).s(O(OA)) X(OA) IMPLIES X(OA).f(A(OA)) X(OA)"
:needed-objects   NIL
:mhelp "AC1(A) equiv AC3(OA,A) from Rubin and Rubin.  Note that AC3 usually
refers to 'relations' where here we are using it for relations on OA x A."
:other-attributes NIL
:other-remarks "
")


(:name THM561
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "[FORALL s(O(OB)) [FORALL X(OB) [s(O(OB)) X(OB) IMPLIES EXISTS y(B) X(OB) y(B)] IMPLIES EXISTS f(B(OB)) FORALL X(OB).s(O(OB)) X(OB) IMPLIES X(OB).f(B(OB)) X(OB)] IMPLIES FORALL r(OBA) EXISTS g(BA) FORALL x(A).EXISTS y(B) r(OBA) x(A) y(B) IMPLIES r(OBA) x(A).g(BA) x(A)] AND.FORALL r(OA(OA)) EXISTS g(A(OA)) FORALL x(OA) [EXISTS y(A) r(OA(OA)) x(OA) y(A) IMPLIES r(OA(OA)) x(OA).g(A(OA)) x(OA)] IMPLIES FORALL s(O(OA)).FORALL X(OA) [s(O(OA)) X(OA) IMPLIES EXISTS t(A) X(OA) t(A)] IMPLIES EXISTS f(A(OA)) FORALL X(OA).s(O(OA)) X(OA) IMPLIES X(OA).f(A(OA)) X(OA)"
:needed-objects   NIL
:mhelp "Conjunction of THM532 and THM533.  We can prove both of
those theorems, but I never got it to prove this conjunction.
See also the equivalence THM560."
:other-attributes NIL
:other-remarks "
")


(:name THM562
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "AC17*(OA) T(A) IMPLIES EXISTS R(OAA) WELL-ORD(O(OAA)) R(OAA)"
:needed-objects   (AC17* WELL-ORD)
:mhelp "AC17 implies WO, hopefully has a proof based on the proof in Rubin and Rubin p. 17"
:other-attributes NIL
:other-remarks "
")


(:name THM563
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Sunday, March 26, 2000 at 18:47:28."
:description "CLOS-SYS1(O(O(OB))).LAMBDA W(OB).W(OB) 0(B) AND FORALL x(B) FORALL y(B) [W(OB) y(B) AND x(B) LESS(OBB) y(B) IMPLIES W(OB) x(B)] AND FORALL x(B) FORALL y(B) FORALL z(B).W(OB) x(B) AND W(OB) y(B) AND JOIN(OBBB) x(B) y(B) z(B) IMPLIES W(OB) z(B)"
:needed-objects   (CLOS-SYS1 LESS)
:mhelp "A closure system is a set of sets closed under arbitrary intersections.
Let $0$ be any element, $LESS$ be any binary relation and $JOIN$ be any tertiary
relation.  The next theorem states that the set of sets containing $0$,
downward closed with respect to $LESS$ and closed with respect to $JOIN$
is a closure system.

This theorem is related to CS-DUC-RELNS -- a generalization in a sense,
except that this theorem deals with sets rather than relations."
:other-attributes NIL
:other-remarks "
")


(:name THM564
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, March 23, 2000 at 16:00:38."
:description "FORALL P(OB(OB)) CLOS-SYS1(O(O(OB))).LAMBDA W(OB) FORALL X(OB) FORALL y(B).X(OB) SUBSET(O(OB)(OB)) W(OB) AND P(OB(OB)) X(OB) y(B) IMPLIES W(OB) y(B)"
:needed-objects   (CLOS-SYS1)
:mhelp "Generalization of THM563 suggested by Hongwei"
:other-attributes NIL
:other-remarks "
")


(:name THM565
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, March 23, 2000 at 16:03:28."
:description "FORALL P(O(OB)(OB)) CLOS-SYS1(O(O(OB))).LAMBDA W(OB) FORALL X(OB) FORALL Y(OB).X(OB) SUBSET(O(OB)(OB)) W(OB) AND P(O(OB)(OB)) X(OB) Y(OB) IMPLIES Y(OB) SUBSET(O(OB)(OB)) W(OB)"
:needed-objects   (CLOS-SYS1)
:mhelp "A generalization of THM564 (and THM563) suggested by Hongwei Xi."
:other-attributes NIL
:other-remarks "
")


(:name THM566
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "CLOS-SYS1(O(O(OB))) [LAMBDA W(OB) W(OB) 0(B)] AND CLOS-SYS1(O(O(OB))) [LAMBDA W(OB) FORALL x(B) FORALL y(B).W(OB) y(B) AND x(B) LESS(OBB) y(B) IMPLIES W(OB) x(B)] AND CLOS-SYS1(O(O(OB))) [LAMBDA W(OB) FORALL x(B) FORALL y(B) FORALL z(B).W(OB) x(B) AND W(OB) y(B) AND JOIN(OBBB) x(B) y(B) z(B) IMPLIES W(OB) z(B)] IMPLIES CLOS-SYS1(O(O(OB))).LAMBDA W(OB).W(OB) 0(B) AND FORALL x(B) FORALL y(B) [W(OB) y(B) AND x(B) LESS(OBB) y(B) AND W(OB) x(B)] AND FORALL x(B) FORALL y(B) FORALL z(B).W(OB) x(B) AND W(OB) y(B) AND JOIN(OBBB) x(B) y(B) z(B) IMPLIES W(OB) z(B)"
:needed-objects   (CLOS-SYS1)
:mhelp "A version of THM563 with lemmas as hyps."
:other-attributes NIL
:other-remarks "
")


(:name THM567
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "CLOS-SYS1(O(O(OB))) P(O(OB)) AND CLOS-SYS1(O(O(OB))) Q(O(OB)) IMPLIES CLOS-SYS1(O(O(OB))).LAMBDA W(OB).P(O(OB)) W(OB) AND Q(O(OB)) W(OB)"
:needed-objects   (CLOS-SYS1)
:mhelp "A lemma about closure systems.  Might be useful for proving THM563."
:other-attributes NIL
:other-remarks "
")


(:name THM568
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S(O(OB)) SUBSET(O(O(OB))(O(OB))) [DEDEKIND-CUT(O(OB)(OBB)) LESSEQ(OBB)] AND EXISTS x(OB) S(O(OB)) x(OB) AND EXISTS c(OB) [[DEDEKIND-CUT(O(OB)(OBB)) LESSEQ(OBB)] c(OB) AND FORALL x(OB).S(O(OB)) x(OB) IMPLIES c(OB) SUBSET(O(OB)(OB)) x(OB)] IMPLIES [DEDEKIND-CUT(O(OB)(OBB)) LESSEQ(OBB)].SETINTERSECT(OB(O(OB))) S(O(OB))"
:needed-objects   (DEDEKIND-CUT LESSEQ)
:mhelp "The idea of this theorem is that if a collection of real numbers (given by
Dedekind Cuts) is bounded from below, then the inf of the collection is a real number.

HOWEVER(!!!):  I accidentally defined DEDEKIND-CUT wrong.  See DDEDEKIND-CUT
for the corrected definition.

SEE ALSO: THM569, THM570, THM571, THM572, DEDEKIND-CUT, DDEDEKIND-CUT."
:other-attributes NIL
:other-remarks "
")


(:name THM569
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S(O(OB)) SUBSET(O(O(OB))(O(OB))) [DEDEKIND-CUT(O(OB)(OBB)) LESSEQ(OBB)] AND EXISTS x(OB) S(O(OB)) x(OB) AND EXISTS c(OB) [[DEDEKIND-CUT(O(OB)(OBB)) LESSEQ(OBB)] c(OB) AND FORALL x(OB).S(O(OB)) x(OB) IMPLIES c(OB) SUBSET(O(OB)(OB)) x(OB)] IMPLIES GLB(O(OB)(O(OB))(O(OB)(OB))(O(OB))) [DEDEKIND-CUT(O(OB)(OBB)) LESSEQ(OBB)] [LAMBDA x(OB) LAMBDA y(OB).x(OB) SUBSET(O(OB)(OB)) y(OB)] S(O(OB)).SETINTERSECT(OB(O(OB))) S(O(OB))"
:needed-objects   (DEDEKIND-CUT GLB LESSEQ)
:mhelp "Similar to THM568, but also proves SETINTERSECT S is glb of S (wrt SUBSET).

HOWEVER(!!!):  I accidentally defined DEDEKIND-CUT wrong.  See DDEDEKIND-CUT
and THM571 for the corrected thm."
:other-attributes NIL
:other-remarks "
")


(:name THM570
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S(O(OB)) SUBSET(O(O(OB))(O(OB))) [DEDEKIND-CUT(O(OB)(OBB)) LESSEQ(OBB)] AND EXISTS x(OB) S(O(OB)) x(OB) AND EXISTS c(OB) [[DEDEKIND-CUT(O(OB)(OBB)) LESSEQ(OBB)] c(OB) AND FORALL x(OB).S(O(OB)) x(OB) IMPLIES c(OB) SUBSET(O(OB)(OB)) x(OB)] IMPLIES EXISTS u(OB) GLB(O(OB)(O(OB))(O(OB)(OB))(O(OB))) [DEDEKIND-CUT(O(OB)(OBB)) LESSEQ(OBB)] [LAMBDA x(OB) LAMBDA y(OB).x(OB) SUBSET(O(OB)(OB)) y(OB)] S(O(OB)) u(OB)"
:needed-objects   (DEDEKIND-CUT GLB LESSEQ)
:mhelp "THM569, without saying what the glb is (so the proof requires a primsub --
essentially SETINTERSECT S(O(OB))).

THM570 says that every nonempty set of real numbers (given by Dedekind Cuts) which
is bounded from below has a greatest lower bound.

HOWEVER(!!!):  I accidentally defined DEDEKIND-CUT wrong.  See DDEDEKIND-CUT
and THM572 for the corrected thm."
:other-attributes NIL
:other-remarks "
")


(:name THM573
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Wednesday, June 21, 2000 at 12:16:25."
:description "INJECTIVE(O(I(OI))) h(I(OI)) IMPLIES EXISTS g(OII) SURJECTIVE(O(OII)) g(OII)"
:needed-objects   (INJECTIVE SURJECTIVE)
:mhelp "Challenge from Dana Scott stemming from X5309,
injective Cantor Theorem, Andrews' Challenge at CADE17
"
:other-attributes NIL
:other-remarks "
")


(:name THM574
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Friday, December  1, 2000 at  0:33:45."
:description "INJECTIVE(O(B(OA))) h(B(OA)) IMPLIES EXISTS g(OAB) SURJECTIVE(O(OAB)) g(OAB)"
:needed-objects   (INJECTIVE SURJECTIVE)
:mhelp "Challenge from Dana Scott stemming from X5309,
injective Cantor Theorem, Andrews' Challenge at CADE17

If h(B(OA)) is an injection, then there is a surjection g(OAB).
This is a generalization of THM573, and more meaningful since
there actually can be an injection h(B(OA)), but
not an injection h(I(OI))."
:other-attributes NIL
:other-remarks "
")


(:name THM575
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Friday, December 14, 2001 at 15:37:46."
:description "FORALL r(OII) EXISTS s(OII).r(OII) SUBRELN2(O(OII)(OII)) s(OII) AND TRANSITIVE(O(OII)) s(OII) AND FORALL t(OII).r(OII) SUBRELN2(O(OII)(OII)) t(OII) AND TRANSITIVE(O(OII)) t(OII) IMPLIES s(OII) SUBRELN2(O(OII)(OII)) t(OII)"
:needed-objects   (TRANSITIVE SUBRELN2)
:mhelp "existence of transitive closure"
:other-attributes NIL
:other-remarks "
")


(:name THM576
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, January 24, 2002 at  1:00:26."
:description "FORALL r(OAA) EXISTS s(OAA).r(OAA) SUBRELN2(O(OAA)(OAA)) s(OAA) AND SYMMETRIC(O(OAA)) s(OAA) AND FORALL t(OAA).r(OAA) SUBRELN2(O(OAA)(OAA)) t(OAA) AND SYMMETRIC(O(OAA)) t(OAA) IMPLIES s(OAA) SUBRELN2(O(OAA)(OAA)) t(OAA)"
:needed-objects   (SYMMETRIC SUBRELN2)
:mhelp "Existence of Symmetric Closure of a relation"
:other-attributes NIL
:other-remarks "
")


(:name THM576-LFP
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL K(OAA(OAA)) [FORALL r1(OAA) FORALL r2(OAA) [FORALL x(A) FORALL y(A) [r1(OAA) x(A) y(A) IMPLIES r2(OAA) x(A) y(A)] IMPLIES FORALL x(A) FORALL y(A).K(OAA(OAA)) r1(OAA) x(A) y(A) IMPLIES K(OAA(OAA)) r2(OAA) x(A) y(A)] IMPLIES EXISTS L(OAA).FORALL x(A) FORALL y(A) [L(OAA) x(A) y(A) IMPLIES K(OAA(OAA)) L(OAA) x(A) y(A)] AND FORALL x(A) FORALL y(A) [K(OAA(OAA)) L(OAA) x(A) y(A) IMPLIES L(OAA) x(A) y(A)] AND FORALL T(OAA).FORALL x(A) FORALL y(A) [K(OAA(OAA)) T(OAA) x(A) y(A) IMPLIES T(OAA) x(A) y(A)] IMPLIES FORALL x(A) FORALL y(A).L(OAA) x(A) y(A) IMPLIES T(OAA) x(A) y(A)] IMPLIES FORALL r(OAA) EXISTS s(OAA).r(OAA) SUBRELN2(O(OAA)(OAA)) s(OAA) AND SYMMETRIC(O(OAA)) s(OAA) AND FORALL t(OAA).r(OAA) SUBRELN2(O(OAA)(OAA)) t(OAA) AND SYMMETRIC(O(OAA)) t(OAA) IMPLIES s(OAA) SUBRELN2(O(OAA)(OAA)) t(OAA)"
:needed-objects   (SUBRELN2 SYMMETRIC)
:mhelp "THM576 with a version of the least fixed point theorem in the hypothesis"
:other-attributes NIL
:other-remarks "
")


(:name THM577
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, September 11, 2000 at 14:50:22."
:description "TRANSITIVE(O(OII)).LAMBDA x(I) LAMBDA y(I) FORALL p(OI).p(OI) x(I) AND FORALL n(I) [p(OI) n(I) IMPLIES p(OI).S(II) n(I)] IMPLIES p(OI) y(I)"
:needed-objects   (TRANSITIVE)
:mhelp "Inductive Defn of <= on naturals is Transitive"
:other-attributes NIL
:other-remarks "
")


(:name THM578
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER NEEDS-SETSUB)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, September 28, 2000 at 21:35:38."
:description "IND IMPLIES FORALL n(I).n(I) =(OII) 0(I) OR EXISTS m(I).n(I) =(OII) S(II) m(I)"
:needed-objects   (IND)
:mhelp "Variant of thm 6104 in TTTP, including induction in the hypothesis.
The set variable can be instantiated by unification."
:other-attributes NIL
:other-remarks "
")


(:name THM579
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER NEEDS-SETSUB)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Saturday, September 30, 2000 at 18:25:59."
:description "IND AND [D(OII) 0(I) 0(I) AND FORALL x(I) FORALL y(I).D(OII) x(I) y(I) IMPLIES D(OII) [S(II) x(I)].S(II).S(II) y(I)] IMPLIES FORALL x(I) EXISTS y(I) D(OII) x(I) y(I)"
:needed-objects   (IND)
:mhelp "Existence of doubles of naturals.  Proof by induction (setsub found by unification)"
:other-attributes NIL
:other-remarks "
")


(:name THM580
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Saturday, September 30, 2000 at 19:34:41."
:description "S-ALG(O($$$)$) 0($) P($$$) AND S-JOIN-CLOS(O(O$$$)($$$)$) 0($) P($$$) JOIN(O$$$) IMPLIES FORALL x($) JOIN(O$$$) x($) x($) x($)"
:needed-objects   (S-ALG S-JOIN-CLOS)
:mhelp "The join (in the initial pairing algebra $) of x and x is x.
S-ALG 0 P in the hypothesis forces the type $ to be the initial pairing algebra.
S-JOIN-CLOS 0 P JOIN in the hypothesis states the JOIN satisfies the proper closure conditions.
(We do not need that JOIN is the smallest such relation for this theorem.)
The proof is by induction on x using S-ALG 0 P."
:other-attributes NIL
:other-remarks "
")


(:name THM581
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER NEEDS-SETSUB)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, October  2, 2000 at 11:20:45."
:description "IND AND PLUS-INDEQS(O(II)I) 0(I) S(II) IMPLIES FORALL m(I).0(I) PLUS-LIBCONST(III) m(I) =(OII) m(I)"
:needed-objects   (PLUS-LIBCONST IND PLUS-INDEQS)
:mhelp "Assume natural number induction on type I, and inductive equations for +, we have
forall m . 0 + m = m"
:other-attributes NIL
:other-remarks "
")


(:name THM582
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER NEEDS-SETSUB)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, October  3, 2000 at 10:56:44."
:description "IND AND PLUS-INDEQS(O(II)I) 0(I) S(II) IMPLIES FORALL n(I) FORALL m(I).S(II) n(I) PLUS-LIBCONST(III) m(I) =(OII) S(II).n(I) PLUS-LIBCONST(III) m(I)"
:needed-objects   (IND PLUS-LIBCONST PLUS-INDEQS)
:mhelp "A lemma for proving + is commutative.  [S n] + m = S [n + m]."
:other-attributes NIL
:other-remarks "
")


(:name THM583
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER NEEDS-SETSUB)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, October  3, 2000 at 12:18:21."
:description "IND AND PLUS-INDEQS(O(II)I) 0(I) S(II) AND FORALL m(I) [0(I) PLUS-LIBCONST(III) m(I) =(OII) m(I)] AND FORALL n(I) FORALL m(I) [S(II) n(I) PLUS-LIBCONST(III) m(I) =(OII) S(II).n(I) PLUS-LIBCONST(III) m(I)] IMPLIES FORALL n(I) FORALL m(I).n(I) PLUS-LIBCONST(III) m(I) =(OII) m(I) PLUS-LIBCONST(III) n(I)"
:needed-objects   (IND PLUS-INDEQS PLUS-LIBCONST)
:mhelp "Commutativity of + on N, given IND at type I, rec eqns for +, and
two lemmas 0 + m = m and [S n] + m = S [n + m] (see THM581 and THM582)."
:other-attributes NIL
:other-remarks "
")


(:name THM584
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER NEEDS-SETSUB)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, October  2, 2000 at 22:24:25."
:description "IND AND PLUS-INDEQS(O(II)I) 0(I) S(II) IMPLIES FORALL n(I) FORALL m(I) FORALL k(I).m(I) PLUS-LIBCONST(III) n(I) PLUS-LIBCONST(III) k(I) =(OII) m(I) PLUS-LIBCONST(III).n(I) PLUS-LIBCONST(III) k(I)"
:needed-objects   (IND PLUS-LIBCONST PLUS-INDEQS)
:mhelp "Associativity of addition, proven by induction on k."
:other-attributes NIL
:other-remarks "
")


(:name THM585
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "IND AND PETER-INDEQS(O(III)(II)I) 0(I) S(II) PSI(III) IMPLIES FORALL m(I) FORALL n(I) EXISTS k(I).PSI(III) m(I) n(I) =(OII) S(II) k(I)"
:needed-objects   (IND PETER-INDEQS)
:mhelp "Peter's function (modification of Ackermann's function, see Appendix A of Barendregt's Lambda Calculus)
always returns a positive value.  The proof is by induction on m, but the
induction step requires a case split on whether n is 0 or positive.
For TPS to do this case split it currently must, essentially, do
a nested induction on n."
:other-attributes NIL
:other-remarks "
")


(:name THM586
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "IND AND PLUS-INDEQS(O(II)I) 0(I) S(II) IMPLIES FORALL n(I) FORALL m(I).m(I) PLUS-LIBCONST(III) n(I) =(OII) n(I) PLUS-LIBCONST(III) m(I)"
:needed-objects   (IND PLUS-INDEQS PLUS-LIBCONST)
:mhelp "Commutativity of addition without lemmas.  Compare to THM584."
:other-attributes NIL
:other-remarks "
")


(:name THM587
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER NEEDS-SETSUB)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Wednesday, November 29, 2000 at 15:32:00."
:description "IND AND PLUS-INDEQS(O(II)I) 0(I) S(II) IMPLIES FORALL x(I) FORALL y(I).x(I) PLUS-LIBCONST(III) y(I) PLUS-LIBCONST(III) y(I) =(OII) x(I) PLUS-LIBCONST(III).y(I) PLUS-LIBCONST(III) y(I)"
:needed-objects   (IND PLUS-INDEQS PLUS-LIBCONST)
:mhelp "A special case of associativity of addition (THM584).  [x + y] + y = x + [y + y].
Without a lemma giving Sx + y = S[x + y], we can't do the induction on x, and induction on y fails too.
The solution is to generalize this to associativity.  In terms of unification (PR00), the setvar P
should go to lambda z . [x + y] + z = x + [y + z].  So, this is an example of how to use unification to
generalize the problem to be shown by induction.

This was suggested by Michael Kohlhase, Nov 2000."
:other-attributes NIL
:other-remarks "
")


(:name THM588
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) FORALL y(I) [g(II) x(I) =(OII) g(II) y(I) IMPLIES f(II) x(I) =(OII) f(II) y(I)] IMPLIES EXISTS h(II).h(II) COMPOSE(II(II)(II)) g(II) =(O(II)(II)) f(II)"
:needed-objects   (COMPOSE)
:mhelp "John Harrison sent this to me as a challenge problem.
It requires descriptions and a definition by cases.
See also THM589 where I replaced some of the type I's with the set type OI.
The definition of h should be simpler here."
:other-attributes NIL
:other-remarks "
")


(:name THM588AC
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "AC*(OI) TYPE(I) IMPLIES.FORALL x(I) FORALL y(I) [g(II) x(I) =(OII) g(II) y(I) IMPLIES f(II) x(I) =(OII) f(II) y(I)] IMPLIES EXISTS h(II).h(II) COMPOSE(II(II)(II)) g(II) =(O(II)(II)) f(II)"
:needed-objects   (AC* COMPOSE)
:mhelp "THM588, but with AC* in the hypothesis"
:other-attributes NIL
:other-remarks "
")


(:name THM588AC2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OII) [FORALL x(I) EXISTS y(I) r(OII) x(I) y(I) IMPLIES EXISTS h(II) FORALL x(I) r(OII) x(I).h(II) x(I)] IMPLIES.FORALL x(I) FORALL y(I) [g(II) x(I) =(OII) g(II) y(I) IMPLIES f(II) x(I) =(OII) f(II) y(I)] IMPLIES EXISTS h(II).h(II) COMPOSE(II(II)(II)) g(II) =(O(II)(II)) f(II)"
:needed-objects   (COMPOSE)
:mhelp "A variant of thm588 with an appropriate version of AC in the hypothesis."
:other-attributes NIL
:other-remarks "
")


(:name THM588LEM1
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OII) [FORALL x(I) EXISTS y(I) r(OII) x(I) y(I) IMPLIES EXISTS h(II) FORALL x(I) r(OII) x(I).h(II) x(I)] IMPLIES.FORALL x(I) FORALL y(I) [g(II) x(I) =(OII) g(II) y(I) IMPLIES f(II) x(I) =(OII) f(II) y(I)] IMPLIES EXISTS h(II) FORALL x(I) FORALL y(I).g(II) x(I) =(OII) y(I) IMPLIES h(II) y(I) =(OII) f(II) x(I)"
:needed-objects   NIL
:mhelp "Another variant of THM588, which can be used as a lemma.  Suggested by
John Harrison"
:other-attributes NIL
:other-remarks "
")


(:name THM588LEM2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, January 25, 2001 at 15:54:33."
:description "FORALL x(I) FORALL y(I) [g(II) x(I) =(OII) y(I) IMPLIES h(II) y(I) =(OII) f(II) x(I)] IMPLIES h(II) COMPOSE(II(II)(II)) g(II) =(O(II)(II)) f(II)"
:needed-objects   (COMPOSE)
:mhelp "Another possible lemma for THM588, for manipulating composite functions."
:other-attributes NIL
:other-remarks "
")


(:name THM589
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, January 18, 2001 at 15:45:20."
:description "FORALL x(I) FORALL y(I) [g(OII) x(I) =(O(OI)(OI)) g(OII) y(I) IMPLIES f(OII) x(I) =(O(OI)(OI)) f(OII) y(I)] IMPLIES EXISTS h(OI(OI)).h(OI(OI)) COMPOSE(OII(OII)(OI(OI))) g(OII) =(O(OII)(OII)) f(OII)"
:needed-objects   (COMPOSE)
:mhelp "Special case of THM588"
:other-attributes NIL
:other-remarks "
")


(:name THM590
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, February 12, 2001 at 22:40:09."
:description "EXISTS S(OI).S(OI) SUBSET(O(OI)(OI)) P(OI) AND S(OI) SUBSET(O(OI)(OI)) Q(OI) AND FORALL R(OI).R(OI) SUBSET(O(OI)(OI)) P(OI) AND R(OI) SUBSET(O(OI)(OI)) Q(OI) IMPLIES R(OI) SUBSET(O(OI)(OI)) S(OI)"
:needed-objects   NIL
:mhelp "A simple theorem about existence of intersection used for testing solving
for set variables using maximal constraints."
:other-attributes NIL
:other-remarks "
")


(:name THM591
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) FORALL y(I) [g(II) x(I) =(OII) g(II) y(I) IMPLIES x(I) =(OII) y(I)] IMPLIES EXISTS h(II).h(II) COMPOSE(II(II)(II)) g(II) =(O(II)(II)) LAMBDA x(I) x(I)"
:needed-objects   (COMPOSE)
:mhelp "A simpler version of John Harrison's 'little puzzle'.  Every
injective function has a left inverse.

SEE ALSO THM588 THM589 THM588LEM1 THM588LEM2 THM588AC THM588AC2"
:other-attributes NIL
:other-remarks "
")


(:name THM593
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL F(OB(OA)).FORALL X(OA) FORALL Y(OA) [X(OA) SUBSET(O(OA)(OA)) Y(OA) IMPLIES F(OB(OA)) X(OA) SUBSET(O(OB)(OB)) F(OB(OA)) Y(OA)] AND FORALL X(OA) FORALL Y(OA) [F(OB(OA)) X(OA) =(O(OB)(OB)) F(OB(OA)) Y(OA) IMPLIES X(OA) =(O(OA)(OA)) Y(OA)] AND FORALL Z(OB) EXISTS Y(OA) [F(OB(OA)) Y(OA) =(O(OB)(OB)) Z(OB)] IMPLIES FORALL X(OA) FORALL Y(OA).F(OB(OA)) X(OA) SUBSET(O(OB)(OB)) F(OB(OA)) Y(OA) IMPLIES X(OA) SUBSET(O(OA)(OA)) Y(OA)"
:needed-objects   NIL
:mhelp "A different formulation of THM593 - showing inverse of a monotone
isomorphism of sets is monotone."
:other-attributes NIL
:other-remarks "
")


(:name THM599
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, January 24, 2002 at  2:55:00."
:description "FORALL r(OAA) EXISTS s(OAA).r(OAA) SUBRELN2(O(OAA)(OAA)) s(OAA) AND REFLEXIVE(O(OAA)) s(OAA) AND FORALL t(OAA).r(OAA) SUBRELN2(O(OAA)(OAA)) t(OAA) AND REFLEXIVE(O(OAA)) t(OAA) IMPLIES s(OAA) SUBRELN2(O(OAA)(OAA)) t(OAA)"
:needed-objects   (REFLEXIVE SUBRELN2)
:mhelp "existence of reflexive closure"
:other-attributes NIL
:other-remarks "
")


(:name THM600
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, January 24, 2002 at  1:29:14."
:description "FORALL r(OII) EXISTS s(OII).r(OII) SUBRELN2(O(OII)(OII)) s(OII) AND PER(O(OII)) s(OII) AND FORALL t(OII).r(OII) SUBRELN2(O(OII)(OII)) t(OII) AND PER(O(OII)) t(OII) IMPLIES s(OII) SUBRELN2(O(OII)(OII)) t(OII)"
:needed-objects   (PER SUBRELN2)
:mhelp "existence of a Symmetric, Transitive Closure (Per Closure)"
:other-attributes NIL
:other-remarks "
")


(:name THM601
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OII) EXISTS s(OII).r(OII) SUBRELN2(O(OII)(OII)) s(OII) AND EQRELN(O(OII)) s(OII) AND FORALL t(OII).r(OII) SUBRELN2(O(OII)(OII)) t(OII) AND EQRELN(O(OII)) t(OII) IMPLIES s(OII) SUBRELN2(O(OII)(OII)) t(OII)"
:needed-objects   (EQRELN SUBRELN2)
:mhelp "existence of an eq reln closure"
:other-attributes NIL
:other-remarks "
")


(:name THM602A
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[~p01(O) OR ~p11(O)] AND [~p02(O) OR ~p12(O)] AND [~p03(O) OR ~p13(O)] AND [~p04(O) OR ~p14(O)] AND [~p05(O) OR ~p15(O)] AND [~p06(O) OR ~p16(O)] AND [~p07(O) OR ~p17(O)] AND [~p10(O) OR ~p20(O)] AND [~p11(O) OR ~p01(O) AND ~p21(O)] AND [~p12(O) OR ~p02(O) AND ~p22(O)] AND [~p13(O) OR ~p03(O) AND ~p23(O)] AND [~p14(O) OR ~p04(O) AND ~p24(O)] AND [~p15(O) OR ~p05(O) AND ~p25(O)] AND [~p16(O) OR ~p06(O) AND ~p26(O)] AND [~p17(O) OR ~p07(O) AND ~p27(O)] AND [~p20(O) OR ~p10(O) AND ~p30(O)] AND [~p21(O) OR ~p11(O) AND ~p31(O)] AND [~p22(O) OR ~p12(O) AND ~p32(O)] AND [~p23(O) OR ~p13(O) AND ~p33(O)] AND [~p24(O) OR ~p14(O) AND ~p34(O)] AND [~p25(O) OR ~p15(O) AND ~p35(O)] AND [~p26(O) OR ~p16(O) AND ~p36(O)] AND [~p27(O) OR ~p17(O) AND ~p37(O)] AND [~p30(O) OR ~p20(O) AND ~p40(O)] AND [~p31(O) OR ~p21(O) AND ~p41(O)] AND [~p32(O) OR ~p22(O) AND ~p42(O)] AND [~p33(O) OR ~p23(O) AND ~p43(O)] AND [~p34(O) OR ~p24(O) AND ~p44(O)] AND [~p35(O) OR ~p25(O) AND ~p45(O)] AND [~p36(O) OR ~p26(O) AND ~p46(O)] AND [~p37(O) OR ~p27(O) AND ~p47(O)] AND [~p40(O) OR ~p30(O) AND ~p50(O)] AND [~p41(O) OR ~p31(O) AND ~p51(O)] AND [~p42(O) OR ~p32(O) AND ~p52(O)] AND [~p43(O) OR ~p33(O) AND ~p53(O)] AND [~p44(O) OR ~p34(O) AND ~p54(O)] AND [~p45(O) OR ~p35(O) AND ~p55(O)] AND [~p46(O) OR ~p36(O) AND ~p56(O)] AND [~p47(O) OR ~p37(O) AND ~p57(O)] AND [~p50(O) OR ~p40(O) AND ~p60(O)] AND [~p51(O) OR ~p41(O) AND ~p61(O)] AND [~p52(O) OR ~p42(O) AND ~p62(O)] AND [~p53(O) OR ~p43(O) AND ~p63(O)] AND [~p54(O) OR ~p44(O) AND ~p64(O)] AND [~p55(O) OR ~p45(O) AND ~p65(O)] AND [~p56(O) OR ~p46(O) AND ~p66(O)] AND [~p57(O) OR ~p47(O)] AND [~p60(O) OR ~p50(O)] AND [~p61(O) OR ~p51(O)] AND [~p62(O) OR ~p52(O)] AND [~p63(O) OR ~p53(O)] AND [~p64(O) OR ~p54(O)] AND [~p65(O) OR ~p55(O)] AND [~p66(O) OR ~p56(O)] AND [[~q01(O) OR ~q02(O)] AND [~q02(O) OR ~q01(O) AND ~q03(O)] AND [~q03(O) OR ~q02(O) AND ~q04(O)] AND [~q04(O) OR ~q03(O) AND ~q05(O)] AND [~q05(O) OR ~q04(O) AND ~q06(O)] AND [~q06(O) OR ~q05(O)] AND [~q10(O) OR ~q11(O)] AND [~q11(O) OR ~q10(O) AND ~q12(O)] AND [~q12(O) OR ~q11(O) AND ~q13(O)] AND [~q13(O) OR ~q12(O) AND ~q14(O)] AND [~q14(O) OR ~q13(O) AND ~q15(O)] AND [~q15(O) OR ~q14(O) AND ~q16(O)] AND [~q16(O) OR ~q15(O)] AND [~q20(O) OR ~q21(O)] AND [~q21(O) OR ~q20(O) AND ~q22(O)] AND [~q22(O) OR ~q21(O) AND ~q23(O)] AND [~q23(O) OR ~q22(O) AND ~q24(O)] AND [~q24(O) OR ~q23(O) AND ~q25(O)] AND [~q25(O) OR ~q24(O) AND ~q26(O)] AND [~q26(O) OR ~q25(O)] AND [~q30(O) OR ~q31(O)] AND [~q31(O) OR ~q30(O) AND ~q32(O)] AND [~q32(O) OR ~q31(O) AND ~q33(O)] AND [~q33(O) OR ~q32(O) AND ~q34(O)] AND [~q34(O) OR ~q33(O) AND ~q35(O)] AND [~q35(O) OR ~q34(O) AND ~q36(O)] AND [~q36(O) OR ~q35(O)] AND [~q40(O) OR ~q41(O)] AND [~q41(O) OR ~q40(O) AND ~q42(O)] AND [~q42(O) OR ~q41(O) AND ~q43(O)] AND [~q43(O) OR ~q42(O) AND ~q44(O)] AND [~q44(O) OR ~q43(O) AND ~q45(O)] AND [~q45(O) OR ~q44(O) AND ~q46(O)] AND [~q46(O) OR ~q45(O)] AND [~q50(O) OR ~q51(O)] AND [~q51(O) OR ~q50(O) AND ~q52(O)] AND [~q52(O) OR ~q51(O) AND ~q53(O)] AND [~q53(O) OR ~q52(O) AND ~q54(O)] AND [~q54(O) OR ~q53(O) AND ~q55(O)] AND [~q55(O) OR ~q54(O) AND ~q56(O)] AND [~q56(O) OR ~q55(O)] AND [~q60(O) OR ~q61(O)] AND [~q61(O) OR ~q60(O) AND ~q62(O)] AND [~q62(O) OR ~q61(O) AND ~q63(O)] AND [~q63(O) OR ~q62(O) AND ~q64(O)] AND [~q64(O) OR ~q63(O) AND ~q65(O)] AND [~q65(O) OR ~q64(O) AND ~q66(O)] AND [~q66(O) OR ~q65(O)] AND [~q70(O) OR ~q71(O)] AND [~q71(O) OR ~q70(O) AND ~q72(O)] AND [~q72(O) OR ~q71(O) AND ~q73(O)] AND [~q73(O) OR ~q72(O) AND ~q74(O)] AND [~q74(O) OR ~q73(O) AND ~q75(O)] AND.~q75(O) OR ~q74(O)] AND [[~p01(O) OR ~q01(O) AND ~q10(O) AND ~q11(O)] AND [~p02(O) OR ~q02(O) AND ~q01(O) AND ~q11(O) AND ~q12(O)] AND [~p03(O) OR ~q03(O) AND ~q02(O) AND ~q12(O) AND ~q13(O)] AND [~p04(O) OR ~q04(O) AND ~q03(O) AND ~q13(O) AND ~q14(O)] AND [~p05(O) OR ~q05(O) AND ~q04(O) AND ~q14(O) AND ~q15(O)] AND [~p06(O) OR ~q06(O) AND ~q05(O) AND ~q15(O) AND ~q16(O)] AND [~p07(O) OR ~q06(O) AND ~q16(O)] AND [~p10(O) OR ~q10(O) AND ~q20(O)] AND [~p11(O) OR ~q11(O) AND ~q10(O) AND ~q20(O) AND ~q21(O)] AND [~p12(O) OR ~q12(O) AND ~q11(O) AND ~q21(O) AND ~q22(O)] AND [~p13(O) OR ~q13(O) AND ~q12(O) AND ~q22(O) AND ~q23(O)] AND [~p14(O) OR ~q14(O) AND ~q13(O) AND ~q23(O) AND ~q24(O)] AND [~p15(O) OR ~q15(O) AND ~q14(O) AND ~q24(O) AND ~q25(O)] AND [~p16(O) OR ~q16(O) AND ~q15(O) AND ~q25(O) AND ~q26(O)] AND [~p17(O) OR ~q16(O) AND ~q26(O)] AND [~p20(O) OR ~q20(O) AND ~q30(O)] AND [~p21(O) OR ~q21(O) AND ~q20(O) AND ~q30(O) AND ~q31(O)] AND [~p22(O) OR ~q22(O) AND ~q21(O) AND ~q31(O) AND ~q32(O)] AND [~p23(O) OR ~q23(O) AND ~q22(O) AND ~q32(O) AND ~q33(O)] AND [~p24(O) OR ~q24(O) AND ~q23(O) AND ~q33(O) AND ~q34(O)] AND [~p25(O) OR ~q25(O) AND ~q24(O) AND ~q34(O) AND ~q35(O)] AND [~p26(O) OR ~q26(O) AND ~q25(O) AND ~q35(O) AND ~q36(O)] AND [~p27(O) OR ~q26(O) AND ~q36(O)] AND [~p30(O) OR ~q30(O) AND ~q40(O)] AND [~p31(O) OR ~q31(O) AND ~q30(O) AND ~q40(O) AND ~q41(O)] AND [~p32(O) OR ~q32(O) AND ~q31(O) AND ~q41(O) AND ~q42(O)] AND [~p33(O) OR ~q33(O) AND ~q32(O) AND ~q42(O) AND ~q43(O)] AND [~p34(O) OR ~q34(O) AND ~q33(O) AND ~q43(O) AND ~q44(O)] AND [~p35(O) OR ~q35(O) AND ~q34(O) AND ~q44(O) AND ~q45(O)] AND [~p36(O) OR ~q36(O) AND ~q35(O) AND ~q45(O) AND ~q46(O)] AND [~p37(O) OR ~q36(O) AND ~q46(O)] AND [~p40(O) OR ~q40(O) AND ~q50(O)] AND [~p41(O) OR ~q41(O) AND ~q40(O) AND ~q50(O) AND ~q51(O)] AND [~p42(O) OR ~q42(O) AND ~q41(O) AND ~q51(O) AND ~q52(O)] AND [~p43(O) OR ~q43(O) AND ~q42(O) AND ~q52(O) AND ~q53(O)] AND [~p44(O) OR ~q44(O) AND ~q43(O) AND ~q53(O) AND ~q54(O)] AND [~p45(O) OR ~q45(O) AND ~q44(O) AND ~q54(O) AND ~q55(O)] AND [~p46(O) OR ~q46(O) AND ~q45(O) AND ~q55(O) AND ~q56(O)] AND [~p47(O) OR ~q46(O) AND ~q56(O)] AND [~p50(O) OR ~q50(O) AND ~q60(O)] AND [~p51(O) OR ~q51(O) AND ~q50(O) AND ~q60(O) AND ~q61(O)] AND [~p52(O) OR ~q52(O) AND ~q51(O) AND ~q61(O) AND ~q62(O)] AND [~p53(O) OR ~q53(O) AND ~q52(O) AND ~q62(O) AND ~q63(O)] AND [~p54(O) OR ~q54(O) AND ~q53(O) AND ~q63(O) AND ~q64(O)] AND [~p55(O) OR ~q55(O) AND ~q54(O) AND ~q64(O) AND ~q65(O)] AND [~p56(O) OR ~q56(O) AND ~q55(O) AND ~q65(O) AND ~q66(O)] AND [~p57(O) OR ~q56(O) AND ~q66(O)] AND [~p60(O) OR ~q60(O) AND ~q70(O)] AND [~p61(O) OR ~q61(O) AND ~q60(O) AND ~q70(O) AND ~q71(O)] AND [~p62(O) OR ~q62(O) AND ~q61(O) AND ~q71(O) AND ~q72(O)] AND [~p63(O) OR ~q63(O) AND ~q62(O) AND ~q72(O) AND ~q73(O)] AND [~p64(O) OR ~q64(O) AND ~q63(O) AND ~q73(O) AND ~q74(O)] AND [~p65(O) OR ~q65(O) AND ~q64(O) AND ~q74(O) AND ~q75(O)] AND.~p66(O) OR ~q66(O) AND ~q65(O) AND ~q75(O)] AND [[p01(O) OR q01(O)] AND [p02(O) OR q02(O) OR q01(O)] AND [p03(O) OR q03(O) OR q02(O)] AND [p04(O) OR q04(O) OR q03(O)] AND [p05(O) OR q05(O) OR q04(O)] AND [p06(O) OR q06(O) OR q05(O)] AND [p07(O) OR q06(O)] AND [p10(O) OR q10(O)] AND [p11(O) OR p01(O) OR q11(O) OR q10(O)] AND [p12(O) OR p02(O) OR q12(O) OR q11(O)] AND [p13(O) OR p03(O) OR q13(O) OR q12(O)] AND [p14(O) OR p04(O) OR q14(O) OR q13(O)] AND [p15(O) OR p05(O) OR q15(O) OR q14(O)] AND [p16(O) OR p06(O) OR q16(O) OR q15(O)] AND [p17(O) OR p07(O) OR q16(O)] AND [p20(O) OR p10(O) OR q20(O)] AND [p21(O) OR p11(O) OR q21(O) OR q20(O)] AND [p22(O) OR p12(O) OR q22(O) OR q21(O)] AND [p23(O) OR p13(O) OR q23(O) OR q22(O)] AND [p24(O) OR p14(O) OR q24(O) OR q23(O)] AND [p25(O) OR p15(O) OR q25(O) OR q24(O)] AND [p26(O) OR p16(O) OR q26(O) OR q25(O)] AND [p27(O) OR p17(O) OR q26(O)] AND [p30(O) OR p20(O) OR q30(O)] AND [p31(O) OR p21(O) OR q31(O) OR q30(O)] AND [p32(O) OR p22(O) OR q32(O) OR q31(O)] AND [p33(O) OR p23(O) OR q33(O) OR q32(O)] AND [p34(O) OR p24(O) OR q34(O) OR q33(O)] AND [p35(O) OR p25(O) OR q35(O) OR q34(O)] AND [p36(O) OR p26(O) OR q36(O) OR q35(O)] AND [p37(O) OR p27(O) OR q36(O)] AND [p40(O) OR p30(O) OR q40(O)] AND [p41(O) OR p31(O) OR q41(O) OR q40(O)] AND [p42(O) OR p32(O) OR q42(O) OR q41(O)] AND [p43(O) OR p33(O) OR q43(O) OR q42(O)] AND [p44(O) OR p34(O) OR q44(O) OR q43(O)] AND [p45(O) OR p35(O) OR q45(O) OR q44(O)] AND [p46(O) OR p36(O) OR q46(O) OR q45(O)] AND [p47(O) OR p37(O) OR q46(O)] AND [p50(O) OR p40(O) OR q50(O)] AND [p51(O) OR p41(O) OR q51(O) OR q50(O)] AND [p52(O) OR p42(O) OR q52(O) OR q51(O)] AND [p53(O) OR p43(O) OR q53(O) OR q52(O)] AND [p54(O) OR p44(O) OR q54(O) OR q53(O)] AND [p55(O) OR p45(O) OR q55(O) OR q54(O)] AND [p56(O) OR p46(O) OR q56(O) OR q55(O)] AND [p57(O) OR p47(O) OR q56(O)] AND [p60(O) OR p50(O) OR q60(O)] AND [p61(O) OR p51(O) OR q61(O) OR q60(O)] AND [p62(O) OR p52(O) OR q62(O) OR ~q61(O)] AND [p63(O) OR p53(O) OR q63(O) OR q62(O)] AND [p64(O) OR p54(O) OR q64(O) OR q63(O)] AND [p65(O) OR p55(O) OR q65(O) OR q64(O)] AND [p66(O) OR p56(O) OR q66(O) OR q65(O)] AND [p57(O) OR q66(O)] AND [p60(O) OR q70(O)] AND [p61(O) OR q71(O) OR q70(O)] AND [p62(O) OR q72(O) OR q71(O)] AND [p63(O) OR q73(O) OR q72(O)] AND [p64(O) OR q74(O) OR q73(O)] AND [p65(O) OR q75(O) OR q74(O)] AND.p66(O) OR q75(O)] IMPLIES FALSEHOOD"
:needed-objects   NIL
:mhelp "A version of THM602 in which a lot of the propositional variables have been sent to FALSEHOOD"
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "A(O(OA)) SUBSET(O(O(OA))(O(OA))) POWERSET(O(OA)(OA)).SETUNION(OA(O(OA))) A(O(OA))"
:needed-objects   NIL
:mhelp "Theorem from Dana Scott's Domain Theory course
stating that any set of sets A is a subset of the power set of its union."
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "T0SPACE(O(O(O(OA)))(O(OA))) A(O(OA)).SET-TOPOLOGY(O(O(OA))(O(OA))) A(O(OA))"
:needed-objects   (T0SPACE SET-TOPOLOGY)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM3
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "A(O(OA)) SUBSET(O(O(OA))(O(OA))) B(O(OA)) IMPLIES SET-TOPOLOGY(O(O(OA))(O(OA))) A(O(OA)) =(O(O(O(OA)))(O(O(OA)))) LAMBDA U(O(OA)) EXISTS V(O(OA)).SET-TOPOLOGY(O(O(OA))(O(OA))) B(O(OA)) V(O(OA)) AND U(O(OA)) =(O(O(OA))(O(OA))) V(O(OA)) INTERSECT(O(OA)(O(OA))(O(OA))) A(O(OA))"
:needed-objects   (SET-TOPOLOGY)
:mhelp "Domain Theory Slides"
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM4
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(OA) [A(O(OA)) x(OA) IMPLIES B(O(OB)).f(OB(OA)) x(OA)] IMPLIES.SET-CTS(O(OB(OA))(O(OB))(O(OA))) A(O(OA)) B(O(OB)) f(OB(OA)) EQUIV FORALL x(OA).A(O(OA)) x(OA) IMPLIES f(OB(OA)) x(OA) =(O(OB)(OB)) SETUNION(OB(O(OB))).LAMBDA w(OB) EXISTS d(OA).d(OA) FINITESUBSET(O(OA)(OA)) x(OA) AND w(OB) =(O(OB)(OB)) SETINTERSECT(OB(O(OB))).LAMBDA z(OB) EXISTS y(OA).A(O(OA)) y(OA) AND d(OA) FINITESUBSET(O(OA)(OA)) y(OA) AND z(OB) =(O(OB)(OB)) f(OB(OA)) y(OA)"
:needed-objects   (FINITESUBSET SET-CTS)
:mhelp "Domain Theory Slides.  Characterization of cts functions"
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM5
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(OB(OA))(O(OB))(O(OA))) A(O(OA)) B(O(OB)) f(OB(OA)) EQUIV T0CTS(O(OB(OA))(O(O(OB)))(O(OB))(O(O(OA)))(O(OA))) A(O(OA)) [SET-TOPOLOGY(O(O(OA))(O(OA))) A(O(OA))] B(O(OB)) [SET-TOPOLOGY(O(O(OB))(O(OB))) B(O(OB))] f(OB(OA))"
:needed-objects   (SET-CTS T0CTS SET-TOPOLOGY)
:mhelp "Domain Theory Slides.  This says continuity as defined for the
intrinsic topology on sets of sets is the same as the general topological notion
of continuity.  This theorem does not actually appear in the slides, but
the Representation Theorem, in some sense assumes it is true."
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM7
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "A(O(OA)) SUBSET(O(O(OA))(O(OA))) B(O(OA)) AND ACS(O(O(OB))) C(O(OB)) AND SET-CTS(O(OB(OA))(O(OB))(O(OA))) A(O(OA)) C(O(OB)) f(OB(OA)) IMPLIES EXISTS g(OB(OA)).SET-CTS(O(OB(OA))(O(OB))(O(OA))) B(O(OA)) C(O(OB)) g(OB(OA)) AND FORALL x(OA).A(O(OA)) x(OA) IMPLIES f(OB(OA)) x(OA) =(O(OB)(OB)) g(OB(OA)) x(OA)"
:needed-objects   (ACS SET-CTS)
:mhelp "Domain Theory Slides.  The Extension Theorem"
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM8
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(OA(OA))(O(OA))(O(OA))) A(O(OA)) A(O(OA)).LAMBDA x(OA) x(OA)"
:needed-objects   (SET-CTS)
:mhelp "Domain Theory Slides.Identity maps on sets of sets are continuous.
Categorical Considerations.
Identity maps on sets of sets are continuous."
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM9
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(OB(OA))(O(OB))(O(OA))) A(O(OA)) B(O(OB)) f(OB(OA)) AND SET-CTS(O(OC(OB))(O(OC))(O(OB))) B(O(OB)) C(O(OC)) g(OC(OB)) IMPLIES SET-CTS(O(OC(OA))(O(OC))(O(OA))) A(O(OA)) C(O(OC)).g(OC(OB)) COMPOSE(OC(OA)(OB(OA))(OC(OB))) f(OB(OA))"
:needed-objects   (SET-CTS COMPOSE)
:mhelp "Domain Theory Slides.
Categorical Considerations.
The composition of continuous functions is continuous."
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM10
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(OA(O(O(OB)(OA))))(O(OA))(O(O(O(OB)(OA))))) [SET-PROD-T(O(O(O(OB)(OA)))(O(OB))(O(OA))) A(O(OA)) B(O(OB))] A(O(OA)) T-PI1(OA(O(O(OB)(OA))))"
:needed-objects   (SET-CTS SET-PROD-T T-PI1)
:mhelp "Domain Theory Slides.
Categorical Considerations.
Products.  First Projection is Continuous."
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM11
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(OB(O(O(OB)(OA))))(O(OB))(O(O(O(OB)(OA))))) [SET-PROD-T(O(O(O(OB)(OA)))(O(OB))(O(OA))) A(O(OA)) B(O(OB))] B(O(OB)) T-PI2(OB(O(O(OB)(OA))))"
:needed-objects   (SET-CTS SET-PROD-T T-PI2)
:mhelp "Domain Theory Slides.
Categorical Considerations.
Products.  Second Projection is Continuous."
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM12
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(OA(OC))(O(OA))(O(OC))) C(O(OC)) A(O(OA)) f(OA(OC)) AND SET-CTS(O(OB(OC))(O(OB))(O(OC))) C(O(OC)) B(O(OB)) g(OB(OC)) IMPLIES SET-CTS(O(O(O(OB)(OA))(OC))(O(O(O(OB)(OA))))(O(OC))) C(O(OC)) [SET-PROD-T(O(O(O(OB)(OA)))(O(OB))(O(OA))) A(O(OA)) B(O(OB))].T-FPAIR(O(O(OB)(OA))(OC)(OB(OC))(OA(OC))) f(OA(OC)) g(OB(OC))"
:needed-objects   (SET-CTS SET-PROD-T T-FPAIR)
:mhelp "Domain Theory Slides.
Categorical Considerations.
Function Pair of cts functions is cts."
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM13
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(OA(OC))(O(OA))(O(OC))) C(O(OC)) A(O(OA)) f(OA(OC)) AND SET-CTS(O(OB(OC))(O(OB))(O(OC))) C(O(OC)) B(O(OB)) g(OB(OC)) IMPLIES EQUAL-PARTIALS(O(OA(OC))(OA(OC))(O(OC))) C(O(OC)) [T-PI1(OA(O(O(OB)(OA)))) COMPOSE(OA(OC)(O(O(OB)(OA))(OC))(OA(O(O(OB)(OA))))) T-FPAIR(O(O(OB)(OA))(OC)(OB(OC))(OA(OC))) f(OA(OC)) g(OB(OC))] f(OA(OC))"
:needed-objects   (SET-CTS T-PI1 COMPOSE EQUAL-PARTIALS T-FPAIR)
:mhelp "Domain Theory Slides.
Categorical Considerations.
UMP of products -- existence, 1 of 2"
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM14
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(OA(OC))(O(OA))(O(OC))) C(O(OC)) A(O(OA)) f(OA(OC)) AND SET-CTS(O(OB(OC))(O(OB))(O(OC))) C(O(OC)) B(O(OB)) g(OB(OC)) IMPLIES EQUAL-PARTIALS(O(OB(OC))(OB(OC))(O(OC))) C(O(OC)) [T-PI2(OB(O(O(OB)(OA)))) COMPOSE(OB(OC)(O(O(OB)(OA))(OC))(OB(O(O(OB)(OA))))) T-FPAIR(O(O(OB)(OA))(OC)(OB(OC))(OA(OC))) f(OA(OC)) g(OB(OC))] g(OB(OC))"
:needed-objects   (SET-CTS EQUAL-PARTIALS COMPOSE T-PI2 T-FPAIR)
:mhelp "Domain Theory Slides.
Categorical Considerations.
UMP of products -- existence, 2 of 2"
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM15
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(OA(OC))(O(OA))(O(OC))) C(O(OC)) A(O(OA)) f(OA(OC)) AND SET-CTS(O(OB(OC))(O(OB))(O(OC))) C(O(OC)) B(O(OB)) g(OB(OC)) AND SET-CTS(O(O(O(OB)(OA))(OC))(O(O(O(OB)(OA))))(O(OC))) C(O(OC)) [SET-PROD-T(O(O(O(OB)(OA)))(O(OB))(O(OA))) A(O(OA)) B(O(OB))] h(O(O(OB)(OA))(OC)) AND EQUAL-PARTIALS(O(OA(OC))(OA(OC))(O(OC))) C(O(OC)) [T-PI1(OA(O(O(OB)(OA)))) COMPOSE(OA(OC)(O(O(OB)(OA))(OC))(OA(O(O(OB)(OA))))) h(O(O(OB)(OA))(OC))] f(OA(OC)) AND EQUAL-PARTIALS(O(OB(OC))(OB(OC))(O(OC))) C(O(OC)) [T-PI2(OB(O(O(OB)(OA)))) COMPOSE(OB(OC)(O(O(OB)(OA))(OC))(OB(O(O(OB)(OA))))) h(O(O(OB)(OA))(OC))] g(OB(OC)) IMPLIES EQUAL-PARTIALS(O(O(O(OB)(OA))(OC))(O(O(OB)(OA))(OC))(O(OC))) C(O(OC)) h(O(O(OB)(OA))(OC)).T-FPAIR(O(O(OB)(OA))(OC)(OB(OC))(OA(OC))) f(OA(OC)) g(OB(OC))"
:needed-objects   (SET-CTS SET-PROD-T EQUAL-PARTIALS T-FPAIR COMPOSE T-PI1 T-PI2)
:mhelp "Domain Theory Slides.
Categorical Considerations.
UMP of Products -- Uniqueness"
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM16
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "ACS(O(O(OA))) A(O(OA)) AND ACS(O(O(OB))) B(O(OB)) IMPLIES ACS(O(O(O(O(OB)(OA))))).SET-PROD-T(O(O(O(OB)(OA)))(O(OB))(O(OA))) A(O(OA)) B(O(OB))"
:needed-objects   (ACS SET-PROD-T)
:mhelp "Domain Theory Slides.
Product of Algebraic Closure Systems is an Algebraic Closure System."
:other-attributes NIL
:other-remarks "
")


(:name DOMTHM17
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SET-CTS(O(O(O(OB)(OA))(OA))(O(O(O(OB)(OA))))(O(OA))) A(O(OA)) [SET-COPROD-T(O(O(O(OB)(OA)))(O(OB))(O(OA))) A(O(OA)) B(O(OB))].INJ1-T(O(O(OB)(OA))(OA)(O(OB))(O(OA))) A(O(OA)) B(O(OB))"
:needed-objects   (SET-CTS SET-COPROD-T INJ1-T)
:mhelp "Domain Theory Slides.
Categorical Considerations.
Continuity of Coproduct Injections."
:other-attributes NIL
:other-remarks "
")


(:name DOMLEMMA3
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "X(OA) =(O(OA)(OA)) SETUNION(OA(O(OA))).LAMBDA E(OA).E(OA) FINITESUBSET(O(OA)(OA)) X(OA)"
:needed-objects   (FINITESUBSET)
:mhelp "Every set is equal to the union of its finite subsets"
:other-attributes NIL
:other-remarks "
")


(:name DOMLEMMA4
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FINITESET(O(OA)) E(OA) IMPLIES SET-TOPOLOGY(O(O(OA))(O(OA))) A(O(OA)).LAMBDA x(OA).A(O(OA)) x(OA) AND E(OA) SUBSET(O(OA)(OA)) x(OA)"
:needed-objects   (FINITESET SET-TOPOLOGY)
:mhelp "The set of all sets bigger than a fixed finite set is open."
:other-attributes NIL
:other-remarks "
")


(:name DOMLEMMA2-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, November  1, 1999 at 10:10:44."
:description "FINITESET(O(OA)) H(OA) IMPLIES FINITESET(O(OA)).H(OA) UNION(OA(OA)(OA)) UNITSET(OAA) t(A)"
:needed-objects   (FINITESET)
:mhelp "Another Lemma about Finite sets.  If H is finite, then H U {t} is Finite."
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(II)(II)(III)I) Z(I) P(III) L(II) R(II) AND COI(O(II)(II)(III)I) Z(I) P(III) L(II) R(II) IMPLIES PAR-ORD(O(OII)).PU-LT(OII(II)(II)(III)I) Z(I) P(III) L(II) R(II)"
:needed-objects   (PU-LT COI PAIR-UNP-ALG PAR-ORD)
:mhelp "pu-lt is a partial ordering of a coinductive (coi) pairing-unpairing algebra (pair-unp-alg)"
:other-attributes NIL
:other-remarks "
")


(:name PU-X238A
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL Z(A) FORALL P(AAA) FORALL L(AA) FORALL R(AA) FORALL F(OA).SEQ-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES PU-CTS(O(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA).LAMBDA X(OA) PU-APP(OA(OA)(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) F(OA) X(OA)"
:needed-objects   (SEQ-ALG PU-CTS PU-APP)
:mhelp "Derived from Exercise 2.3.9 of Dana Scott's Domain Theory Notes.
Application is Cts."
:other-attributes NIL
:other-remarks "
")


(:name PU-X238B
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL Z(A) FORALL P(AAA) FORALL L(AA) FORALL R(AA) FORALL X(OA).SEQ-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES PU-CTS(O(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA).LAMBDA F(OA) PU-APP(OA(OA)(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) F(OA) X(OA)"
:needed-objects   (SEQ-ALG PU-CTS PU-APP)
:mhelp "Derived from Exercise 2.3.9 of Dana Scott's Domain Theory Notes.
Application is Cts."
:other-attributes NIL
:other-remarks "
")


(:name PU-SETL-CTS
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SEQ-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES PU-CTS(O(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA).LAMBDA X(OA) PU-SETLEFT(OA(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) X(OA)"
:needed-objects   (PU-CTS SEQ-ALG PU-SETLEFT)
:mhelp "Set Left in a Sequential Algebra is a Cts Operation."
:other-attributes NIL
:other-remarks "
")


(:name PU-SETR-CTS
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SEQ-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES PU-CTS(O(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA).LAMBDA X(OA) PU-SETRIGHT(OA(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) X(OA)"
:needed-objects   (PU-CTS SEQ-ALG PU-SETRIGHT)
:mhelp "Set Right in a Sequential Algebra is a Cts Operation."
:other-attributes NIL
:other-remarks "
")


(:name PU-X239
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SEQ-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES PU-CTS(O(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA).LAMBDA U(OA) PU-APP(OA(OA)(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) [PU-SETLEFT(OA(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) U(OA)].PU-SETRIGHT(OA(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) U(OA)"
:needed-objects   (PU-SETLEFT PU-SETRIGHT SEQ-ALG PU-APP PU-CTS)
:mhelp "Translation of Exercise 2.3.9 in Dana Scott's Domain Theory Notes.
Application is Cts.  This version is formulated using SETLEFT and SETRIGHT to
think of Application as a function of one argument."
:other-attributes NIL
:other-remarks "
")


(:name PU-X2310A
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SEQ-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES PU-APP(OA(OA)(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) [F(OA) UNION(OA(OA)(OA)) G(OA)] X(OA) =(O(OA)(OA)) PU-APP(OA(OA)(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) F(OA) X(OA) UNION(OA(OA)(OA)) PU-APP(OA(OA)(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) G(OA) X(OA)"
:needed-objects   (SEQ-ALG PU-APP)
:mhelp "Exercise 2.3.10 in Dana Scott's Domain Theory Notes"
:other-attributes NIL
:other-remarks "
")


(:name PU-X2310B
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SEQ-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND PU-CTS(O(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) PHI(OA(OA)) AND PU-CTS(O(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) PSI(OA(OA)) IMPLIES PU-LAM(OA(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) [LAMBDA X(OA).PHI(OA(OA)) X(OA) UNION(OA(OA)(OA)) PSI(OA(OA)) X(OA)] =(O(OA)(OA)) PU-LAM(OA(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) PHI(OA(OA)) UNION(OA(OA)(OA)) PU-LAM(OA(OA(OA))(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) PSI(OA(OA))"
:needed-objects   (PU-CTS PU-LAM SEQ-ALG)
:mhelp "Exercise 2.3.10 in Dana Scott's Domain Theory Notes"
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM6
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL t(A) FORALL b(A).PU-B(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) b(A) IMPLIES EXISTS u(A).PU-SUBTREES(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) t(A) [P(AAA) b(A) u(A)] AND FORALL v(A).PU-SUBTREES(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) t(A) [P(AAA) b(A) v(A)] IMPLIES u(A) =(OAA) v(A)"
:needed-objects   (PAIR-UNP-ALG PU-B PU-SUBTREES)
:mhelp "Lemma 6 from Dana Scott's Domain Theory Notes on Pairing Unpairing Algebras."
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM7
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL s(A).PU-S(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) s(A) IMPLIES FORALL b(A).PU-B(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) b(A) IMPLIES FORALL u(A).PU-SUBTREES(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) t(A) [P(AAA) b(A) u(A)] IMPLIES PU-S(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) u(A)"
:needed-objects   (PAIR-UNP-ALG PU-S PU-B PU-SUBTREES)
:mhelp "Lemma 7 from Dana Scott's Domain Theory Notes on Pairing Unpairing Algebras."
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM8
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES.SEQ-AX(O(AA)A) Z(A) L(AA) EQUIV FORALL t(A) EXISTS n(A).PU-N(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) n(A) AND FORALL u(A).PU-SUBTREES(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) t(A) [P(AAA) n(A) u(A)] IMPLIES u(A) =(OAA) Z(A)"
:needed-objects   (PAIR-UNP-ALG SEQ-AX PU-SUBTREES PU-N)
:mhelp "Lemma 8 from Dana Scott's Domain Theory Notes on Pairing Unpairing Algebras."
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM9
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL b(A).PU-B(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) b(A) IMPLIES FORALL D(OA).D(OA) SUBSET(O(OA)(OA)) PU-S(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND PU-DDC(O(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) D(OA) IMPLIES PU-DDC(O(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) [PU-POS-SUBTREES(OAA(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) D(OA) b(A)] AND PU-POS-SUBTREES(OAA(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) D(OA) b(A) SUBSET(O(OA)(OA)) PU-S(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA)"
:needed-objects   (PAIR-UNP-ALG PU-B PU-S PU-DDC PU-POS-SUBTREES)
:mhelp "Lemma 9 from Dana Scott's Domain Theory Notes on Pairing Unpairing Algebras."
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM2A
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES PAR-ORD(O(OAA)).PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA)"
:needed-objects   (PAIR-UNP-ALG COI PAR-ORD PU-LT)
:mhelp "Less Than in a Coinductive Pairing Algebra is a Partial Order"
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM2B
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL x(A) FORALL y(A).PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) x(A) y(A) IMPLIES PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) [L(AA) x(A)].L(AA) y(A)"
:needed-objects   (PAIR-UNP-ALG COI PU-LT)
:mhelp "L is monotone"
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM2C
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL x(A) FORALL y(A).PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) x(A) y(A) IMPLIES PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) [R(AA) x(A)].R(AA) y(A)"
:needed-objects   (PAIR-UNP-ALG COI PU-LT)
:mhelp "R is monotone"
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM2D
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL x(A) FORALL y(A) FORALL u(A) FORALL v(A).PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) x(A) y(A) AND PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) u(A) v(A) IMPLIES PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) [P(AAA) x(A) u(A)].P(AAA) y(A) v(A)"
:needed-objects   (PAIR-UNP-ALG COI PU-LT)
:mhelp "P is monotone"
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM2E
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL t(A) PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) Z(A) t(A)"
:needed-objects   (PAIR-UNP-ALG COI PU-LT)
:mhelp "Zero is least"
:other-attributes NIL
:other-remarks "
")


(:name PU-P-INJ
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES.P(AAA) x(A) u(A) =(OAA) P(AAA) y(A) v(A) IMPLIES x(A) =(OAA) y(A) AND u(A) =(OAA) v(A)"
:needed-objects   (PAIR-UNP-ALG)
:mhelp "Pairs are determined by components"
:other-attributes NIL
:other-remarks "
")


(:name PU-PAIR-NOT-ZERO
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES.u(A) =(OAA) P(AAA) x(A) y(A) IMPLIES ~.u(A) =(OAA) Z(A)"
:needed-objects   (PAIR-UNP-ALG)
:mhelp "Pairs are not zero (a useful consequence of PU3)"
:other-attributes NIL
:other-remarks "
")


(:name PU-NAT-LESS-SUCC
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL v(A).PU-N(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) v(A) IMPLIES PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) v(A).P(AAA) v(A) Z(A)"
:needed-objects   (PAIR-UNP-ALG COI PU-LT PU-N)
:mhelp "forall v in N, v is LT [P v Z]  (ie, v is <= successor of v)"
:other-attributes NIL
:other-remarks "
")


(:name PU-LESS-SUCC-LT
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES.PU-N(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) n(A) IMPLIES.PU-N(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) m(A) IMPLIES.PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) n(A) m(A) IMPLIES.~[n(A) =(OAA) m(A)] IMPLIES PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) [P(AAA) n(A) Z(A)] m(A)"
:needed-objects   (PAIR-UNP-ALG COI PU-LT PU-N)
:mhelp "For natural numbers n and m, if n <= m and n is not equal to m, then n+1 <= m.
This takes place in the subset N of a pairing-unpairing algebra."
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM3A
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL x(A) FORALL y(A).PU-S(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) x(A) AND PU-S(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) y(A) IMPLIES EXISTS z(A).PU-S(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) z(A) AND PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) x(A) z(A) AND PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) y(A) z(A) AND FORALL w(A).PU-S(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) w(A) AND PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) x(A) w(A) AND PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) y(A) w(A) IMPLIES PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) z(A) w(A)"
:needed-objects   (PAIR-UNP-ALG COI PU-S PU-LT)
:mhelp "$ has joins ($ is a semilattice)"
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM3B
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES FORALL x(A) FORALL y(A).PU-N(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) x(A) AND PU-N(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) y(A) IMPLIES PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) x(A) y(A) OR PU-LT(OAA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) y(A) x(A)"
:needed-objects   (PAIR-UNP-ALG COI PU-N PU-LT)
:mhelp "LT totally orders N"
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM3C
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES PU-DDC(O(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA).PU-S(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA)"
:needed-objects   (PAIR-UNP-ALG COI PU-S PU-DDC)
:mhelp "PU-S ($) and PU-N (N) are DDC (directed and down-closed)"
:other-attributes NIL
:other-remarks "
")


(:name PU-LEM3D
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "PAIR-UNP-ALG(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) AND COI(O(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA) IMPLIES PU-DDC(O(OA)(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA).PU-N(OA(AA)(AA)(AAA)A) Z(A) P(AAA) L(AA) R(AA)"
:needed-objects   (PAIR-UNP-ALG COI PU-N PU-DDC)
:mhelp "PU-S ($) and PU-N (N) are DDC (directed and down-closed)"
:other-attributes NIL
:other-remarks "
")


(:name S-LEM1
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES FORALL x($) FORALL y($) EXISTS z($).S-INCL(O$$($$$)$) 0($) P($$$) x($) z($) AND S-INCL(O$$($$$)$) 0($) P($$$) y($) z($) AND FORALL w($).S-INCL(O$$($$$)$) 0($) P($$$) x($) w($) AND S-INCL(O$$($$$)$) 0($) P($$$) y($) w($) IMPLIES S-INCL(O$$($$$)$) 0($) P($$$) z($) w($)"
:needed-objects   (S-ALG S-INCL)
:mhelp "$ is a semilattice"
:other-attributes NIL
:other-remarks "
")


(:name S-LEM2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES FORALL x($) FORALL y($) FORALL u($) FORALL v($).S-INCL(O$$($$$)$) 0($) P($$$) x($) y($) AND S-INCL(O$$($$$)$) 0($) P($$$) u($) v($) IMPLIES S-INCL(O$$($$$)$) 0($) P($$$) [P($$$) x($) u($)].P($$$) y($) v($)"
:needed-objects   (S-ALG S-INCL)
:mhelp "Pairing in $ is monotone"
:other-attributes NIL
:other-remarks "
")


(:name S-T-LR-LEM1
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) AND S-DUC(O(O$)($$$)$) 0($) P($$$) D(O$) IMPLIES S-DUC(O(O$)($$$)$) 0($) P($$$) [S-T-L(O$(O$)($$$)$) 0($) P($$$) D(O$)] AND S-DUC(O(O$)($$$)$) 0($) P($$$).S-T-R(O$(O$)($$$)$) 0($) P($$$) D(O$)"
:needed-objects   (S-T-L S-T-R S-ALG S-DUC)
:mhelp "S-T-L and S-T-R take DUC's to DUC's, so these do give
well-defined left and right operators on T"
:other-attributes NIL
:other-remarks "
")


(:name S-T-LR-LEM2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES S-T-L(O$(O$)($$$)$) 0($) P($$$) [=(O$$) 0($)] =(O(O$)(O$)) [=(O$$) 0($)] AND S-T-R(O$(O$)($$$)$) 0($) P($$$) [=(O$$) 0($)] =(O(O$)(O$)) [=(O$$) 0($)]"
:needed-objects   (S-T-R S-T-L S-ALG)
:mhelp "S-T-L and S-T-R applied to the singleton zero set (the zero for T)
gives the singleton zero set (the zero for T)"
:other-attributes NIL
:other-remarks "
")


(:name THM-S-CHAR-T
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) AND COALG02(O(CC)(CC)(OC)(OC)) X0(OC) X1(OC) L(CC) R(CC) IMPLIES EXISTS f(O$C).FORALL b(C) S-DUC(O(O$)($$$)$) 0($) P($$$) [f(O$C) b(C)] AND FORALL c(C) [X0(OC) c(C) EQUIV f(O$C) c(C) =(O(O$)(O$)) UNITSET(O$$) 0($)] AND FORALL b(C) [S-T-L(O$(O$)($$$)$) 0($) P($$$) [f(O$C) b(C)] =(O(O$)(O$)) f(O$C) [L(CC) b(C)] AND S-T-R(O$(O$)($$$)$) 0($) P($$$) [f(O$C) b(C)] =(O(O$)(O$)) f(O$C).R(CC) b(C)] AND FORALL g(O$C).FORALL b(C) S-DUC(O(O$)($$$)$) 0($) P($$$) [g(O$C) b(C)] AND FORALL c(C) [X0(OC) c(C) EQUIV g(O$C) c(C) =(O(O$)(O$)) UNITSET(O$$) 0($)] AND FORALL b(C) [S-T-L(O$(O$)($$$)$) 0($) P($$$) [g(O$C) b(C)] =(O(O$)(O$)) g(O$C) [L(CC) b(C)] AND S-T-R(O$(O$)($$$)$) 0($) P($$$) [g(O$C) b(C)] =(O(O$)(O$)) g(O$C).R(CC) b(C)] IMPLIES f(O$C) =(O(O$C)(O$C)) g(O$C)"
:needed-objects   (S-ALG S-DUC S-T-L S-T-R COALG02)
:mhelp "T as the completion of S using DUC-sets
is the (0,2) final coalgebra."
:other-attributes NIL
:other-remarks "
")


(:name S-LEM1A
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O(AAA)A) Z(A) P(AAA) IMPLIES S-JOIN(OAAA(AAA)A) Z(A) P(AAA) x(A) x(A) x(A)"
:needed-objects   (S-ALG S-JOIN)
:mhelp "The join of any element with itself is itself"
:other-attributes NIL
:other-remarks "
")


(:name S-LEM1B
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O(AAA)A) Z(A) P(AAA) IMPLIES S-INCL(OAA(AAA)A) Z(A) P(AAA) y(A) y(A)"
:needed-objects   (S-ALG S-INCL)
:mhelp "reflexivity of inclusion"
:other-attributes NIL
:other-remarks "
")


(:name S-LEM1C
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O(AAA)A) Z(A) P(AAA) IMPLIES S-INCL(OAA(AAA)A) Z(A) P(AAA) Z(A) x(A)"
:needed-objects   (S-ALG S-INCL)
:mhelp "Zero is least in $"
:other-attributes NIL
:other-remarks "
")


(:name S-LEM1D
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O(AAA)A) Z(A) P(AAA) IMPLIES FORALL x(A).x(A) =(OAA) Z(A) OR EXISTS y(A) EXISTS z(A).x(A) =(OAA) P(AAA) y(A) z(A)"
:needed-objects   (S-ALG)
:mhelp "Every object in $ is zero (Z) or a pair"
:other-attributes NIL
:other-remarks "
")


(:name S-LEM1E
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O(AAA)A) Z(A) P(AAA) IMPLIES.S-INCL(OAA(AAA)A) Z(A) P(AAA) x(A) u(A) IMPLIES.S-INCL(OAA(AAA)A) Z(A) P(AAA) y(A) v(A) IMPLIES S-INCL(OAA(AAA)A) Z(A) P(AAA) [P(AAA) x(A) y(A)].P(AAA) u(A) v(A)"
:needed-objects   (S-ALG S-INCL)
:mhelp "Pairing is monotone in $"
:other-attributes NIL
:other-remarks "
")


(:name S-LEM1F
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O(AAA)A) Z(A) P(AAA) IMPLIES.S-INCL(OAA(AAA)A) Z(A) P(AAA) [P(AAA) x(A) y(A)] z(A) IMPLIES EXISTS u(A) EXISTS v(A).z(A) =(OAA) P(AAA) u(A) v(A) AND S-INCL(OAA(AAA)A) Z(A) P(AAA) x(A) u(A) AND S-INCL(OAA(AAA)A) Z(A) P(AAA) y(A) v(A)"
:needed-objects   (S-ALG S-INCL)
:mhelp "P x y <= z implies z = P u v with x <= u and y <= v"
:other-attributes NIL
:other-remarks "
")


(:name THM-S-INIT
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) AND ALG02(O(BBB)B) 02(B) P2(BBB) IMPLIES EXISTS f(B$).f(B$) 0($) =(OBB) 02(B) AND FORALL x($) FORALL y($) [f(B$) [P($$$) x($) y($)] =(OBB) P2(BBB) [f(B$) x($)].f(B$) y($)] AND FORALL g(B$).g(B$) 0($) =(OBB) 02(B) AND FORALL x($) FORALL y($) [g(B$) [P($$$) x($) y($)] =(OBB) P2(BBB) [g(B$) x($)].g(B$) y($)] IMPLIES f(B$) =(O(B$)(B$)) g(B$)"
:needed-objects   (S-ALG ALG02)
:mhelp "$ is initial"
:other-attributes NIL
:other-remarks "
")


(:name FP-THM1
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "CLOS-SYS1(O(O(OA))) CL(O(OA)) AND MONOTONE1(O(OA(OA))(O(OA))) CL(O(OA)) F(OA(OA)) IMPLIES EXISTS X(OA).CL(O(OA)) X(OA) AND F(OA(OA)) X(OA) =(O(OA)(OA)) X(OA) AND FORALL Y(OA).CL(O(OA)) Y(OA) AND F(OA(OA)) Y(OA) =(O(OA)(OA)) Y(OA) IMPLIES X(OA) SUBSET(O(OA)(OA)) Y(OA)"
:needed-objects   (CLOS-SYS1 MONOTONE1)
:mhelp "least fixed point theorem for a closure system of sets"
:other-attributes NIL
:other-remarks "
")


(:name FP-THM2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "CLOS-SYS2(O(O(OBA))) CL(O(OBA)) AND MONOTONE2(O(OBA(OBA))(O(OBA))) CL(O(OBA)) F(OBA(OBA)) IMPLIES EXISTS X(OBA).CL(O(OBA)) X(OBA) AND F(OBA(OBA)) X(OBA) =(O(OBA)(OBA)) X(OBA) AND FORALL Y(OBA).CL(O(OBA)) Y(OBA) AND F(OBA(OBA)) Y(OBA) =(O(OBA)(OBA)) Y(OBA) IMPLIES X(OBA) SUBRELN2(O(OBA)(OBA)) Y(OBA)"
:needed-objects   (CLOS-SYS2 MONOTONE2 SUBRELN2)
:mhelp "fixed point theorem for closure system of binary relations"
:other-attributes NIL
:other-remarks "
")


(:name FP-THM3
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "CLOS-SYS3(O(O(OCBA))) CL(O(OCBA)) AND MONOTONE3(O(OCBA(OCBA))(O(OCBA))) CL(O(OCBA)) F(OCBA(OCBA)) IMPLIES EXISTS X(OCBA).CL(O(OCBA)) X(OCBA) AND F(OCBA(OCBA)) X(OCBA) =(O(OCBA)(OCBA)) X(OCBA) AND FORALL Y(OCBA).CL(O(OCBA)) Y(OCBA) AND F(OCBA(OCBA)) Y(OCBA) =(O(OCBA)(OCBA)) Y(OCBA) IMPLIES X(OCBA) SUBRELN3(O(OCBA)(OCBA)) Y(OCBA)"
:needed-objects   (CLOS-SYS3 MONOTONE3 SUBRELN3)
:mhelp "fixed point theorem for monotone functions on a closure system of tertiary relations"
:other-attributes NIL
:other-remarks "
")


(:name CS2-ALL-THM
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "CLOS-SYS2(O(O(OBA))).LAMBDA R(OBA) TRUTH"
:needed-objects   (CLOS-SYS2)
:mhelp "the set of all binary relns is a closure system"
:other-attributes NIL
:other-remarks "
")


(:name S-JOIN-LEM1
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES S-JOIN(O$$$($$$)$) 0($) P($$$) x($) x($) x($)"
:needed-objects   (S-ALG S-JOIN)
:mhelp "An element of $ is the join of itself"
:other-attributes NIL
:other-remarks "
")


(:name S-JOIN-LEM2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "S-JOIN(OAAA(AAA)A) 0(A) P(AAA) [P(AAA) x(A) 0(A)] [P(AAA) 0(A) y(A)].P(AAA) x(A) y(A)"
:needed-objects   (S-JOIN)
:mhelp "(x,0) v (0,y) = (x,y)"
:other-attributes NIL
:other-remarks "
")


(:name S-INCL-LEM1
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-INCL(OAA(AAA)A) 0(A) P(AAA) x(A) y(A) AND S-INCL(OAA(AAA)A) 0(A) P(AAA) w(A) z(A) IMPLIES S-INCL(OAA(AAA)A) 0(A) P(AAA) [P(AAA) x(A) w(A)].P(AAA) y(A) z(A)"
:needed-objects   (S-INCL)
:mhelp "pairing is monotone"
:other-attributes NIL
:other-remarks "
")


(:name S-INCL-LEM2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "S-INCL(OAA(AAA)A) 0(A) P(AAA) 0(A) x(A)"
:needed-objects   (S-INCL)
:mhelp "0 is least"
:other-attributes NIL
:other-remarks "
")


(:name FP-THM3-INST
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "CLOS-SYS3(O(O(OCBA))) CL(O(OCBA)) AND MONOTONE3(O(OCBA(OCBA))(O(OCBA))) CL(O(OCBA)) F(OCBA(OCBA)) IMPLIES CL(O(OCBA)) [LFP3(OCBA(OCBA(OCBA))(O(OCBA))) CL(O(OCBA)) F(OCBA(OCBA))] AND F(OCBA(OCBA)) [LFP3(OCBA(OCBA(OCBA))(O(OCBA))) CL(O(OCBA)) F(OCBA(OCBA))] =(O(OCBA)(OCBA)) LFP3(OCBA(OCBA(OCBA))(O(OCBA))) CL(O(OCBA)) F(OCBA(OCBA)) AND FORALL Y(OCBA).CL(O(OCBA)) Y(OCBA) AND F(OCBA(OCBA)) Y(OCBA) =(O(OCBA)(OCBA)) Y(OCBA) IMPLIES LFP3(OCBA(OCBA(OCBA))(O(OCBA))) CL(O(OCBA)) F(OCBA(OCBA)) SUBRELN3(O(OCBA)(OCBA)) Y(OCBA)"
:needed-objects   (CLOS-SYS3 MONOTONE3 LFP3 SUBRELN3)
:mhelp "fixed point theorem for a monotone function on a closure system of tertiary relations
-- with the defn of LFP (LFP3) embedded in the theorem so we can use it to make
further definitions -- e.g., S-JOIN.

Compare to fp-thm3."
:other-attributes NIL
:other-remarks "
")


(:name CS3-ALL-THM
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "CLOS-SYS3(O(O(OCBA))).LAMBDA R(OCBA) TRUTH"
:needed-objects   (CLOS-SYS3)
:mhelp "the set of all tertiary relations is a closure system"
:other-attributes NIL
:other-remarks "
")


(:name S-JOINFN-MONOTONE
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Friday, February 11, 2000 at 20:55:55."
:description "MONOTONE3(O(OAAA(OAAA))(O(OAAA))) [LAMBDA R(OAAA) TRUTH].LAMBDA R(OAAA) LAMBDA x(A) LAMBDA y(A) LAMBDA z(A).x(A) =(OAA) 0(A) AND y(A) =(OAA) z(A) OR y(A) =(OAA) 0(A) AND x(A) =(OAA) z(A) OR EXISTS x1(A) EXISTS x2(A) EXISTS y1(A) EXISTS y2(A) EXISTS z1(A) EXISTS z2(A).x(A) =(OAA) P(AAA) x1(A) x2(A) AND y(A) =(OAA) P(AAA) y1(A) y2(A) AND z(A) =(OAA) P(AAA) z1(A) z2(A) AND R(OAAA) x1(A) y1(A) z1(A) AND R(OAAA) x2(A) y2(A) z2(A)"
:needed-objects   (MONOTONE3)
:mhelp "The function used to define JOIN as a LFP is monotone."
:other-attributes NIL
:other-remarks "
")


(:name S-JOIN-FPPROP
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-JOIN(OAAA(AAA)A) 0(A) P(AAA) =(O(OAAA)(OAAA)) LAMBDA x(A) LAMBDA y(A) LAMBDA z(A).x(A) =(OAA) 0(A) AND y(A) =(OAA) z(A) OR y(A) =(OAA) 0(A) AND x(A) =(OAA) z(A) OR EXISTS x1(A) EXISTS x2(A) EXISTS y1(A) EXISTS y2(A) EXISTS z1(A) EXISTS z2(A).x(A) =(OAA) P(AAA) x1(A) x2(A) AND y(A) =(OAA) P(AAA) y1(A) y2(A) AND z(A) =(OAA) P(AAA) z1(A) z2(A) AND S-JOIN(OAAA(AAA)A) 0(A) P(AAA) x1(A) y1(A) z1(A) AND S-JOIN(OAAA(AAA)A) 0(A) P(AAA) x2(A) y2(A) z2(A)"
:needed-objects   (S-JOIN)
:mhelp "The fixed point property of JOIN that follows from FP-THM3-INST"
:other-attributes NIL
:other-remarks "
")


(:name S-INCL-LEM3
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES S-INCL(O$$($$$)$) 0($) P($$$) x($) x($)"
:needed-objects   (S-INCL S-ALG)
:mhelp "inclusion is reflexive -- follows from S-JOIN-LEM1"
:other-attributes NIL
:other-remarks "
")


(:name S-ALG02
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES ALG02(O($$$)$) 0($) P($$$)"
:needed-objects   (S-ALG ALG02)
:mhelp "$ is a pairing algebra"
:other-attributes NIL
:other-remarks "
")


(:name S-INCL-LEM4
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES S-INCL(O$$($$$)$) 0($) P($$$) [P($$$) x($) 0($)].P($$$) x($) y($)"
:needed-objects   (S-ALG S-INCL)
:mhelp "(x,0) <= (x,y)"
:other-attributes NIL
:other-remarks "
")


(:name S-INCL-LEM5
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES S-INCL(O$$($$$)$) 0($) P($$$) [P($$$) 0($) y($)].P($$$) x($) y($)"
:needed-objects   (S-ALG S-INCL)
:mhelp "(0,y) <= (x,y)"
:other-attributes NIL
:other-remarks "
")


(:name S-INCL-LEM6
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "ALG02(O(AAA)A) 0(A) P(AAA) IMPLIES.S-INCL(OAA(AAA)A) 0(A) P(AAA) x(A) 0(A) IMPLIES x(A) =(OAA) 0(A)"
:needed-objects   (ALG02 S-INCL)
:mhelp "x <= 0 implies x = 0  (only uses that zero is not a pair)"
:other-attributes NIL
:other-remarks "
")


(:name S-INCL-LEM7
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES.S-INCL(O$$($$$)$) 0($) P($$$) x($) y($) IMPLIES S-INCL(O$$($$$)$) 0($) P($$$) [P($$$) x($) z($)].P($$$) y($) z($)"
:needed-objects   (S-ALG S-INCL)
:mhelp "x <= y implies (x,z) <= (y,z)"
:other-attributes NIL
:other-remarks "
")


(:name S-INCL-LEM8
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) IMPLIES.S-INCL(O$$($$$)$) 0($) P($$$) x($) y($) IMPLIES S-INCL(O$$($$$)$) 0($) P($$$) [P($$$) z($) x($)].P($$$) z($) y($)"
:needed-objects   (S-ALG S-INCL)
:mhelp "x <= y implies (z,x) <= (z,y)"
:other-attributes NIL
:other-remarks "
")


(:name CS-DUC-RELNS
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, February 28, 2000 at 17:42:03."
:description "CLOS-SYS2(O(O(OBC))).LAMBDA R(OBC) FORALL c(C) S-DUC(O(OB)(BBB)B) 0(B) P(BBB).R(OBC) c(C)"
:needed-objects   (CLOS-SYS2 S-DUC)
:mhelp "   Given a pairing algebra B (with zero element 0(B) and pairing operation P(BBB)),
we can define a notion of join and a notion of
inclusion.  A subset of the pairing algebra is a DUC-set (downward union closed)
if it is downward closed with respect to inclusion, and closed with respect to
joins.  A relation R between any set C and the pairing algebra is DUC-valued if
for any c in C, {y | R(c,y)} is a DUC-set.  The theorem CS-DUC-RELNS states that
the DUC-valued relations form a closure system, i.e., 
an arbitrary intersection of DUC-valued relations is a DUC-valued relation.

CS-DUC-RELNS: CLOS-SYS2(O(O(OBC))).LAMBDA R(OBC) FORALL c(C) S-DUC(O(OB)(BBB)B) 0(B) P(BBB).R c

   To prove the theorem, the definitions of join and inclusion are irrelevant
(they do not need to be instantiated).  Even without instantiating these definitions,
the search space is quite large, as many literals have flexible heads, allowing
them to unify with any other literal.  TPS finds a proof after about 6 hrs."
:other-attributes NIL
:other-remarks "
")


(:name S-T-DUC-MONOTONE-LEM
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "S-ALG(O($$$)$) 0($) P($$$) AND COALG02(O(CC)(CC)(OC)(OC)) X0(OC) X1(OC) L(CC) R(CC) IMPLIES MONOTONE2(O(O$C(O$C))(O(O$C))) [LAMBDA R(O$C) FORALL c(C) S-DUC(O(O$)($$$)$) 0($) P($$$).R(O$C) c(C)].LAMBDA R(O$C) LAMBDA c(C) LAMBDA u($).u($) =(O$$) 0($) OR X1(OC) c(C) AND EXISTS u1($) EXISTS u2($).u($) =(O$$) P($$$) u1($) u2($) AND R(O$C) [L(CC) c(C)] u1($) AND R(O$C) [R(CC) c(C)] u2($)"
:needed-objects   (MONOTONE2 S-DUC S-ALG COALG02)
:mhelp "The function mapping relations R(O$C) to {(c,0)} U {(c,(u1,u2)} | R [L c] u1 and R [R c] u2}
takes DUC-valued relations to DUC-valued relations and is monotone.  This is used in the
proof of THM-S-CHAR-T to apply the fixed point theorem for closure systems to get a least
fixed point for the given relation mapping.
(Note there are two different types of R's here.)"
:other-attributes NIL
:other-remarks "
")


(:name NATSVTHM
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS u(OI).u(OI) 0(I) AND FORALL z(I) [u(OI) z(I) IMPLIES u(OI).S(II) z(I)] AND FORALL v(OI).v(OI) 0(I) AND FORALL z(I) [v(OI) z(I) IMPLIES v(OI).S(II) z(I)] IMPLIES u(OI) SUBSET(O(OI)(OI)) v(OI)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name SV4
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, October 22, 2001 at  1:14:30."
:description "EXISTS u(ODC).u(ODC) =(O(ODC)(ODC)) LAMBDA x(C) LAMBDA y(D).A(ODC) x(C) y(D) OR B(OCD) y(D) x(C)"
:needed-objects   NIL
:mhelp "Setvar Example:  Union of relation A with the converse of relation B.
Solvable by combining min constraints, or by a single max constraint."
:other-attributes NIL
:other-remarks "
")


(:name SV5
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "INJECTIVE(O(II)) f(II) IMPLIES EXISTS u(OI) FORALL x(I).S(OI) x(I) EQUIV u(OI).f(II) x(I)"
:needed-objects   (INJECTIVE)
:mhelp "Setvar problem solvable by MAX/MIN constraints, but requires
introducing a quantifier to define the preimage of S under f."
:other-attributes NIL
:other-remarks "
")


(:name SV6
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS u(OI).u(OI) =(O(OI)(OI)) LAMBDA x(I).~A(OI) x(I) AND B(OI) x(I)"
:needed-objects   NIL
:mhelp "Another easy SV Max/Min problem"
:other-attributes NIL
:other-remarks "
")


(:name THM614
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL T(O(OI)).TOPSPACE(O(O(OI))) T(O(OI)) IMPLIES FORALL U(OI) FORALL V(OI).T(O(OI)) -OPEN(O(OI)(O(OI))) U(OI) AND T(O(OI)) -OPEN(O(OI)(O(OI))) V(OI) IMPLIES T(O(OI)) -OPEN(O(OI)(O(OI))).U(OI) UNION(OI(OI)(OI)) V(OI)"
:needed-objects   (-OPEN TOPSPACE)
:mhelp "Conclusion of THM4 - THM4 includes an explicit assumption of extensionality.
This theorem (THM614) is only true assuming extensionality."
:other-attributes NIL
:other-remarks "
")


(:name THM622
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "P(OI) A(I) AND Q(OI) B(I) AND FORALL x(I) FORALL y(I) [P(OI) x(I) AND Q(OI) y(I) IMPLIES Q(OI).F(III) x(I) y(I)] AND FORALL x(I) FORALL y(I) [Q(OI) x(I) AND P(OI) y(I) IMPLIES P(OI).F(III) x(I) y(I)] AND FORALL p(OI) FORALL q(OI) [p(OI) A(I) AND q(OI) B(I) AND FORALL x(I) FORALL y(I) [p(OI) x(I) AND q(OI) y(I) IMPLIES q(OI).F(III) x(I) y(I)] AND FORALL x(I) FORALL y(I) [q(OI) x(I) AND p(OI) y(I) IMPLIES p(OI).F(III) x(I) y(I)] IMPLIES P(OI) SUBSET(O(OI)(OI)) p(OI) AND Q(OI) SUBSET(O(OI)(OI)) q(OI)] AND G(II) A(I) =(OII) B(I) AND G(II) B(I) =(OII) A(I) AND FORALL x(I) FORALL y(I) [G(II) [F(III) x(I) y(I)] =(OII) F(III) [G(II) x(I)].G(II) y(I)] IMPLIES FORALL x(I).P(OI) x(I) IMPLIES Q(OI).G(II) x(I)"
:needed-objects   NIL
:mhelp "THM that requires a simple mutual induction."
:other-attributes NIL
:other-remarks "
")


(:name TRIVEXT1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[a(O) EQUIV b(O)] AND P(OO) a(O) IMPLIES P(OO) b(O)"
:needed-objects   NIL
:mhelp "An easy theorem that requires extensionality."
:other-attributes NIL
:other-remarks "
")


(:name TRIVEXT2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "P(O(OI)) [A(OI) UNION(OI(OI)(OI)) B(OI)] IMPLIES P(O(OI)).B(OI) UNION(OI(OI)(OI)) A(OI)"
:needed-objects   NIL
:mhelp "Another easy theorem using extensionality to
recognize that A U B = B U A."
:other-attributes NIL
:other-remarks "
")


(:name TRIVEXT3
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "P(O(OI)) A(OI) IMPLIES P(O(OI)).LAMBDA x(I).~~A(OI) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name TRIVEXT4
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "P(OO) [A(O) IMPLIES A(O)] IMPLIES P(OO) TRUTH"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name TRIVEXT5
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "P(OO) [A(O) IMPLIES B(O)] IMPLIES P(OO).~A(O) OR B(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM628
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL C(O(OI)) [C(O(OI)) SUBSET(O(O(OI))(O(OI))) G(O(OI)) AND FORALL x(I) EXISTS Y(OI) [C(O(OI)) Y(OI) AND Y(OI) x(I)] IMPLIES EXISTS D(O(OI)).FINITE1(O(O(OI))) D(O(OI)) AND D(O(OI)) SUBSET(O(O(OI))(O(OI))) C(O(OI)) AND FORALL x(I) EXISTS Y(OI).D(O(OI)) Y(OI) AND Y(OI) x(I)] AND FORALL X(OI) FORALL Y(OI) [L(O(OI)) X(OI) AND L(O(OI)) Y(OI) IMPLIES X(OI) SUBSET(O(OI)(OI)) Y(OI) OR Y(OI) SUBSET(O(OI)(OI)) X(OI)] AND FORALL Y(OI) [L(O(OI)) Y(OI) IMPLIES EXISTS x(I) Y(OI) x(I)] AND FORALL Y(OI) [L(O(OI)) Y(OI) IMPLIES G(O(OI)).COMPLEMENT(OI(OI)) Y(OI)] IMPLIES EXISTS a(I) FORALL Y(OI).L(O(OI)) Y(OI) IMPLIES Y(OI) a(I)"
:needed-objects   (FINITE1)
:mhelp "Compactness in terms of open covers implies intersections of chains of nonempty closed sets is nonempty."
:other-attributes NIL
:other-remarks "
")


(:name THM629
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OI) FORALL Y(OI) [L(O(OI)) X(OI) AND L(O(OI)) Y(OI) IMPLIES X(OI) SUBSET(O(OI)(OI)) Y(OI) OR Y(OI) SUBSET(O(OI)(OI)) X(OI)] AND C(O(OI)) SUBSET(O(O(OI))(O(OI))) L(O(OI)) AND FINITE1(O(O(OI))) C(O(OI)) IMPLIES EXISTS U(OI).C(O(OI)) U(OI) AND FORALL V(OI).C(O(OI)) V(OI) IMPLIES U(OI) SUBSET(O(OI)(OI)) V(OI)"
:needed-objects   (FINITE1)
:mhelp "If L is a chain of sets and C is a finite subset of L, then there is a least member of C."
:other-attributes NIL
:other-remarks "
")


(:name THM630
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL C(O(OI)) [C(O(OI)) SUBSET(O(O(OI))(O(OI))) G(O(OI)) AND FORALL x(I) EXISTS Y(OI) [C(O(OI)) Y(OI) AND Y(OI) x(I)] IMPLIES EXISTS D(O(OI)).F(O(O(OI))) D(O(OI)) AND D(O(OI)) SUBSET(O(O(OI))(O(OI))) C(O(OI)) AND FORALL x(I) EXISTS Y(OI).D(O(OI)) Y(OI) AND Y(OI) x(I)] AND FORALL C(O(OI)) [F(O(O(OI))) C(O(OI)) IMPLIES F(O(O(OI))).LAMBDA U(OI) C(O(OI)).COMPLEMENT(OI(OI)) U(OI)] AND FORALL B(O(OI)) [F(O(O(OI))) B(O(OI)) AND B(O(OI)) SUBSET(O(O(OI))(O(OI))) L(O(OI)) IMPLIES EXISTS m(I) FORALL Z(OI).B(O(OI)) Z(OI) IMPLIES Z(OI) m(I)] AND FORALL Z(OI) [L(O(OI)) Z(OI) IMPLIES G(O(OI)).COMPLEMENT(OI(OI)) Z(OI)] IMPLIES EXISTS a(I) FORALL Z(OI).L(O(OI)) Z(OI) IMPLIES Z(OI) a(I)"
:needed-objects   NIL
:mhelp "An abstract version of thm628 generalizing FINITE1 to an arbitrary property F.  The important
property we used for FINITE1 is that finite chains have minimal elements (thm629)."
:other-attributes NIL
:other-remarks "
")


(:name BF-EXAMPLE
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL A(OII) [A(OII) O(I) O(I) AND FORALL x(I) FORALL y(I) [A(OII) x(I) y(I) IMPLIES A(OII) [s(II) x(I)].s(II) y(I)] IMPLIES A(OII) n(I) m(I)] AND P(OI) n(I) IMPLIES P(OI) m(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CADE13
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITH-DEFN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "TRANSITIVE(O(OII)) P(OII) AND TRANSITIVE(O(OII)) Q(OII) AND FORALL x(I) FORALL y(I) [Q(OII) x(I) y(I) IMPLIES Q(OII) y(I) x(I)] AND FORALL x(I) FORALL y(I) [P(OII) x(I) y(I) OR Q(OII) x(I) y(I)] IMPLIES FORALL x(I) FORALL y(I) P(OII) x(I) y(I) OR FORALL x(I) FORALL y(I) Q(OII) x(I) y(I)"
:needed-objects   (TRANSITIVE)
:mhelp "pure first order problem"
:other-attributes NIL
:other-remarks "
")


(:name EQ-THM
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "A(OB) =(O(OB)(OB)) A(OB)"
:needed-objects   NIL
:mhelp "Two objects of type ob are equal iff they're the same object"
:other-attributes NIL
:other-remarks "
")


(:name EQP-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EQUIVALENCE-REL(O(O(OA)(OA))).LAMBDA x(OA) LAMBDA y(OA) EQP(O(OA)(OA)) x(OA) y(OA)"
:needed-objects   (EQUIVALENCE-REL)
:mhelp "EQP is an equivalence reln"
:other-attributes NIL
:other-remarks "
")


(:name EQP-1A
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "REFLEXIVE(O(O(OA)(OA))).LAMBDA x(OA) LAMBDA y(OA) EQP(O(OA)(OA)) x(OA) y(OA)"
:needed-objects   (REFLEXIVE)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EQP-1B
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SYMMETRIC(O(O(OA)(OA))).LAMBDA x(OA) LAMBDA y(OA) EQP(O(OA)(OA)) x(OA) y(OA)"
:needed-objects   (SYMMETRIC)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EQP-1C
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "TRANSITIVE(O(O(OA)(OA))).LAMBDA x(OA) LAMBDA y(OA) EQP(O(OA)(OA)) x(OA) y(OA)"
:needed-objects   (TRANSITIVE)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EQP1
:type ABBR
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA p(OB) LAMBDA q(OA) EXISTS s(AB).FORALL x(B) [p(OB) x(B) IMPLIES q(OA).s(AB) x(B)] AND FORALL y(A).q(OA) y(A) IMPLIES EXISTS x(B).p(OB) x(B) AND y(A) =(OAA) s(AB) x(B) AND FORALL z(B).p(OB) z(B) AND y(A) =(OAA) s(AB) z(B) IMPLIES z(B) =(OBB) x(B)"
:needed-objects   NIL
:mhelp "Equipotence without using EXISTS1"
:other-attributes ((TYPELIST ("A" "B")) (TYPE "O(OA)(OB)") (PRINTNOTYPE NIL) (FO-SINGLE-SYMBOL EQP1) (FACE EQP))
:other-remarks "
")


(:name EQP1-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EQUIVALENCE-REL(O(O(OA)(OA))).LAMBDA x(OA) LAMBDA y(OA) EQP(O(OA)(OA)) x(OA) y(OA)"
:needed-objects   (EQUIVALENCE-REL EQP1)
:mhelp "EQP1 is an equivalence reln"
:other-attributes NIL
:other-remarks "
")


(:name EQP1-1A
:type GWFF
:context UNCLASSIFIED
:keywords (PROVEN WITH-EQUALITY WITH-DEFN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Thursday, May 29, 1997 at 11:14:33."
:description "REFLEXIVE(O(O(OA)(OA))).LAMBDA x(OA) LAMBDA y(OA) EQP1(O(OA)(OA)) x(OA) y(OA)"
:needed-objects   (REFLEXIVE EQP1)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EQP1-1B
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "SYMMETRIC(O(O(OA)(OA))).LAMBDA x(OA) LAMBDA y(OA) EQP1(O(OA)(OA)) x(OA) y(OA)"
:needed-objects   (SYMMETRIC EQP1)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EQP1-1C
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "TRANSITIVE(O(O(OA)(OA))).LAMBDA x(OA) LAMBDA y(OA) EQP1(O(OA)(OA)) x(OA) y(OA)"
:needed-objects   (TRANSITIVE EQP1)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name HERBRAND-FALSE
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(I) m(OI) r(I) OR EXISTS x(I) [~g(OI) x(I)] OR ~[FORALL y(I) m(OI) y(I) OR EXISTS s(I) n(OI) s(I)] OR ~[FORALL z(I) [~n(OI) z(I)] OR ~FORALL t(I) g(OI) t(I)] IMPLIES FORALL r(I) m(OI) r(I) OR.EXISTS x(I) [~g(OI) x(I)] OR.~FORALL y(I) [m(OI) y(I) OR EXISTS s(I) n(OI) s(I)] OR ~FORALL z(I).~n(OI) z(I) OR ~FORALL t(I) g(OI) t(I)"
:needed-objects   NIL
:mhelp "thm80 - a false lemma in herbrand"
:other-attributes NIL
:other-remarks "
")


(:name SILLYWFF
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS p(OI) EXISTS q(OI) EXISTS x(I) EXISTS y(I) [p(OI) x(I) AND ~p(OI) y(I) AND.q(OI) y(I) AND ~q(OI) z(I)] IMPLIES EXISTS p(OI) EXISTS q(OI) EXISTS x(I) EXISTS y(I).~q(OI) z(I) AND q(OI) y(I) AND.p(OI) x(I) AND ~p(OI) y(I)"
:needed-objects   NIL
:mhelp "example 1, requires flags:
MAX-SEARCH-DEPTH:      5
  MAX-SUBSTS-PROJ:       NIL
  MAX-SUBSTS-PROJ-TOTAL: NIL
  MAX-SUBSTS-QUICK:      2
  MAX-SUBSTS-VAR:        2
  MAX-UTREE-DEPTH:       5
  MIN-QUICK-DEPTH:       NIL
"
:other-attributes NIL
:other-remarks "
")


(:name SILLYWFF2
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS p(OI) EXISTS q(OI) EXISTS x(I) EXISTS y(I) [p(OI) x(I) AND ~p(OI) y(I) AND.q(OI) y(I) AND ~q(OI) z(I)] EQUIV EXISTS p(OI) EXISTS q(OI) EXISTS x(I) EXISTS y(I).~q(OI) z(I) AND q(OI) y(I) AND.p(OI) x(I) AND ~p(OI) y(I)"
:needed-objects   NIL
:mhelp "example 2, needs flags: 
  MAX-SEARCH-DEPTH:      10
  MAX-SUBSTS-PROJ:       NIL
  MAX-SUBSTS-PROJ-TOTAL: NIL
  MAX-SUBSTS-QUICK:      2
  MAX-SUBSTS-VAR:        2
  MAX-UTREE-DEPTH:       10
  MIN-QUICK-DEPTH:       NIL
 "
:other-attributes NIL
:other-remarks "
")


(:name SIXPEOPLE
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL K(OII) FORALL S(OI).EQP(O(O(OI))(OI)) S(OI) [SUCC(SS).SUCC(SS).SUCC(SS).SUCC(SS).SUCC(SS) ONE] AND FORALL x(I) FORALL y(I) [K(OII) x(I) y(I) IMPLIES K(OII) y(I) x(I)] IMPLIES EXISTS x(I) EXISTS y(I) EXISTS z(I).S(OI) x(I) AND S(OI) y(I) AND S(OI) z(I) AND ~[x(I) =(OII) y(I)] AND ~[y(I) =(OII) z(I)] AND ~[z(I) =(OII) x(I)] AND.K(OII) x(I) y(I) AND K(OII) y(I) z(I) AND K(OII) x(I) z(I) OR ~K(OII) x(I) y(I) AND ~K(OII) y(I) z(I) AND ~K(OII) x(I) z(I)"
:needed-objects   NIL
:mhelp "For any six people, three know each other or three don't"
:other-attributes NIL
:other-remarks "
")


(:name SIXPEOPLE2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL K(OII) FORALL S(OI).S(OI) P1(I) AND S(OI) P2(I) AND S(OI) P3(I) AND S(OI) P4(I) AND S(OI) P5(I) AND S(OI) P6(I) AND FORALL x(I) FORALL y(I) [K(OII) x(I) y(I) IMPLIES K(OII) y(I) x(I)] IMPLIES EXISTS x(I) EXISTS y(I) EXISTS z(I).S(OI) x(I) AND S(OI) y(I) AND S(OI) z(I) AND ~[x(I) =(OII) y(I)] AND ~[y(I) =(OII) z(I)] AND ~[z(I) =(OII) x(I)] AND.K(OII) x(I) y(I) AND K(OII) y(I) z(I) AND K(OII) x(I) z(I) OR ~K(OII) x(I) y(I) AND ~K(OII) y(I) z(I) AND ~K(OII) x(I) z(I)"
:needed-objects   NIL
:mhelp "another version of sixpeople, for |S| >= 6"
:other-attributes NIL
:other-remarks "
")


(:name SUM
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "SUCC(SS) ZERO(S) PLUS(SSS) ZERO(S) PLUS(SSS).SUCC(SS) p(S) PLUS(SSS) SUCC(SS) p(S) PLUS(SSS) ZERO(S)"
:needed-objects   (PLUS)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name SUM1
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "SUCC(SS) ZERO(S) PLUS(SSS) ZERO(S) PLUS(SSS).SUCC(SS) [SUCC(SS).SUCC(SS) ZERO(S)] PLUS(SSS) SUCC(SS) [SUCC(SS).SUCC(SS) ZERO(S)] PLUS(SSS) ZERO(S)"
:needed-objects   (PLUS)
:mhelp "another sum for the rewrite rules"
:other-attributes NIL
:other-remarks "
")


(:name SUM2
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "ONE PLUS(SSS) ONE PLUS(SSS) [ZERO(S) PLUS(SSS) SUCC(SS) ONE] PLUS(SSS) SUCC(SS).ZERO(S) PLUS(SSS) ONE"
:needed-objects   (PLUS)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name SUM3
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "ONE PLUS(SSS) ONE PLUS(SSS) [ZERO(S) PLUS(SSS) SUCC(SS) ONE] PLUS(SSS) SUCC(SS) [ZERO(S) PLUS(SSS) ONE] =(OSS) SUCC(SS).SUCC(SS).SUCC(SS).SUCC(SS).SUCC(SS).SUCC(SS) ZERO(S)"
:needed-objects   (PLUS)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name T145-DOUBLE
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL R(OAA) FORALL U(A(OA)).EXISTS X(A) EXISTS Y(A) EXISTS Z(A) [[R(OAA) X(A) Y(A) OR R(OAA) X(A) Y(A)] AND [R(OAA) Y(A) Z(A) OR R(OAA) Y(A) Z(A)] AND.~R(OAA) X(A) Z(A) OR ~R(OAA) X(A) Z(A)] OR EXISTS s(OA) [EXISTS z(A) [[s(OA) z(A) OR s(OA) z(A)] AND.~R(OAA) z(A) [U(A(OA)) s(OA)] OR ~R(OAA) z(A).U(A(OA)) s(OA)] OR EXISTS j(A).FORALL k(A) [~s(OA) k(A) OR ~s(OA) k(A) OR.R(OAA) k(A) j(A) OR R(OAA) k(A) j(A)] AND.~R(OAA) [U(A(OA)) s(OA)] j(A) OR ~R(OAA) [U(A(OA)) s(OA)] j(A)] OR FORALL f(AA).EXISTS x(A) EXISTS y(A) [[R(OAA) x(A) y(A) OR R(OAA) x(A) y(A)] AND.~R(OAA) [f(AA) x(A)] [f(AA) y(A)] OR ~R(OAA) [f(AA) x(A)].f(AA) y(A)] OR EXISTS w(A).[R(OAA) w(A) [f(AA) w(A)] OR R(OAA) w(A).f(AA) w(A)] AND.R(OAA) [f(AA) w(A)] w(A) OR R(OAA) [f(AA) w(A)] w(A)"
:needed-objects   NIL
:mhelp "t145, with all the literals A replaced by A AND A"
:other-attributes NIL
:other-remarks "
")


(:name THM126-CORRECTED
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 15:18:56."
:description "FORALL h1(BG) FORALL h2(AB) FORALL s1(OG) FORALL f1(GGG) FORALL s2(OB) FORALL f2(BBB) FORALL h1(BG) FORALL h2(AB) FORALL s1(OG) FORALL f1(GGG) FORALL s2(OB) FORALL f2(BBB) FORALL s3(OA) FORALL f3(AAA).FORALL x(G) FORALL y(G) [s1(OG) x(G) AND s1(OG) y(G) IMPLIES s1(OG).f1(GGG) x(G) y(G)] AND [FORALL x(G) [s1(OG) x(G) IMPLIES s2(OB).h1(BG) x(G)] AND FORALL x(G) [s1(OG) x(G) IMPLIES s2(OB).h1(BG) x(G)] AND FORALL x(G).s1(OG) x(G) IMPLIES s2(OB).h1(BG) x(G)] AND FORALL x(G) FORALL y(G) [s1(OG) x(G) AND s1(OG) y(G) IMPLIES h1(BG) [f1(GGG) x(G) y(G)] =(OBB) f2(BBB) [h1(BG) x(G)].h1(BG) y(G)] AND [FORALL x(A) FORALL y(A) [s3(OA) x(A) AND s3(OA) y(A) IMPLIES s3(OA).f3(AAA) x(A) y(A)] AND FORALL x(B) [s2(OB) x(B) IMPLIES s3(OA).h2(AB) x(B)] AND FORALL x(B) FORALL y(B).s2(OB) x(B) AND s2(OB) y(B) IMPLIES h2(AB) [f2(BBB) x(B) y(B)] =(OAA) f3(AAA) [h2(AB) x(B)].h2(AB) y(B)] IMPLIES FORALL x(G) FORALL y(G) [s1(OG) x(G) AND s1(OG) y(G) IMPLIES s1(OG).f1(GGG) x(G) y(G)] AND FORALL x(A) FORALL y(A) [s3(OA) x(A) AND s3(OA) y(A) IMPLIES s3(OA).f3(AAA) x(A) y(A)] AND FORALL x(G) [s1(OG) x(G) IMPLIES s3(OA).[LAMBDA x(G) h2(AB).h1(BG) x(G)] x(G)] AND FORALL x(G) FORALL y(G).s1(OG) x(G) AND s1(OG) y(G) AND [s1(OG) x(G) AND s1(OG) y(G)] IMPLIES [LAMBDA x(G) h2(AB).h1(BG) x(G)] [f1(GGG) x(G) y(G)] =(OAA) f3(AAA) [[LAMBDA x(G) h2(AB).h1(BG) x(G)] x(G)].[LAMBDA x(G) h2(AB).h1(BG) x(G)] y(G)"
:needed-objects   NIL
:mhelp "thm126 with all duplications done, and needing max-mates 1"
:other-attributes NIL
:other-remarks "
")


(:name THM126-EXPANDED
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 15:18:57."
:description "FORALL h1(BG) FORALL h2(AB) FORALL s1(OG) FORALL f1(GGG) FORALL s2(OB) FORALL f2(BBB) FORALL s3(OA) FORALL f3(AAA).FORALL x(G) FORALL y(G) [s1(OG) x(G) AND s1(OG) y(G) IMPLIES s1(OG).f1(GGG) x(G) y(G)] AND FORALL x(B) FORALL y(B) [s2(OB) x(B) AND s2(OB) y(B) IMPLIES s2(OB).f2(BBB) x(B) y(B)] AND FORALL x(G) [s1(OG) x(G) IMPLIES s2(OB).h1(BG) x(G)] AND FORALL x(G) FORALL y(G) [s1(OG) x(G) AND s1(OG) y(G) IMPLIES h1(BG) [f1(GGG) x(G) y(G)] =(OBB) f2(BBB) [h1(BG) x(G)].h1(BG) y(G)] AND [FORALL x(B) FORALL y(B) [s2(OB) x(B) AND s2(OB) y(B) IMPLIES s2(OB).f2(BBB) x(B) y(B)] AND FORALL x(A) FORALL y(A) [s3(OA) x(A) AND s3(OA) y(A) IMPLIES s3(OA).f3(AAA) x(A) y(A)] AND FORALL x(B) [s2(OB) x(B) IMPLIES s3(OA).h2(AB) x(B)] AND FORALL x(B) FORALL y(B).s2(OB) x(B) AND s2(OB) y(B) IMPLIES h2(AB) [f2(BBB) x(B) y(B)] =(OAA) f3(AAA) [h2(AB) x(B)].h2(AB) y(B)] IMPLIES FORALL x(G) FORALL y(G) [s1(OG) x(G) AND s1(OG) y(G) IMPLIES s1(OG).f1(GGG) x(G) y(G)] AND FORALL x(A) FORALL y(A) [s3(OA) x(A) AND s3(OA) y(A) IMPLIES s3(OA).f3(AAA) x(A) y(A)] AND FORALL x(G) [s1(OG) x(G) IMPLIES s3(OA).[LAMBDA x(G) h2(AB).h1(BG) x(G)] x(G)] AND FORALL x(G) FORALL y(G).s1(OG) x(G) AND s1(OG) y(G) AND [s1(OG) x(G) AND s1(OG) y(G)] IMPLIES [LAMBDA x(G) h2(AB).h1(BG) x(G)] [f1(GGG) x(G) y(G)] =(OAA) f3(AAA) [[LAMBDA x(G) h2(AB).h1(BG) x(G)] x(G)].[LAMBDA x(G) h2(AB).h1(BG) x(G)] y(G)"
:needed-objects   NIL
:mhelp "thm126 expanded so that it only needs max-mates 1"
:other-attributes NIL
:other-remarks "
")


(:name THM143-EXPAND
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL h(I(OI)).FORALL p(OI) FORALL q(OI) [h(I(OI)) p(OI) =(OII) h(I(OI)) q(OI) IMPLIES p(OI) =(O(OI)(OI)) q(OI)] IMPLIES ~EXISTS t(OI).~t(OI) [h(I(OI)) t(OI)] AND h(I(OI)) [LAMBDA z(I) EXISTS t(OI).~t(OI) [h(I(OI)) t(OI)] AND z(I) =(OII) h(I(OI)) t(OI)] =(OII) h(I(OI)) t(OI)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM143-EXPANDB
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL h(I(OI)).EXISTS p(OI) EXISTS q(OI) [FORALL q^31(OI) [~q^31(OI) [h(I(OI)) p(OI)] OR q^31(OI).h(I(OI)) q(OI)] AND EXISTS x(I).~.p(OI) x(I) EQUIV q(OI) x(I)] OR FORALL t(OI).t(OI) [h(I(OI)) t(OI)] OR EXISTS q(OI).q(OI) [h(I(OI)).LAMBDA z(I) EXISTS t(OI).~t(OI) [h(I(OI)) t(OI)] AND FORALL q(OI).~q(OI) z(I) OR q(OI).h(I(OI)) t(OI)] AND ~q(OI).h(I(OI)) t(OI)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM143-NOH-SUB
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA z(I) EXISTS t(OI).~t(OI) [j(I(OI)) t(OI)] AND z(I) =(OII) j(I(OI)) t(OI)"
:needed-objects   NIL
:mhelp "substitution for thm143a-noh"
:other-attributes NIL
:other-remarks "
")


(:name THM143-PRIM
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA w^9(I) EXISTS w^11(OI).p^91(O(OI)I) w^9(I) w^11(OI) AND p^92(O(OI)I) w^9(I) w^11(OI)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM143-PRIM2
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA w^1(I) EXISTS w^4(OI) FORALL w^5(OI).[p^412(O(OI)(OI)I) w^1(I) w^5(OI) w^4(OI) OR p^413(O(OI)(OI)I) w^1(I) w^5(OI) w^4(OI)] AND p^414(O(OI)(OI)I) w^1(I) w^5(OI) w^4(OI)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM143-SUB
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA z(I) EXISTS t(OI).~t(OI) [h(I(OI)) t(OI)] AND z(I) =(OII) h(I(OI)) t(OI)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM143A-NOH
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL j(I(OI)).FORALL p(OI) FORALL q(OI) [j(I(OI)) p(OI) =(OII) j(I(OI)) q(OI) IMPLIES p(OI) =(O(OI)(OI)) q(OI)] IMPLIES ~%(OI(O(OI))(I(OI))) j(I(OI)) [LAMBDA s(OI).~s(OI).j(I(OI)) s(OI)].j(I(OI)).%(OI(O(OI))(I(OI))) j(I(OI)).LAMBDA s(OI).~s(OI).j(I(OI)) s(OI)"
:needed-objects   NIL
:mhelp "thm143a without the variable h"
:other-attributes NIL
:other-remarks "
")


(:name THM145-A
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Wednesday, February 26, 1997 at 15:21:15."
:description "FORALL R(OAA) FORALL U(A(OA)).TRANSITIVE(O(OAA)) R(OAA) AND FORALL s(OA) [FORALL z(A) [s(OA) z(A) IMPLIES R(OAA) z(A).U(A(OA)) s(OA)] AND FORALL z(A) [s(OA) z(A) IMPLIES R(OAA) z(A).U(A(OA)) s(OA)] AND FORALL j(A).FORALL k(A) [s(OA) k(A) AND s(OA) k(A) IMPLIES R(OAA) k(A) j(A)] IMPLIES R(OAA) [U(A(OA)) s(OA)] j(A) AND R(OAA) [U(A(OA)) s(OA)] j(A)] IMPLIES FORALL f(AA).FORALL x(A) FORALL y(A) [R(OAA) x(A) y(A) IMPLIES R(OAA) [f(AA) x(A)].f(AA) y(A)] AND FORALL x(A) FORALL y(A) [R(OAA) x(A) y(A) IMPLIES R(OAA) [f(AA) x(A)].f(AA) y(A)] IMPLIES EXISTS w(A).R(OAA) w(A) [f(AA) w(A)] AND R(OAA) [f(AA) w(A)] w(A)"
:needed-objects   (TRANSITIVE)
:mhelp "edited version of thm145, requiring max-mates 1 and num-of-dups 0"
:other-attributes NIL
:other-remarks "
")


(:name THM145-B
:type GWFF
:context UNCLASSIFIED
:keywords (PROVEN WITHOUT-EQUALITY WITH-DEFN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, March  3, 1997 at 16:02:50."
:description "FORALL R(OAA) FORALL U(A(OA)).TRANSITIVE(O(OAA)) R(OAA) AND FORALL s(OA) [FORALL z(A) [s(OA) z(A) IMPLIES R(OAA) z(A).U(A(OA)) s(OA)] AND FORALL z(A) [s(OA) z(A) IMPLIES R(OAA) z(A).U(A(OA)) s(OA)] AND FORALL j(A).FORALL k(A) [s(OA) k(A) IMPLIES R(OAA) k(A) j(A)] IMPLIES R(OAA) [U(A(OA)) s(OA)] j(A)] IMPLIES FORALL f(AA).FORALL x(A) FORALL y(A) [R(OAA) x(A) y(A) IMPLIES R(OAA) [f(AA) x(A)].f(AA) y(A)] AND FORALL x(A) FORALL y(A) [R(OAA) x(A) y(A) IMPLIES R(OAA) [f(AA) x(A)].f(AA) y(A)] IMPLIES EXISTS w(A).R(OAA) w(A) [f(AA) w(A)] AND R(OAA) [f(AA) w(A)] w(A)"
:needed-objects   (TRANSITIVE)
:mhelp "thm145 with num-of-dups 0; needs MAX-MATES>1"
:other-attributes NIL
:other-remarks "
")


(:name THM145-C
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL R(OAA) FORALL U(A(OA)).TRANSITIVE(O(OAA)) R(OAA) AND FORALL s(OA) [FORALL z(A) [s(OA) z(A) IMPLIES R(OAA) z(A).U(A(OA)) s(OA)] AND FORALL j(A).FORALL k(A) [s(OA) k(A) AND s(OA) k(A) IMPLIES R(OAA) k(A) j(A)] IMPLIES R(OAA) [U(A(OA)) s(OA)] j(A) AND R(OAA) [U(A(OA)) s(OA)] j(A)] IMPLIES FORALL f(AA).FORALL x(A) FORALL y(A) [R(OAA) x(A) y(A) IMPLIES R(OAA) [f(AA) x(A)].f(AA) y(A)] IMPLIES EXISTS w(A).R(OAA) w(A) [f(AA) w(A)] AND R(OAA) [f(AA) w(A)] w(A)"
:needed-objects   (TRANSITIVE)
:mhelp "thm145 with max-mates 1; needs num-of-dups>0"
:other-attributes NIL
:other-remarks "
")


(:name THM15B-V2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Friday, June 13, 1997 at 12:30:08."
:description "FORALL f(II).EXISTS g(II) [ITERATE+(O(II)(II)) f(II) g(II) AND EXISTS x(I) UNIQUE-FIXPOINT(OI(II)) g(II) x(I)] IMPLIES EXISTS y(I) FIXPOINT(OI(II)) f(II) y(I)"
:needed-objects   (ITERATE+ FIXPOINT UNIQUE-FIXPOINT)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM160B
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OA) FORALL q(OA).FINITE1(O(OA)) p(OA) AND [LAMBDA r(OA) LAMBDA s(OA) EXISTS t(OA).r(OA) UNION(OA(OA)(OA)) t(OA) =(O(OA)(OA)) s(OA)] q(OA) p(OA) IMPLIES FINITE1(O(OA)) q(OA)"
:needed-objects   (FINITE1)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM188-PARTIAL
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "q(A(AAA)) =(O(A(AAA))(A(AAA))) LEFT1(A(A(AAA))) q(A(AAA)) PAIR1(A(AAA)AA) RIGHT1(A(A(AAA))) q(A(AAA)) AND p(A(AAA)) =(O(A(AAA))(A(AAA))) LEFT1(A(A(AAA))) q(A(AAA)) PAIR1(A(AAA)AA) RIGHT1(A(A(AAA))) q(A(AAA)) IMPLIES p(A(AAA)) =(O(A(AAA))(A(AAA))) q(A(AAA))"
:needed-objects   (LEFT1 RIGHT1 PAIR1)
:mhelp "the theorem for thm188-interactive bug"
:other-attributes NIL
:other-remarks "
")


(:name THM2-B
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL K(OI(OI)).FORALL x(OI) FORALL y(OI) [x(OI) SUBSET(O(OI)(OI)) y(OI) IMPLIES K(OI(OI)) x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) y(OI)] AND FORALL x(OI) FORALL y(OI) [x(OI) SUBSET(O(OI)(OI)) y(OI) IMPLIES K(OI(OI)) x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) y(OI)] IMPLIES EXISTS u(OI).K(OI(OI)) u(OI) EQUIVS(O(OI)(OI)) u(OI)"
:needed-objects   NIL
:mhelp "right no of dups for thm2??"
:other-attributes NIL
:other-remarks "
")


(:name THM2A-EXPANDED
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL K(OI(OI)).FORALL x(OI) FORALL y(OI) [x(OI) SUBSET(O(OI)(OI)) y(OI) IMPLIES K(OI(OI)) x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) y(OI)] AND FORALL x(OI) FORALL y(OI) [x(OI) SUBSET(O(OI)(OI)) y(OI) IMPLIES K(OI(OI)) x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) y(OI)] IMPLIES K(OI(OI)) [SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] EQUIVS(O(OI)(OI)) SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)"
:needed-objects   NIL
:mhelp "expanded version of thm2a"
:other-attributes NIL
:other-remarks "
")


(:name THM2A-MOSTSUBS
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL K(OI(OI)).FORALL x(OI) [x(OI) SUBSET(O(OI)(OI)) SETUNION(OI(O(OI))) [LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] IMPLIES K(OI(OI)) x(OI) SUBSET(O(OI)(OI)) K(OI(OI)).SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] AND [SETUNION(OI(O(OI))) [LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] SUBSET(O(OI)(OI)) K(OI(OI)) [SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] IMPLIES K(OI(OI)) [SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] SUBSET(O(OI)(OI)) K(OI(OI)).K(OI(OI)).SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] IMPLIES K(OI(OI)) [SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] EQUIVS(O(OI)(OI)) SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)"
:needed-objects   NIL
:mhelp "thm2a with many subs done"
:other-attributes NIL
:other-remarks "
")


(:name THM2A-ONE
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL K(OI(OI)).FORALL x(OI) FORALL y(OI) [x(OI) SUBSET(O(OI)(OI)) y(OI) IMPLIES K(OI(OI)) x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) y(OI)] IMPLIES FORALL x(I).K(OI(OI)) [SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] x(I) IMPLIES SETUNION(OI(O(OI))) [LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM2A-TWO
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL K(OI(OI)).FORALL x(OI) FORALL y(OI) [x(OI) SUBSET(O(OI)(OI)) y(OI) IMPLIES K(OI(OI)) x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) y(OI)] IMPLIES FORALL x(I).SETUNION(OI(O(OI))) [LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] x(I) IMPLIES K(OI(OI)) [SETUNION(OI(O(OI))).LAMBDA x(OI).x(OI) SUBSET(O(OI)(OI)) K(OI(OI)) x(OI)] x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name TTTP5311A-INST
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL y(A) FORALL q(OA) [q(OA) [IOTA(A(OA)).LAMBDA y^54(A) FORALL q(OA).q(OA) y(A) IMPLIES q(OA) y^54(A)] IMPLIES q(OA) y(A)] IMPLIES FORALL p(OA).EXISTS y(A) [p(OA) y(A) AND FORALL z(A).p(OA) z(A) IMPLIES FORALL q(OA).q(OA) y(A) IMPLIES q(OA) z(A)] IMPLIES p(OA).IOTA(A(OA)) p(OA)"
:needed-objects   NIL
:mhelp "TTTP5311A, with the equalities removed"
:other-attributes NIL
:other-remarks "
")


(:name TTTP5311A-VARIANT
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL y(A) [IOTA(A(OA)) [=(OAA) y(A)] =(OAA) y(A)] IMPLIES FORALL p(OA).EXISTS y(A) [p(OA) y(A) AND FORALL z(A).p(OA) z(A) EQUIV y(A) =(OAA) z(A)] IMPLIES p(OA).IOTA(A(OA)) p(OA)"
:needed-objects   NIL
:mhelp "replaced IMPLIES with EQUIV"
:other-attributes NIL
:other-remarks "
")


(:name TTTP5311A-VARIANT2
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL y(A) [IOTA(A(OA)) [=(OAA) y(A)] =(OAA) y(A)] IMPLIES FORALL p(OA).EXISTS y(A) [p(OA) y(A) AND FORALL z(A).p(OA) z(A) =(OOO).y(A) =(OAA) z(A)] IMPLIES p(OA).IOTA(A(OA)) p(OA)"
:needed-objects   NIL
:mhelp "replaced IMPLIES with EQUIV"
:other-attributes NIL
:other-remarks "
")


(:name TTTP5311A-VARIANT3
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OA) FORALL r(OA) [FORALL z(A) [p(OA) z(A) EQUIV r(OA) z(A)] IMPLIES FORALL q(O(OA)).q(O(OA)) p(OA) IMPLIES q(O(OA)) r(OA)] AND FORALL y(A) [IOTA(A(OA)) [=(OAA) y(A)] =(OAA) y(A)] IMPLIES FORALL p(OA).SIGMA1A(O(OA)) p(OA) IMPLIES p(OA).IOTA(A(OA)) p(OA)"
:needed-objects   (SIGMA1A)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X2125-HALF
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS x(I) FORALL y(I) [[P(OI) x(I) IMPLIES P(OI) y(I)] AND.P(OI) y(I) IMPLIES P(OI) x(I)] IMPLIES [EXISTS x(I) P(OI) x(I) IMPLIES FORALL y(I) P(OI) y(I)] AND.FORALL y(I) P(OI) y(I) IMPLIES EXISTS x(I) P(OI) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X5310-SUB
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS r^24(OBB(OB)) EXISTS r^23(OBB(OB)) [FORALL x(OB) EXISTS y(B) FORALL w^6(B) [r^23(OBB(OB)) x(OB) y(B) w^6(B) OR r^24(OBB(OB)) x(OB) y(B) w^6(B)] IMPLIES EXISTS f(B(OB)) FORALL x(OB) FORALL w^6(B).r^23(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w^6(B) OR r^24(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w^6(B)] IMPLIES EXISTS j(B(OB)) FORALL p(OB).EXISTS z(B) p(OB) z(B) IMPLIES p(OB).j(B(OB)) p(OB)"
:needed-objects   NIL
:mhelp "one sub into x5310"
:other-attributes NIL
:other-remarks "
")


(:name X5310-SUB3A
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITHOUT-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL a(OBB(OB)) FORALL b(OBB(OB)) [FORALL x(OB) EXISTS y(B) FORALL w(B) [a(OBB(OB)) x(OB) y(B) w(B) OR b(OBB(OB)) x(OB) y(B) w(B)] IMPLIES EXISTS f(B(OB)) FORALL x(OB) FORALL w(B).a(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w(B) OR b(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w(B)] IMPLIES EXISTS j(B(OB)) FORALL p(OB).EXISTS z(B) p(OB) z(B) IMPLIES p(OB).j(B(OB)) p(OB)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT10
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:27:56."
:description "EXISTS x(O) FORALL y(O) x(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT11
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:27:56."
:description "FORALL y(O) EXISTS y(O) y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT12
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:27:57."
:description "EXISTS x(O) EXISTS y(O).x(O) =(OOO) y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT14
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:27:57."
:description "EXISTS z(O) EXISTS x(O).x(O) =(OOO) x(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT15
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:27:58."
:description "EXISTS x(O) EXISTS y(O).x(O) OR y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT17
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:27:58."
:description "EXISTS x(O).y(O) IMPLIES y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT18
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:27:58."
:description "EXISTS y(O) FORALL z(O) EXISTS x(O).z(O) IMPLIES x(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT19
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:27:59."
:description "EXISTS q(O(OO)) FORALL p(OO) q(O(OO)) p(OO)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:27:59."
:description "EXISTS p(OO) p(OO) a(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT20
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:00."
:description "~FORALL q(O(OO)).~EXISTS p(OO) q(O(OO)) p(OO)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT21
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:00."
:description "EXISTS p(OO) p(OO).FORALL y(O).y(O) AND ~y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT24
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS y(I) FORALL f(II).f(II) x(I) =(OII) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT265
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:02."
:description "EXISTS x(O) FORALL y(O).x(O) =(OOO) y(O) =(OOO).y(O) =(OOO) x(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT27
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:02."
:description "EXISTS x(O) EXISTS y(O).x(O) =(OOO) y(O) =(OOO).y(O) =(OOO) x(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT29
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, March  4, 1997 at 16:15:19."
:description "~EXISTS g(OAA) FORALL f(OA) EXISTS j(A) FORALL p(O(OA)).p(O(OA)) [g(OAA) j(A)] IMPLIES p(O(OA)) f(OA)"
:needed-objects   NIL
:mhelp "cantorsatz, Leibnizdefinition"
:other-attributes NIL
:other-remarks "
")


(:name CT3
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:03."
:description "EXISTS p(OO) p(OO) a(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT30
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "~EXISTS g(OAA) FORALL f(OA) EXISTS j(A) FORALL p(OO).p(OO) [g(OAA) j(A) =(O(OA)(OA)) f(OA)] IMPLIES p(OO).f(OA) =(O(OA)(OA)) f(OA)"
:needed-objects   NIL
:mhelp "cantorsatz, triungewoehnlich verkomliziert"
:other-attributes NIL
:other-remarks "
")


(:name CT313
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:04."
:description "EXISTS z(O) EXISTS x(O) FORALL y(O).x(O) IMPLIES y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT4
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:04."
:description "FORALL x(O) FORALL y(O) EXISTS p(OO).p(OO) x(O) IMPLIES p(OO) y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT5
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:05."
:description "EXISTS x(O) FORALL y(O).x(O) IMPLIES y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT6
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS x(O).x(O) =(OOO) ~x(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT616
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:05."
:description "EXISTS x(O) EXISTS y(O) y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT7
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:06."
:description "EXISTS p(OO) FORALL x(O) FORALL y(O).p(OO) x(O) AND p(OO) y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT8
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:06."
:description "FORALL x(O) FORALL y(O) EXISTS p(OO).p(OO) x(O) AND p(OO) y(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name CT9
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:28:08."
:description "EXISTS x(O) EXISTS y(O) x(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EMB1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "P(OO) [A(O) AND B(O)] IMPLIES P(OO).B(O) AND A(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EMB2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL p(OO).p(OO) a(O) AND p(OO) b(O) IMPLIES p(OO).a(O) AND b(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EXT-A-LEIB1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) FORALL p(OI) [p(OI) [M(II) x(I)] IMPLIES p(OI).N(II) x(I)] IMPLIES FORALL q(O(II)).q(O(II)) M(II) IMPLIES q(O(II)) N(II)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EXT-A-LEIB2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) FORALL p(OI) [p(OI) [M(II) x(I)] EQUIV p(OI).N(II) x(I)] IMPLIES FORALL q(O(II)).q(O(II)) M(II) EQUIV q(O(II)) N(II)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EXT-O-LEIB
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL R(OO) [R(OO) P(O) IMPLIES R(OO) Q(O)] IMPLIES.P(O) EQUIV Q(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name LEIBNIZ
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) FORALL p(OI) [p(OI) [M(II) x(I)] IMPLIES p(OI).N(II) x(I)] IMPLIES M(II) =(O(II)(II)) N(II)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name PROB757
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x1(I) FORALL x2(I) FORALL y1(I) FORALL y2(I) [el1(O(OI)I) x1(I) HH-2(OI) AND el1(O(OI)I) x2(I) HH-2(OI) AND el1(O(OI)I) y1(I) HH-2(OI) AND el1(O(OI)I) y2(I) HH-2(OI) AND x1(I) =(OII) x2(I) AND y1(I) =(OII) y2(I) IMPLIES TIMES(III) x1(I) y1(I) =(OII) TIMES(III) x2(I) y2(I)] AND FORALL x1(I) FORALL x2(I) [el1(O(OI)I) x1(I) SS-PRIME(OI) AND el1(O(OI)I) x2(I) SS-PRIME(OI) IMPLIES el1(O(OI)I) [TIMES(III) x1(I) x2(I)] SS-PRIME(OI)] AND FORALL x1(I) FORALL x2(I) FORALL y1(I) FORALL y2(I) [el1(O(OI)I) x1(I) HH-1(OI) AND el1(O(OI)I) x2(I) HH-1(OI) AND el1(O(OI)I) y1(I) HH-1(OI) AND el1(O(OI)I) y2(I) HH-1(OI) AND x1(I) =(OII) x2(I) AND y1(I) =(OII) y2(I) IMPLIES TIMES(III) x1(I) y1(I) =(OII) TIMES(III) x2(I) y2(I)] AND FORALL phi(II) [HOM-FROM-SS-PRIME(O(II)) phi(II) EQUIV FORALL x(I) FORALL y(I).el1(O(OI)I) x(I) SS-PRIME(OI) AND el1(O(OI)I) y(I) SS-PRIME(OI) IMPLIES phi(II) [TIMES(III) x(I) y(I)] =(OII) TIMES(III) [phi(II) x(I)].phi(II) y(I)] AND [HOM-FROM-HH-1(O(II)) BIGPHI(II) EQUIV FORALL x(I) FORALL y(I).el1(O(OI)I) x(I) HH-1(OI) AND el1(O(OI)I) y(I) HH-1(OI) IMPLIES BIGPHI(II) [TIMES(III) x(I) y(I)] =(OII) TIMES(III) [BIGPHI(II) x(I)].BIGPHI(II) y(I)] AND FORALL x(I) FORALL y(I) [el1(O(OI)I) x(I) HH-1(OI) AND el1(O(OI)I) y(I) HH-1(OI) IMPLIES el1(O(OI)I) [TIMES(III) x(I) y(I)] HH-1(OI)] AND FORALL x(I) [el1(O(OI)I) x(I) SS-PRIME(OI) IMPLIES el1(O(OI)I) [PHI-2(II) x(I)] HH-2(OI)] AND FORALL x(I) [el1(O(OI)I) x(I) HH-1(OI) IMPLIES el1(O(OI)I) [BIGPHI(II) x(I)] HH-2(OI)] AND FORALL x(I) [el1(O(OI)I) x(I) SS-PRIME(OI) IMPLIES el1(O(OI)I) [PHI-1(II) x(I)] HH-1(OI)] AND FORALL x(I) FORALL y(I) [el1(O(OI)I) x(I) HH-1(OI) AND el1(O(OI)I) y(I) HH-1(OI) AND x(I) =(OII) y(I) IMPLIES BIGHI(II) x(I) =(OII) BIGPHI(II) y(I)] AND FORALL x(I) [el1(O(OI)I) x(I) SS-PRIME(OI) IMPLIES BIGPHI(II) [PHI-1(II) x(I)] =(OII) PHI-2(II) x(I)] AND FORALL y(I) [el1(O(OI)I) y(I) HH-1(OI) IMPLIES EXISTS x(I).el1(O(OI)I) x(I) SS-PRIME(OI) AND PHI-1(II) x(I) =(OII) y(I)] AND HOM-FROM-SS-PRIME(O(II)) PHI-1(II) AND HOM-FROM-SS-PRIME(O(II)) PHI-2(II) IMPLIES HOM-FROM-HH-1(O(II)) BIGPHI(II)"
:needed-objects   NIL
:mhelp "omega Bsp"
:other-attributes NIL
:other-remarks "
")


(:name TRANSCLOSURE
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL R(OAA) FORALL S(OAA).TRCL(OAA(OAA)) [R(OAA) PAIRUNION(OAA(OAA)(OAA)) S(OAA)] =(O(OAA)(OAA)) TRCL(OAA(OAA)).TRCL(OAA(OAA)) R(OAA) PAIRUNION(OAA(OAA)(OAA)) TRCL(OAA(OAA)) S(OAA)"
:needed-objects   (TRCL PAIRUNION)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name BETA-CONVERSION
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(II) FORALL y(I) Reduct(OII) [APP(III) [LAM(I(II)) x(II)] y(I)].x(II) y(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name BETA-STABLE-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) FORALL y(I) FORALL z(I).Reduct(OII) x(I) y(I) IMPLIES Reduct(OII) [APP(III) x(I) z(I)] [App(III) y(I) z(I)] AND Reduct(OII) [APP(III) z(I) x(I)].APP(III) z(I) y(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name COUNTER1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS y(I).EXISTS x(I) [P(OI) x(I) OR ~P(OI) x(I)] AND Q(OI) y(I) OR ~Q(OI) y(I)"
:needed-objects   NIL
:mhelp "counter example for ms88"
:other-attributes NIL
:other-remarks "
")


(:name DISJ-BUG
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "P(O) AND [R(O) OR Q(O)] IMPLIES P(O) AND R(O) OR Q(O)"
:needed-objects   NIL
:mhelp "Incorrect disjuction heuristics"
:other-attributes NIL
:other-remarks "
")


(:name DISJ-BUG-2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "p(O) AND [q(O) OR r(O)] IMPLIES p(O) AND q(O) OR p(O) AND r(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name DOUBLE-TO-HALF-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL Q(OII) FORALL u(I) FORALL v(I) [DOUBLE(OII) u(I) v(I) AND [Q(OII) 0(I) 0(I) AND FORALL x(I) FORALL y(I).Q(OII) x(I) y(I) IMPLIES Q(OII) [S(II) x(I)].S(II).S(II) y(I)] IMPLIES Q(OII) u(I) v(I)] AND.HALF(OII) 0(I) 0(I) AND HALF(OII) 0(I) [S(II) 0(I)] AND FORALL x(I) FORALL y(I).HALF(OII) x(I) y(I) IMPLIES HALF(OII) [S(II).S(II) x(I)].S(II) y(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name DOUBLE-TO-HALF-6
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL Q(OII) FORALL u(I) FORALL v(I) [DOUBLE(OII) u(I) v(I) AND [Q(OII) 0(I) 0(I) AND FORALL x(I) FORALL y(I).Q(OII) x(I) y(I) IMPLIES Q(OII) [S(II) x(I)].S(II).S(II) y(I)] IMPLIES Q(OII) u(I) v(I)] AND [HALF(OII) 0(I) 0(I) AND HALF(OII) 0(I) [S(II) 0(I)] AND FORALL x(I) FORALL y(I).HALF(OII) x(I) y(I) IMPLIES HALF(OII) [S(II).S(II) x(I)].S(II) y(I)] IMPLIES FORALL u(I) FORALL v(I).DOUBLE(OII) u(I) v(I) IMPLIES HALF(OII) v(I) u(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name DUP-BUG
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) P(OI) x(I) OR Q(OI) x(I) IMPLIES P(OI) a(I) AND P(OI) b(I) OR Q(OI) x(I)"
:needed-objects   NIL
:mhelp "a bug in ms90-3"
:other-attributes NIL
:other-remarks "
")


(:name DUP-BUG-2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL P(OI) [FORALL x(I) P(OI) x(I) IMPLIES FORALL x(I) P(OI) x(I)] IMPLIES.FORALL x(I) [S(OI) x(I) AND T(OI) x(I)] IMPLIES FORALL x(I).S(OI) x(I) AND T(OI) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name DUP-EXPL-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) [FORALL y(I) P(OII) x(I) y(I) OR Q(OI) x(I)] IMPLIES P(OII) a(I) b(I) AND P(OII) a(I) c(I) OR Q(OI) a(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name ELUB
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL A(OI).EXISTS r(I) A(OI) r(I) AND EXISTS u(I) FORALL x(I) [A(OI) x(I) IMPLIES ELESS(OII) x(I) u(I)] IMPLIES EXISTS l(I).FORALL x(I) [A(OI) x(I) IMPLIES ELESS(OII) x(I) l(I)] AND FORALL y(I).FORALL x(I) [A(OI) x(I) IMPLIES ELESS(OII) x(I) y(I)] IMPLIES ELESS(OII) l(I) y(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EO1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) [EXISTS u(I) R(OII) x(I) [Q(II) u(I)] EQUIV ~EXISTS v(I) R(OII) [S(II) x(I)].Q(II) v(I)] IMPLIES EXISTS A(OI) FORALL x(I).A(OI) x(I) EQUIV ~A(OI).S(II) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EVEN-ODD
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EVEN(OI) 0(I) AND FORALL n(I) [EVEN(OI) n(I) IMPLIES EVEN(OI).S(II).S(II) n(I)] AND [ODD(OI) [S(II) 0(I)] AND FORALL n(I).ODD(OI) n(I) IMPLIES ODD(OI).S(II).S(II) n(I)] AND IND IMPLIES FORALL n(I).EVEN(OI) n(I) OR ODD(OI) n(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EVEN-ODD-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EVEN(OI) 0(I) AND FORALL n(I) [EVEN(OI) n(I) IMPLIES EVEN(OI).S(II).S(II) n(I)] AND [ODD(OI) [S(II) 0(I)] AND FORALL n(I).ODD(OI) n(I) IMPLIES ODD(OI).S(II).S(II) n(I)] AND IND IMPLIES FORALL n(I).EVEN(OI) n(I) OR ODD(OI) n(I)"
:needed-objects   (IND)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EVEN-ODD-2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EVEN(OI) 0(I) AND FORALL n(I) [EVEN(OI) n(I) IMPLIES EVEN(OI).S(II).S(II) n(I)] AND [ODD(OI) [S(II) 0(I)] AND FORALL n(I).ODD(OI) n(I) IMPLIES ODD(OI).S(II).S(II) n(I)] AND FORALL p(OI) [p(OI) 0(I) AND FORALL x(I) [p(OI) x(I) IMPLIES p(OI).S(II) x(I)] IMPLIES FORALL x(I) p(OI) x(I)] IMPLIES FORALL n(I).EVEN(OI) n(I) OR ODD(OI) n(I)"
:needed-objects   (IND)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EVEN-ODD-3
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EVEN(OI) 0(I) AND FORALL n(I) [EVEN(OI) n(I) IMPLIES EVEN(OI).S(II).S(II) n(I)] AND [ODD(OI) [S(II) 0(I)] AND FORALL n(I).ODD(OI) n(I) IMPLIES ODD(OI).S(II).S(II) n(I)] AND IND AND FORALL n(I) [NUMBER(OI) n(I) EQUIV EVEN(OI) n(I) OR ODD(OI) n(I)] IMPLIES FORALL n(I) NUMBER(OI) n(I)"
:needed-objects   (IND)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EVEN-ODD-4
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EVEN(OI) 0(I) AND FORALL n(I) [EVEN(OI) n(I) IMPLIES EVEN(OI).S(II).S(II) n(I)] AND [ODD(OI) [S(II) 0(I)] AND FORALL n(I).ODD(OI) n(I) IMPLIES ODD(OI).S(II).S(II) n(I)] AND FORALL P(OI) FORALL Q(OI) [P(OI) 0(I) AND Q(OI) 0(I) AND FORALL x(I) [P(OI) x(I) AND Q(OI) x(I) IMPLIES P(OI) [S(II) x(I)] AND Q(OI).S(II) x(I)] IMPLIES FORALL x(I).P(OI) x(I) AND Q(OI) x(I)] AND FORALL n(I) [NUMBER(OI) n(I) EQUIV EVEN(OI) n(I) OR ODD(OI) n(I)] IMPLIES FORALL n(I) NUMBER(OI) n(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name EXPVAR-BUG
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) EXISTS y(I) P(OII) x(I) y(I) IMPLIES FORALL x(I) EXISTS y(I) EXISTS z(I).P(OII) y(I) z(I) AND P(OII) x(I) y(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name HALF-TO-DOUBLE-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "DOUBLE(OII) 0(I) 0(I) AND FORALL x(I) FORALL y(I) [DOUBLE(OII) x(I) y(I) IMPLIES DOUBLE(OII) Sx(I).S(II).S(II) y(I)] AND [HALF(OII) 0(I) 0(I) AND HALF(OII) 0(I) [S(II) 0(I)] AND FORALL x(I) FORALL y(I).HALF(OII) x(I) y(I) IMPLIES HALF(OII) [S(II) x(I)].S(II).S(II) y(I)] AND FORALL Q(OII) FORALL u(I) FORALL v(I) [HALF(OII) u(I) v(I) AND [Q(OII) 0(I) 0(I) AND Q(OII) 0(I) [S(II) 0(I)] AND FORALL x(I) FORALL y(I).Q(OII) x(I) y(I) IMPLIES Q(OII) [S(II) x(I)].S(II).S(II) y(I)] IMPLIES Q(OII) u(I) v(I)] IMPLIES.HALF(OII) u(I) v(I) IMPLIES DOUBLE(OII) v(I) u(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name HALF-TO-DOUBLE-4
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "DOUBLE(OII) 0(I) 0(I) AND FORALL x(I) FORALL y(I) [DOUBLE(OII) x(I) y(I) IMPLIES DOUBLE(OII) [S(II) x(I)].S(II).S(II) y(I)] AND FORALL Q(OII) FORALL u(I) FORALL v(I) [HALF(OII) u(I) v(I) AND [Q(OII) 0(I) 0(I) AND Q(OII) [S(II) 0(I)] 0(I) AND FORALL x(I) FORALL y(I).Q(OII) x(I) y(I) IMPLIES Q(OII) [S(II).S(II) x(I)].S(II) y(I)] IMPLIES Q(OII) u(I) v(I)] IMPLIES FORALL u(I) FORALL v(I).HALF(OII) u(I) v(I) IMPLIES DOUBLE(OII) v(I) u(I) OR DOUBLE(OII) [S(II) v(I)].S(II) u(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name IMV-SOL-12
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) FORALL y(I) [x(I) LESS(OII) y(I) IMPLIES ~y(I) LESS(OII) x(I)] IMPLIES.FORALL A(OI) [EXISTS r(I) A(OI) r(I) AND EXISTS u(I) FORALL x(I) [A(OI) x(I) IMPLIES ~u(I) LESS(OII) x(I)] IMPLIES EXISTS l(I).FORALL x(I) [A(OI) x(I) IMPLIES ~l(I) LESS(OII) x(I)] AND FORALL y(I).FORALL x(I) [A(OI) x(I) IMPLIES ~y(I) LESS(OII) x(I)] IMPLIES ~y(I) LESS(OII) l(I)] AND FORALL x(I) [O(I) LESS(OII) f(II) x(I) IMPLIES EXISTS t(I).t(I) LESS(OII) x(I) AND FORALL s(I).t(I) LESS(OII) s(I) AND ~x(I) LESS(OII) s(I) IMPLIES O(I) LESS(OII) f(II) s(I)] AND FORALL x(I) [f(II) x(I) LESS(OII) O(I) IMPLIES EXISTS t(I).x(I) LESS(OII) t(I) AND ~O(I) LESS(OII) f(II) t(I) AND FORALL s(I).~s(I) LESS(OII) x(I) AND s(I) LESS(OII) t(I) IMPLIES f(II) s(I) LESS(OII) O(I)] IMPLIES.~b(I) LESS(OII) a(I) AND ~O(I) LESS(OII) f(II) a(I) AND ~f(II) b(I) LESS(OII) O(I) IMPLIES EXISTS x(I).~x(I) LESS(OII) a(I) AND ~b(I) LESS(OII) x(I) AND ~O(I) LESS(OII) f(II) x(I) AND ~f(II) x(I) LESS(OII) O(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name IMV-SOL-13
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) FORALL y(I) [x(I) LESS(OII) y(I) IMPLIES ~y(I) LESS(OII) x(I)] IMPLIES.[EXISTS r(I) [~b(I) LESS(OII) r(I) AND ~O(I) LESS(OII) f(II) r(I)] AND EXISTS u(I) FORALL x(I) [~b(I) LESS(OII) x(I) AND ~O(I) LESS(OII) f(II) x(I) IMPLIES ~u(I) LESS(OII) x(I)] IMPLIES EXISTS l(I).FORALL x(I) [~b(I) LESS(OII) x(I) AND ~O(I) LESS(OII) f(II) x(I) IMPLIES ~l(I) LESS(OII) x(I)] AND FORALL y(I).FORALL x(I) [~b(I) LESS(OII) x(I) AND ~O(I) LESS(OII) f(II) x(I) IMPLIES ~y(I) LESS(OII) x(I)] IMPLIES ~y(I) LESS(OII) l(I)] AND FORALL x(I) [O(I) LESS(OII) f(II) x(I) IMPLIES EXISTS t(I).t(I) LESS(OII) x(I) AND FORALL s(I).t(I) LESS(OII) s(I) AND ~x(I) LESS(OII) s(I) IMPLIES O(I) LESS(OII) f(II) s(I)] AND FORALL x(I) [f(II) x(I) LESS(OII) O(I) IMPLIES EXISTS t(I).x(I) LESS(OII) t(I) AND ~O(I) LESS(OII) f(II) t(I) AND FORALL s(I).~s(I) LESS(OII) x(I) AND s(I) LESS(OII) t(I) IMPLIES f(II) s(I) LESS(OII) O(I)] IMPLIES.~b(I) LESS(OII) a(I) AND ~O(I) LESS(OII) f(II) a(I) AND ~f(II) b(I) LESS(OII) O(I) IMPLIES EXISTS x(I).~x(I) LESS(OII) a(I) AND ~b(I) LESS(OII) x(I) AND ~O(I) LESS(OII) f(II) x(I) AND ~f(II) x(I) LESS(OII) O(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name LC1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I).O(I) LESS(OII) f(II) x(I) IMPLIES EXISTS t(I).t(I) LESS(OII) x(I) AND FORALL s(I).t(I) LESS(OII) s(I) AND ELESS(OII) s(I) x(I) IMPLIES O(I) LESS(OII) f(II) s(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name LC2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I).f(II) x(I) LESS(OII) 0(I) IMPLIES EXISTS t(I).x(I) LESS(OII) t(I) AND f(II) t(I) LESS(OII) O(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name LUB
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL A(OI).EXISTS r(I) A(OI) r(I) AND EXISTS u(I) FORALL x(I) [A(OI) x(I) IMPLIES x(I) LESS(OII) u(I)] IMPLIES EXISTS l(I).FORALL x(I) [A(OI) x(I) IMPLIES x(I) LESS(OII) l(I)] AND FORALL y(I).FORALL x(I) [A(OI) x(I) IMPLIES x(I) LESS(OII) y(I)] IMPLIES l(I) LESS(OII) y(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name MIN-QUAN-BUG
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL P(OI) [~P(OI) 0(I) OR FORALL x(I) P(OI) x(I)] IMPLIES ~[S(OI) 0(I) AND T(OI) 0(I)] OR T(OI) a(I) AND S(OI) b(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name PELL26-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[FORALL x(I) [P(OI) x(I) IMPLIES R(OI) x(I)] IMPLIES FORALL x(I).Q(OI) x(I) IMPLIES S(OI) x(I)] AND.FORALL x(I) [Q(OI) x(I) IMPLIES S(OI) x(I)] IMPLIES FORALL x(I).P(OI) x(I) IMPLIES R(OI) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name PELL26-2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[EXISTS x(I) P(OI) x(I) IMPLIES EXISTS x(I) Q(OI) x(I)] AND [EXISTS x(I) Q(OI) x(I) IMPLIES EXISTS x(I) P(OI) x(I)] IMPLIES [FORALL x(I) [P(OI) x(I) IMPLIES R(OI) x(I)] IMPLIES FORALL x(I).Q(OI) x(I) IMPLIES S(OI) x(I)] AND.FORALL x(I) [Q(OI) x(I) IMPLIES S(OI) x(I)] IMPLIES FORALL x(I).P(OI) x(I) IMPLIES R(OI) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name PELL26-4
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[EXISTS x(I) P(OI) x(I) IMPLIES EXISTS x(I) P(OI) x(I)] AND [EXISTS x(I) P(OI) x(I) IMPLIES EXISTS x(I) P(OI) x(I)] IMPLIES FORALL x(I).P(OI) x(I) IMPLIES S(OI) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name QUANTIFIER-BUG
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS x(I) EXISTS y(I).[FORALL u(I) FORALL v(I) P(O) OR Q(O)] AND FORALL z(I) R(O) IMPLIES ~.~P(O) AND ~S(O) OR ~R(O)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name SIMPLE-BUG
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS x(I) P(OI) x(I) IMPLIES EXISTS x(I) P(OI) x(I) IMPLIES FORALL x(I).P(OI) x(I) IMPLIES S(OI) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM116-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) FORALL Y(OA) [X(OA) SUBSET(O(OA)(OA)) Y(OA) IMPLIES K(OA(OA)) X(OA) SUBSET(O(OA)(OA)) K(OA(OA)) Y(OA)] IMPLIES K(OA(OA)) [SETUNION(OA(O(OA))).LAMBDA P(OA).P(OA) SUBSET(O(OA)(OA)) K(OA(OA)) P(OA)] SUBSET(O(OA)(OA)) SETUNION(OA(O(OA))).LAMBDA P(OA).P(OA) SUBSET(O(OA)(OA)) K(OA(OA)) P(OA)"
:needed-objects   NIL
:mhelp "first half of thm116"
:other-attributes NIL
:other-remarks "
")


(:name THM116-1F
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) [FORALL x(A) [X(OA) x(A) IMPLIES EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] IMPLIES FORALL x(A).K(OA(OA)) X(OA) x(A) IMPLIES K(OA(OA)) [LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A)] IMPLIES FORALL x(A).[LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A) IMPLIES K(OA(OA)) [LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM116-1S
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) FORALL Y(OA) [FORALL x(A) [X(OA) x(A) IMPLIES Y(OA) x(A)] IMPLIES FORALL x(A).K(OA(OA)) X(OA) x(A) IMPLIES K(OA(OA)) Y(OA) x(A)] IMPLIES FORALL x(A).K(OA(OA)) [LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A) IMPLIES EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM116-1SS
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) FORALL Y(OA) [FORALL x(A) [X(OA) x(A) IMPLIES Y(OA) x(A)] IMPLIES FORALL x(A).K(OA(OA)) X(OA) x(A) IMPLIES K(OA(OA)) Y(OA) x(A)] IMPLIES FORALL x(A).K(OA(OA)) [LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A) IMPLIES K(OA(OA)) [K(OA(OA)).LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM116-1SSS
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) FORALL Y(OA) [FORALL x(A) [X(OA) x(A) IMPLIES Y(OA) x(A)] IMPLIES FORALL x(A).K(OA(OA)) X(OA) x(A) IMPLIES K(OA(OA)) Y(OA) x(A)] IMPLIES FORALL x(A).[LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A) IMPLIES K(OA(OA)) [LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM116-2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) FORALL Y(OA) [X(OA) SUBSET(O(OA)(OA)) Y(OA) IMPLIES K(OA(OA)) X(OA) SUBSET(O(OA)(OA)) K(OA(OA)) Y(OA)] IMPLIES SETUNION(OA(O(OA))) [LAMBDA P(OA).P(OA) SUBSET(O(OA)(OA)) K(OA(OA)) P(OA)] SUBSET(O(OA)(OA)) K(OA(OA)).SETUNION(OA(O(OA))).LAMBDA P(OA).P(OA) SUBSET(O(OA)(OA)) K(OA(OA)) P(OA)"
:needed-objects   NIL
:mhelp "second half of thm116"
:other-attributes NIL
:other-remarks "
")


(:name THM116-2S
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) FORALL Y(OA) [FORALL x(A) [X(OA) x(A) IMPLIES Y(OA) x(A)] IMPLIES FORALL x(A).K(OA(OA)) X(OA) x(A) IMPLIES K(OA(OA)) Y(OA) x(A)] IMPLIES FORALL x(A).EXISTS S(OA) [FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] IMPLIES K(OA(OA)) [LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A)"
:needed-objects   NIL
:mhelp "The second half of thm116"
:other-attributes NIL
:other-remarks "
")


(:name THM116-2SS
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL X(OA) [FORALL x(A) [X(OA) x(A) IMPLIES [LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A)] IMPLIES FORALL x(A).K(OA(OA)) X(OA) x(A) IMPLIES K(OA(OA)) [LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A)] IMPLIES FORALL x(A).EXISTS S(OA) [FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] IMPLIES K(OA(OA)) [LAMBDA x(A) EXISTS S(OA).FORALL x(A) [S(OA) x(A) IMPLIES K(OA(OA)) S(OA) x(A)] AND S(OA) x(A)] x(A)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM116-C
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL Y(OA) FORALL X(OA) [X(OA) SUBSET(O(OA)(OA)) Y(OA) IMPLIES K(OA(OA)) X(OA) SUBSET(O(OA)(OA)) K(OA(OA)) Y(OA)] IMPLIES K(OA(OA)) [SETUNION(OA(O(OA))).LAMBDA P(OA).P(OA) SUBSET(O(OA)(OA)) K(OA(OA)) P(OA)] EQUIVS(O(OA)(OA)) SETUNION(OA(O(OA))).LAMBDA P(OA).P(OA) SUBSET(O(OA)(OA)) K(OA(OA)) P(OA)"
:needed-objects   NIL
:mhelp "Reverse the order of quantifiers of the premise"
:other-attributes NIL
:other-remarks "
")


(:name THM120-1
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS R(O(OI)(OI)).EXISTS X(OI) EXISTS Y(OI) R(O(OI)(OI)) X(OI) Y(OI) AND REFLEXIVE(O(O(OI)(OI))) R(O(OI)(OI)) AND TRANSITIVE(O(O(OI)(OI))) R(O(OI)(OI))"
:needed-objects   (REFLEXIVE TRANSITIVE)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM120-2
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS R(O(OI)(OI)).EXISTS X(OI) EXISTS Y(OI) R(O(OI)(OI)) X(OI) Y(OI) AND EXISTS U(OI) EXISTS V(OI) [~R(O(OI)(OI)) U(OI) V(OI)] AND REFLEXIVE(O(O(OI)(OI))) R(O(OI)(OI)) AND TRANSITIVE(O(O(OI)(OI))) R(O(OI)(OI))"
:needed-objects   (REFLEXIVE TRANSITIVE)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM120-3
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS R(O(OI)(OI)) [~R(O(OI)(OI)) [LAMBDA x(I) TRUTH] [LAMBDA x(I) FALSEHOOD] AND REFLEXIVE(O(O(OI)(OI))) R(O(OI)(OI)) AND TRANSITIVE(O(O(OI)(OI))) R(O(OI)(OI))] AND TRUTH"
:needed-objects   (REFLEXIVE TRANSITIVE)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM120-4
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS R(O(OI)(OI)) [~R(O(OI)(OI)) [LAMBDA x(I) TRUTH] [LAMBDA x(I) FALSEHOOD] AND REFLEXIVE(O(O(OI)(OI))) R(O(OI)(OI)) AND TRANSITIVE(O(O(OI)(OI))) R(O(OI)(OI))] OR FALSEHOOD"
:needed-objects   (REFLEXIVE TRANSITIVE)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM120-BUG
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "EXISTS R(O(OI)(OI)) FORALL X(OI) FORALL Y(OI).R(O(OI)(OI)) X(OI) Y(OI) AND R(O(OI)(OI)) Y(OI) X(OI) IMPLIES X(OI) EQUIVS(O(OI)(OI)) Y(OI)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM15BA
:type GWFF
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:29:31."
:description "FORALL f(II).EXISTS g(II) [ITERATE+(O(II)(II)) f(II) g(II) AND EXISTS u(I).g(II) u(I) =(OII) u(I) AND FORALL z(I).g(II) z(I) =(OII) z(I) IMPLIES z(I) =(OII) u(I)] IMPLIES EXISTS y(I).f(II) y(I) =(OII) y(I)"
:needed-objects   (ITERATE+)
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM300-BUG
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) FORALL y(I) [DOUBLE(OII) x(I) y(I) IMPLIES DOUBLE(OII) [S(II) x(I)].S(II).S(II) y(I)] IMPLIES.FORALL u(I) FORALL v(I) HALF(OII) u(I) v(I) AND FORALL u(I) FORALL v(I) FORALL p(OIII) [FORALL z(I) p(OIII) 0(I) 0(I) z(I) IMPLIES FORALL z(I) p(OIII) u(I) v(I) z(I)] IMPLIES ~DOUBLE(OII) 0(I) 0(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM300A-EXPAND
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL u(I) FORALL v(I) [HALF(OII) u(I) v(I) AND FORALL p(OII) FORALL q(OII) [[p(OII) 0(I) 0(I) OR q(OII) 0(I) 0(I)] AND [p(OII) [S(II) 0(I)] 0(I) OR q(OII) [S(II) 0(I)] 0(I)] AND FORALL x(I) FORALL y(I) [p(OII) x(I) y(I) OR q(OII) x(I) y(I) IMPLIES p(OII) [S(II).S(II) x(I)] [S(II) y(I)] OR q(OII) [S(II).S(II) x(I)].S(II) y(I)] IMPLIES p(OII) u(I) v(I) OR q(OII) u(I) v(I)] OR ~HALF(OII) u(I) v(I) AND ~FORALL Q(OII).Q(OII) 0(I) 0(I) AND Q(OII) [S(II) 0(I)] 0(I) AND FORALL x(I) FORALL y(I) [Q(OII) x(I) y(I) IMPLIES Q(OII) [S(II).S(II) x(I)].S(II) y(I)] IMPLIES Q(OII) u(I) v(I)] AND DOUBLE(OII) 0(I) 0(I) AND FORALL x(I) FORALL y(I) [DOUBLE(OII) x(I) y(I) IMPLIES DOUBLE(OII) [S(II) x(I)].S(II).S(II) y(I)] IMPLIES FORALL u(I) FORALL v(I).HALF(OII) u(I) v(I) IMPLIES DOUBLE(OII) v(I) u(I) OR DOUBLE(OII) [S(II) v(I)].S(II) u(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name THM48-EXPD
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, April 27, 1999 at 17:30:20."
:description "FORALL x(B) FORALL y(B) [FORALL q(OA) [q(OA) [F(AB) x(B)] IMPLIES q(OA).F(AB) y(B)] IMPLIES FORALL q(OB).q(OB) x(B) IMPLIES q(OB) y(B)] AND FORALL x(C) FORALL y(C) [FORALL q(OB) [q(OB) [G(BC) x(C)] IMPLIES q(OB).G(BC) y(C)] IMPLIES FORALL q(OC).q(OC) x(C) IMPLIES q(OC) y(C)] IMPLIES FORALL x(C) FORALL y(C).FORALL q(OA) [q(OA) [F(AB).G(BC) x(C)] IMPLIES q(OA).F(AB).G(BC) y(C)] IMPLIES FORALL q(OC).q(OC) x(C) IMPLIES q(OC) y(C)"
:needed-objects   NIL
:mhelp "expanded form of thm48"
:other-attributes NIL
:other-remarks "
")


(:name TRY-4
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "DOUBLE(OII) 0(I) 0(I) AND [FORALL x(I) FORALL y(I) [DOUBLE(OII) x(I) y(I) IMPLIES DOUBLE(OII) [S(II) x(I)].S(II).S(II) y(I)] AND FORALL x(I) FORALL y(I) [DOUBLE(OII) x(I) y(I) IMPLIES DOUBLE(OII) [S(II) x(I)].S(II).S(II) y(I)] AND FORALL x(I) FORALL y(I).DOUBLE(OII) x(I) y(I) IMPLIES DOUBLE(OII) [S(II) x(I)].S(II).S(II) y(I)] AND FORALL p(OII) FORALL q(OII) FORALL u(I) FORALL v(I) [HALF(OII) u(I) v(I) AND [p(OII) 0(I) 0(I) AND q(OII) 0(I) 0(I) AND [p(OII) [S(II) 0(I)] 0(I) AND q(OII) [S(II) 0(I)] 0(I)] AND FORALL x(I) FORALL y(I).p(OII) x(I) y(I) AND q(OII) x(I) y(I) IMPLIES p(OII) [S(II).S(II) x(I)] [S(II) y(I)] AND q(OII) [S(II).S(II) x(I)].S(II) y(I)] IMPLIES p(OII) u(I) v(I) AND q(OII) u(I) v(I)] IMPLIES FORALL u(I) FORALL v(I).HALF(OII) u(I) v(I) IMPLIES DOUBLE(OII) v(I) u(I) OR DOUBLE(OII) [S(II) v(I)].S(II) u(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X2126-BUG
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "[FORALL x(I) P(OI) x(I) IMPLIES EXISTS y(I) P(OI) y(I)] AND [EXISTS y(I) P(OI) y(I) IMPLIES FORALL x(I) P(OI) x(I)] IMPLIES.EXISTS y(I) P(OI) y(I) EQUIV FORALL x(I) P(OI) x(I)"
:needed-objects   NIL
:mhelp "a weird bug prevent us from proving thm303 automatically"
:other-attributes NIL
:other-remarks "
")


(:name X2304
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF FIRST-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(I) [M(OI) x(I) EQUIV N(OI) x(I)] EQUIV FORALL x(I) M(OI) x(I) EQUIV FORALL x(I) N(OI) x(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X5310-SUB-R
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r^12(OBB(OB)) FORALL r^13(OBB(OB)) [EXISTS f(B(OB)) FORALL x(OB) FORALL w^4(B) [r^12(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w^4(B) OR r^13(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w^4(B)] OR ~FORALL x(OB) EXISTS y(B) FORALL w^4(B).r^12(OBB(OB)) x(OB) y(B) w^4(B) OR r^13(OBB(OB)) x(OB) y(B) w^4(B)] IMPLIES EXISTS j(B(OB)) FORALL p(OB).EXISTS z(B) p(OB) z(B) IMPLIES p(OB).j(B(OB)) p(OB)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X5310-SUB3
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL x(OB) EXISTS y(B) [EXISTS x(I) p(OI) x(I) IMPLIES p(OI) y(I)] IMPLIES EXISTS f(B(OB)) FORALL x(OB).EXISTS x(I) p(OI) x(I) IMPLIES p(OI) y(I)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X5310-SUB4
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OB(OB)) [FORALL x(OB) EXISTS y(B) [EXISTS x(B) x(OB) x(B) IMPLIES x(OB) y(B)] IMPLIES EXISTS f(B(OB)) FORALL x(OB).EXISTS x(B) x(OB) x(B) IMPLIES x(OB).f(B(OB)) x(OB)] IMPLIES EXISTS j(B(OB)) FORALL p(OB).EXISTS z(B) p(OB) z(B) IMPLIES p(OB).j(B(OB)) p(OB)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X5310B
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r^3(OB(OB)) FORALL r^4(OB(OB)) [FORALL x(OB) EXISTS y(B) [r^3(OB(OB)) x(OB) y(B) OR r^4(OB(OB)) x(OB) y(B)] IMPLIES EXISTS f(B(OB)) FORALL x(OB).r^3(OB(OB)) x(OB) [f(B(OB)) x(OB)] OR r^4(OB(OB)) x(OB).f(B(OB)) x(OB)] IMPLIES EXISTS j(B(OB)) FORALL p(OB).EXISTS z(B) p(OB) z(B) IMPLIES p(OB).j(B(OB)) p(OB)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X5310D
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r^41(OBB(OB)) FORALL r^42(OBB(OB)) [FORALL x(OB) EXISTS y(B) EXISTS w^11(B) [r^41(OBB(OB)) x(OB) y(B) w^11(B) OR r^42(OBB(OB)) x(OB) y(B) w^11(B)] IMPLIES EXISTS f(B(OB)) FORALL x(OB) EXISTS w^11(B).r^41(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w^11(B) OR r^42(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w^11(B)] IMPLIES EXISTS j(B(OB)) FORALL p(OB).EXISTS z(B) p(OB) z(B) IMPLIES p(OB).j(B(OB)) p(OB)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X5310X
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r(OB(OB)) FORALL r^27(OBB(OB)) FORALL r^28(OBB(OB)) [FORALL x(OB) EXISTS y(B) [LAMBDA w^8(OB) LAMBDA w^9(B) FORALL w^11(B).r^27(OBB(OB)) w^8(OB) w^9(B) w^11(B) OR r^28(OBB(OB)) w^8(OB) w^9(B) w^11(B)] x(OB) y(B) IMPLIES EXISTS f(B(OB)) FORALL x(OB) [LAMBDA w^8(OB) LAMBDA w^9(B) FORALL w^11(B).r^27(OBB(OB)) w^8(OB) w^9(B) w^11(B) OR r^28(OBB(OB)) w^8(OB) w^9(B) w^11(B)] x(OB).f(B(OB)) x(OB)] IMPLIES EXISTS j(B(OB)) FORALL p(OB).EXISTS z(B) p(OB) z(B) IMPLIES p(OB).j(B(OB)) p(OB)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


(:name X5310-SUB5
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL r^12(OBB(OB)) FORALL r^13(OBB(OB)) [FORALL x(OB) EXISTS y(B) FORALL w^4(B) [r^12(OBB(OB)) x(OB) y(B) w^4(B) OR r^13(OBB(OB)) x(OB) y(B) w^4(B)] IMPLIES EXISTS f(B(OB)) FORALL x(OB) FORALL w^4(B).r^12(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w^4(B) OR r^13(OBB(OB)) x(OB) [f(B(OB)) x(OB)] w^4(B)] IMPLIES EXISTS j(B(OB)) FORALL p(OB).EXISTS z(B) p(OB) z(B) IMPLIES p(OB).j(B(OB)) p(OB)"
:needed-objects   NIL
:mhelp ""
:other-attributes NIL
:other-remarks "
")


