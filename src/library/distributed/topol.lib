(:name MS03-TF-MODE
:type MODE1
:context UNCLASSIFIED
:keywords NIL
:provability NIL
:proof-date NIL
:description (
   (ADD-TRUTH IF-NEEDED)
   (ALLOW-NONLEAF-CONNS NIL)
   (APPLY-MATCH APPLY-MATCH-ALL-FRDPAIRS)
   (BAD-VAR-CONNECTED-PRUNE T)
   (COUNTSUBS-FIRST NIL)
   (DEFAULT-EXPAND MS03-7)
   (DEFAULT-MATE MS03-7)
   (DEFAULT-MS MS03-7)
   (DELAY-SETVARS NIL)
   (DISSOLVE NIL)
   (DNEG-IMITATION CONST-FLEX)
   (DUP-ALLOWED T)
   (DUPLICATION-STRATEGY DUP-OUTER)
   (DUPLICATION-STRATEGY-PFD DUP-INNER)
   (ETA-RULE T)
   (EXCLUDING-GC-TIME NIL)
   (EXT-SEARCH-LIMIT INFINITY)
   (FIRST-ORDER-MODE-MS NIL)
   (IMITATION-FIRST T)
   (INCLUDE-COINDUCTION-PRINCIPLE T)
   (INCLUDE-INDUCTION-PRINCIPLE T)
   (INITIAL-BKTRACK-LIMIT INFINITY)
   (INTERRUPT-ENABLE T)
   (LAST-MODE-NAME "Mode : EASY-MS03-7-MODE, but with QUERY-USER set to T, and MS03-VERBOSE set to T, and MS03-WEIGHT-PRIMSUB-FALSEHOOD set to 1, and MS03-WEIGHT-PRIMSUB-FALSEHOOD set to 10, and MS03-WEIGHT-PRIMSUB-FALSEHOOD set to 2, and MS03-WEIGHT-IMITATE set to 7, and MS03-WEIGHT-PRIMSUB-FALSEHOOD set to 20, and QUERY-USER set to NIL, and MS03-VERBOSE set to NIL, and MS03-WEIGHT-PRIMSUB-TRUTH set to 20, and QUERY-USER set to T, and MS03-VERBOSE set to T, and RIGHTMARGIN set to 200, and MS03-WEIGHT-FLEXRIGID-O set to 30, and MS03-WEIGHT-DISJ-MATE set to 20, and MS03-WEIGHT-DISJ-MATE set to 10, and MS03-WEIGHT-PRIMSUB-FALSEHOOD set to 2, and MS03-WEIGHT-PRIMSUB-FALSEHOOD set to 1, and MS03-WEIGHT-PRIMSUB-TRUTH set to 1, and QUERY-USER set to NIL, and MS03-VERBOSE set to NIL")
   (LEIBNIZ-SUB-CHECK NIL)
   (MATE-FFPAIR NIL)
   (MATE-UP-TO-NNF T)
   (MATING-VERBOSE MED)
   (MAX-CONSTRAINT-SIZE 3)
   (MAX-DUP-PATHS INFINITY)
   (MAX-MATES 2)
   (MAX-NUM-CONSTRAINTS 2)
   (MAX-PRIM-DEPTH 1)
   (MAX-PRIM-LITS 4)
   (MAX-SEARCH-DEPTH 20)
   (MAX-SEARCH-LIMIT NIL)
   (MAX-SUBSTS-PROJ NIL)
   (MAX-SUBSTS-PROJ-TOTAL NIL)
   (MAX-SUBSTS-QUICK NIL)
   (MAX-SUBSTS-VAR 2)
   (MAX-UTREE-DEPTH 20)
   (MERGE-MINIMIZE-MATING T)
   (MIN-PRIM-DEPTH 1)
   (MIN-PRIM-LITS 2)
   (MIN-QUANT-ETREE T)
   (MIN-QUANTIFIER-SCOPE NIL)
   (MIN-QUICK-DEPTH 3)
   (MONITORFLAG NIL)
   (MS-DIR QUASI-TPS1)
   (MS-INIT-PATH NIL)
   (MS-SPLIT T)
   (MS03-COPY-EXP-INFO 100)
   (MS03-DUP-METHOD 1)
   (MS03-QUICK-EUNIFICATION-LIMIT 50)
   (MS03-SOLVE-RIGID-PARTS T)
   (MS03-SOLVE-RIGID-PARTS-ALLOW-RECONNECTS T)
   (MS03-USE-JFORMS T)
   (MS03-USE-SET-CONSTRAINTS NIL)
   (MS03-VERBOSE NIL)
   (MS03-WEIGHT-BANNED-SELS 300)
   (MS03-WEIGHT-CHANGE-DUPS 3)
   (MS03-WEIGHT-DISJ-EUNIF 10)
   (MS03-WEIGHT-DISJ-MATE 10)
   (MS03-WEIGHT-DISJ-UNIF 10)
   (MS03-WEIGHT-DUP-VAR 300)
   (MS03-WEIGHT-EUNIF1 1)
   (MS03-WEIGHT-EUNIF2 1)
   (MS03-WEIGHT-FLEXFLEXDIFF 3)
   (MS03-WEIGHT-FLEXFLEXDIFF-O 10)
   (MS03-WEIGHT-FLEXFLEXSAME 5)
   (MS03-WEIGHT-FLEXFLEXSAME-O 20)
   (MS03-WEIGHT-FLEXRIGID-BRANCH 6)
   (MS03-WEIGHT-FLEXRIGID-EQN 100)
   (MS03-WEIGHT-FLEXRIGID-FLEXEQN 100)
   (MS03-WEIGHT-FLEXRIGID-MATE 1)
   (MS03-WEIGHT-FLEXRIGID-NOEQN 500)
   (MS03-WEIGHT-FLEXRIGID-O 200)
   (MS03-WEIGHT-IMITATE 7)
   (MS03-WEIGHT-OCCURS-CHECK 150)
   (MS03-WEIGHT-PRIMSUB-FALSEHOOD 1)
   (MS03-WEIGHT-PRIMSUB-FIRST-AND 200)
   (MS03-WEIGHT-PRIMSUB-FIRST-EQUALS 200)
   (MS03-WEIGHT-PRIMSUB-FIRST-EXISTS 200)
   (MS03-WEIGHT-PRIMSUB-FIRST-FORALL 200)
   (MS03-WEIGHT-PRIMSUB-FIRST-NOT-EQUALS 200)
   (MS03-WEIGHT-PRIMSUB-FIRST-NOT-PROJ 500)
   (MS03-WEIGHT-PRIMSUB-FIRST-OR 200)
   (MS03-WEIGHT-PRIMSUB-FIRST-PROJ 500)
   (MS03-WEIGHT-PRIMSUB-NEXT-AND 200)
   (MS03-WEIGHT-PRIMSUB-NEXT-EQUALS 200)
   (MS03-WEIGHT-PRIMSUB-NEXT-EXISTS 200)
   (MS03-WEIGHT-PRIMSUB-NEXT-FORALL 200)
   (MS03-WEIGHT-PRIMSUB-NEXT-NOT-EQUALS 200)
   (MS03-WEIGHT-PRIMSUB-NEXT-NOT-PROJ 500)
   (MS03-WEIGHT-PRIMSUB-NEXT-OR 200)
   (MS03-WEIGHT-PRIMSUB-NEXT-PROJ 500)
   (MS03-WEIGHT-PRIMSUB-TRUTH 1)
   (MS03-WEIGHT-PROJECT 1)
   (MS03-WEIGHT-RIGID-MATE 1)
   (MS03-WEIGHT-RIGIDRIGID-EQN 50)
   (MS03-WEIGHT-RIGIDRIGID-FLEXEQN 60)
   (MS03-WEIGHT-RIGIDRIGID-NOEQN 500)
   (MS03-WEIGHT-RIGIDRIGIDDIFF-O 1)
   (MS03-WEIGHT-RIGIDRIGIDSAME-O 15)
   (MS90-3-DUP-STRATEGY 1)
   (MS90-3-QUICK NIL)
   (MS91-INTERLEAVE 5)
   (NATREE-DEBUG NIL)
   (NEG-PRIM-SUB NIL)
   (NEW-MATING-AFTER-DUP NIL)
   (NUM-FRPAIRS 5)
   (NUM-OF-DUPS 2)
   (OCCURS-CHECK T)
   (ORDER-COMPONENTS T)
   (PR00-ALLOW-SUBNODE-CONNS T)
   (PR00-MAX-SUBSTS-VAR 4)
   (PR00-NUM-ITERATIONS 1)
   (PR00-REQUIRE-ARG-DEPS NIL)
   (PR97C-MAX-ABBREVS 1)
   (PR97C-PRENEX T)
   (PRIM-BDTYPES ("I"))
   (PRIM-BDTYPES-AUTO REPLACE)
   (PRIM-PREFIX PRIM)
   (PRIM-QUANTIFIER T)
   (PRIMSUB-METHOD PR93)
   (PRIMSUB-VAR-SELECT T)
   (PRINT-MATING-COUNTER 300000)
   (PRINTMATEFILE "mate.mss")
   (PRINTMATEFLAG NIL)
   (PRINTMATEFLAG-SLIDES NIL)
   (PRINTMATEOPS ALWAYS-TRUE)
   (PROP-STRATEGY ALLOW-DUPLICATES)
   (PRUNING NIL)
   (QUERY-USER NIL)
   (RANK-EPROOF-FN NUM-VPATHS-RANKING)
   (RECORDFLAGS (LAST-MODE-NAME DEFAULT-MS MEASUREMENTS SHORT-SITE-NAME MACHINE-TYPE LISP-IMPLEMENTATION-TYPE MAX-SEARCH-LIMIT SEARCH-TIME-LIMIT MAX-UTREE-DEPTH MAX-SEARCH-DEPTH MIN-QUICK-DEPTH INITIAL-BKTRACK-LIMIT NUM-FRPAIRS FIRST-ORDER-MODE-MS NUM-OF-DUPS MAX-MATES ORDER-COMPONENTS REWRITE-DEFNS REWRITE-EQUALITIES REMOVE-LEIBNIZ PRIM-QUANTIFIER PRIM-BDTYPES NEG-PRIM-SUB OCCURS-CHECK RANK-EPROOF-FN SKOLEM-DEFAULT MIN-QUANTIFIER-SCOPE))
   (REDUCE-DOUBLE-NEG T)
   (REMOVE-LEIBNIZ T)
   (REWRITE-DEFNS (EAGER))
   (REWRITE-EQUALITIES ALL)
   (REWRITE-EQUIVS 1)
   (RIGID-PATH-CK T)
   (RULEP-WFFEQ WFFEQ-AB)
   (SEARCH-COMPLETE-PATHS NIL)
   (SEARCH-TIME-LIMIT 60)
   (SHOW-TIME T)
   (SKOLEM-DEFAULT NIL)
   (STOP-AT-TSN T)
   (SUBSUMPTION-CHECK NIL)
   (SUBSUMPTION-DEPTH INFINITY)
   (SUBSUMPTION-NODES LP-NODES)
   (TIMING-NAMED NIL)
   (TOTAL-NUM-OF-DUPS NIL)
   (TRUTHVALUES-HACK NIL)
   (UNI-SEARCH-HEURISTIC BREADTH-FIRST)
   (UNIF-COUNTER 0)
   (UNIF-COUNTER-OUTPUT 0)
   (UNIF-TRIGGER NIL)
   (UNIFY-VERBOSE MED)
   (USE-DIY NIL)
   (USE-EXT-LEMMAS NIL)
   (USE-FAST-PROP-SEARCH T)
   (USE-RULEP T)
   (USE-SYMSIMP T)
   (WHICH-CONSTRAINTS (MAX MIN))) 
:needed-objects   NIL
:mhelp "Mode that tries primsubs on TRUTH and FALSEHOOD early."
:other-attributes NIL
:other-remarks "
")


(:name THM625
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, March  1, 2004 at 23:09:06."
:description "TOPOLOGY-X(O(O(OA))) OPEN(O(OA)) IMPLIES OPEN(O(OA)).LAMBDA y(A) FALSEHOOD"
:needed-objects   (TOPOLOGY-X)
:mhelp "Empty sets are open in any topology (using ext defn topology-x of topology)"
:other-attributes NIL
:other-remarks "
")


(:name THM625A
:type GWFF
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITH-DEFN PROVEN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Monday, March  1, 2004 at 23:09:57."
:description "FORALL K(O(OA)) [K(O(OA)) SUBSET(O(O(OA))(O(OA))) OPEN(O(OA)) IMPLIES OPEN(O(OA)).SETUNION(OA(O(OA))) K(O(OA))] IMPLIES OPEN(O(OA)).LAMBDA x(A) FALSEHOOD"
:needed-objects   NIL
:mhelp "THM625 without assuming full topology axioms."
:other-attributes NIL
:other-remarks "
")


(:name CLOSED
:type ABBR
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA T(O(OA)) LAMBDA S(OA) FORALL R(OA).R(OA) =(O(OA)(OA)) COMPLEMENT(OA(OA)) S(OA) IMPLIES T(O(OA)) R(OA)"
:needed-objects   (COMPLEMENT)
:mhelp "Assumes T is a TOPOLOGY"
:other-attributes ((TYPELIST ("A")) (TYPE "O(OA)(O(OA))") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name CLOSED-THM1
:type GWFF
:context UNCLASSIFIED
:keywords (PROVEN WITH-EQUALITY WITH-DEFN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, October 28, 1997 at 11:54:18."
:description "FORALL T(O(OA)) FORALL S(O(OB)) FORALL f(BA).TOPOLOGY(O(O(OA))) T(O(OA)) AND TOPOLOGY(O(O(OB))) S(O(OB)) AND CONTINUOUS(O(BA)(O(OA))(O(OB))) S(O(OB)) T(O(OA)) f(BA) IMPLIES FORALL X(OB).CLOSED(O(OB)(O(OB))) S(O(OB)) X(OB) IMPLIES FORALL Y(OA).Y(OA) =(O(OA)(OA)) LAMBDA b(A) X(OB) [f(BA) b(A)] IMPLIES CLOSED(O(OA)(O(OA))) T(O(OA)) Y(OA)"
:needed-objects   (TOPOLOGY CLOSED CONTINUOUS)
:mhelp "The inverse image of a closed set under a continuous function is closed. Easily proven 
with MM 1, NOD 0, MSV 3, MSD 4, when TOPOLOGY is not instantiated. Much harder otherwise"
:other-attributes NIL
:other-remarks "
")


(:name COMPLEMENT
:type ABBR
:context UNCLASSIFIED
:keywords (WITHOUT-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA S(OA) LAMBDA x(A).~S(OA) x(A)"
:needed-objects   NIL
:mhelp ""
:other-attributes ((TYPELIST ("A")) (TYPE "OA(OA)") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name CONTINUOUS
:type ABBR
:context UNCLASSIFIED
:keywords (WITH-EQUALITY WITHOUT-DEFN UNPROVEN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA S(O(OB)) LAMBDA T(O(OA)) LAMBDA f(BA) FORALL X(OB).S(O(OB)) X(OB) IMPLIES FORALL Y(OA).Y(OA) =(O(OA)(OA)) LAMBDA b(A) X(OB) [f(BA) b(A)] IMPLIES T(O(OA)) Y(OA)"
:needed-objects   NIL
:mhelp "f is a continuous function from T to S (where T and S are topological spaces)"
:other-attributes ((TYPELIST ("A" "B")) (TYPE "O(BA)(O(OA))(O(OB))") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name DISCRETE-TOPOLOGY
:type GWFF
:context UNCLASSIFIED
:keywords (PROVEN WITH-EQUALITY WITH-DEFN AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability "Automatic expansion proof and translation to natural deduction"
:proof-date "Tuesday, October 28, 1997 at 12:45:10."
:description "TOPOLOGY(O(O(OA))).LAMBDA X(OA) TRUTH"
:needed-objects   (TOPOLOGY)
:mhelp "The discrete topology really is a topology."
:other-attributes NIL
:other-remarks "
")


(:name NBHD
:type ABBR
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA T(O(OA)) LAMBDA S(OA) LAMBDA x(A) EXISTS N(OA).T(O(OA)) N(OA) AND N(OA) SUBSET(O(OA)(OA)) S(OA) AND N(OA) x(A)"
:needed-objects   NIL
:mhelp "Given T a topology, S a set, x a point, NBHD T S x <=> S is a neighbourhood of x in T"
:other-attributes ((TYPELIST ("A")) (TYPE "OA(OA)(O(OA))") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


(:name NBHD-THM
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL T(O(OA)).TOPOLOGY(O(O(OA))) T(O(OA)) IMPLIES FORALL S(OA).T(O(OA)) S(OA) EQUIV FORALL x(A).S(OA) x(A) IMPLIES EXISTS R(OA).NBHD(OA(OA)(O(OA))) T(O(OA)) R(OA) x(A) AND R(OA) SUBSET(O(OA)(OA)) S(OA)"
:needed-objects   (TOPOLOGY NBHD)
:mhelp "A set is open iff it contains a neighbourhood of each of its points.
Probably not provable automatically"
:other-attributes NIL
:other-remarks "
")


(:name NBHD-THM1
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL T(O(OA)).FORALL S(OA) FORALL R(OA) [LAMBDA q(OA) [T(O(OA)) q(OA) AND q(OA) SUBSET(O(OA)(OA)) S(OA)] SUBSET(O(O(OA))(O(OA))) T(O(OA)) AND R(OA) =(O(OA)(OA)) SETUNION(OA(O(OA))) [LAMBDA q(OA).T(O(OA)) q(OA) AND q(OA) SUBSET(O(OA)(OA)) S(OA)] IMPLIES T(O(OA)) R(OA)] IMPLIES FORALL S(OA).T(O(OA)) S(OA) EQUIV FORALL x(A).S(OA) x(A) IMPLIES EXISTS R(OA).NBHD(OA(OA)(O(OA))) T(O(OA)) R(OA) x(A) AND R(OA) SUBSET(O(OA)(OA)) S(OA)"
:needed-objects   (NBHD)
:mhelp "A set is open iff it contains a neighbourhood of each of its points.
Uses just the required axiom from TOPOLOGY. This is NBHD-THM2 with the 
correct primsub inserted. Can prove this even with SKOLEM-DEFAULT SK1.
Needs MSV2 MSD 5 MM 1 NOD 0"
:other-attributes NIL
:other-remarks "
")


(:name NBHD-THM2A
:type GWFF
:context UNCLASSIFIED
:keywords (UNPROVEN WITHOUT-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-HIGHER-ORDER)
:provability NIL
:proof-date NIL
:description "FORALL T(O(OA)).FORALL K(O(OA)) [K(O(OA)) SUBSET(O(O(OA))(O(OA))) T(O(OA)) IMPLIES T(O(OA)).SETUNION(OA(O(OA))) K(O(OA))] IMPLIES FORALL S(OA).T(O(OA)) S(OA) EQUIV FORALL x(A).S(OA) x(A) IMPLIES EXISTS R(OA).NBHD(OA(OA)(O(OA))) T(O(OA)) R(OA) x(A) AND R(OA) SUBSET(O(OA)(OA)) S(OA)"
:needed-objects   (NBHD)
:mhelp "A set is open iff it contains a neighbourhood of each of its points.
Uses just the required axiom from TOPOLOGY. Not provable because of the problem
with equality (need both LEIB and EXT to make this work)."
:other-attributes NIL
:other-remarks "
")


(:name TOPOLOGY
:type ABBR
:context UNCLASSIFIED
:keywords (UNPROVEN WITH-EQUALITY WITH-DEFN NO-AUTO-PROOF HIGHER-ORDER SK-FIRST-ORDER)
:provability NIL
:proof-date NIL
:description "LAMBDA X(O(OA)).FORALL R(OA) [R(OA) =(O(OA)(OA)) LAMBDA x(A) FALSEHOOD IMPLIES X(O(OA)) R(OA)] AND FORALL R(OA) [R(OA) =(O(OA)(OA)) LAMBDA x(A) [~FALSEHOOD] IMPLIES X(O(OA)) R(OA)] AND FORALL K(O(OA)) FORALL R(OA) [K(O(OA)) SUBSET(O(O(OA))(O(OA))) X(O(OA)) AND R(OA) =(O(OA)(OA)) SETUNION(OA(O(OA))) K(O(OA)) IMPLIES X(O(OA)) R(OA)] AND FORALL Y(OA) FORALL Z(OA) FORALL S(OA).X(O(OA)) Y(OA) AND X(O(OA)) Z(OA) AND S(OA) =(O(OA)(OA)) Y(OA) INTERSECT(OA(OA)(OA)) Z(OA) IMPLIES X(O(OA)) S(OA)"
:needed-objects   NIL
:mhelp ""
:other-attributes ((TYPELIST ("A")) (TYPE "O(O(OA))") (PRINTNOTYPE T) (FO-SINGLE-SYMBOL T))
:other-remarks "
")


